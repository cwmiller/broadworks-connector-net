using System;
using System.Threading;
using System.Threading.Tasks;
using BroadWorksConnector.Ocip.Models;
using BroadWorksConnector.Ocip.Models.C;

namespace BroadWorksConnector
{
    public static class OCISchemaDeprecatedExtensions
    {

        /// <summary>
        /// AuthenticationVerifyRequest is used to authenticate a user using the user Id and password. The response is a AuthenticationVerifyResponse or an ErrorResponse
        /// Replaced By: AuthenticationVerifyRequest14sp8
        /// </summary>
        [Obsolete("This method is deprecated. Use AuthenticationVerifyRequestAsync instead.")]
        public static async Task<AuthenticationVerifyResponse> AuthenticationVerifyRequest(this OcipClient client, AuthenticationVerifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as AuthenticationVerifyResponse;
        }

        /// <summary>
        /// AuthenticationVerifyRequest is used to authenticate a user using the user Id and password. The response is a AuthenticationVerifyResponse or an ErrorResponse
        /// Replaced By: AuthenticationVerifyRequest14sp8
        /// </summary>
        public static async Task<AuthenticationVerifyResponse> AuthenticationVerifyRequestAsync(this OcipClient client, AuthenticationVerifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as AuthenticationVerifyResponse;
        }
        /// <summary>
        /// AuthenticationVerifyRequest14sp8 is used to authenticate a user either by userId/password, userId/sip username/sip password,
        /// dn/passcode or a token previously authorized with the ExternalAuthenticationAuthorizeTokenRequest.
        /// The phone number may be any DN associated with a user.
        /// 
        /// The response is a AuthenticationVerifyResponse14sp8 or an ErrorResponse
        /// 
        /// Replaced by AuthenticationVerifyRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use AuthenticationVerifyRequest14sp8Async instead.")]
        public static async Task<AuthenticationVerifyResponse14sp8> AuthenticationVerifyRequest14sp8(this OcipClient client, AuthenticationVerifyRequest14sp8 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as AuthenticationVerifyResponse14sp8;
        }

        /// <summary>
        /// AuthenticationVerifyRequest14sp8 is used to authenticate a user either by userId/password, userId/sip username/sip password,
        /// dn/passcode or a token previously authorized with the ExternalAuthenticationAuthorizeTokenRequest.
        /// The phone number may be any DN associated with a user.
        /// 
        /// The response is a AuthenticationVerifyResponse14sp8 or an ErrorResponse
        /// 
        /// Replaced by AuthenticationVerifyRequest22.
        /// </summary>
        public static async Task<AuthenticationVerifyResponse14sp8> AuthenticationVerifyRequest14sp8Async(this OcipClient client, AuthenticationVerifyRequest14sp8 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as AuthenticationVerifyResponse14sp8;
        }
        /// <summary>
        /// AuthenticationVerifyRequest21sp1 is used to authenticate a user either by userId/password, userId/sip username/sip password,
        /// dn/passcode, lineport/password or a token previously authorized with the ExternalAuthenticationAuthorizeTokenRequest.
        /// The phone number may be any DN associated with a user.
        /// The lineport may be any lineport associated with a user.
        /// The password used for the lineport is the user's password associated with userId.
        /// 
        /// The response is a AuthenticationVerifyResponse21sp1 or an ErrorResponse
        /// Replaced by AuthenticationVerifyRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use AuthenticationVerifyRequest21sp1Async instead.")]
        public static async Task<AuthenticationVerifyResponse21sp1> AuthenticationVerifyRequest21sp1(this OcipClient client, AuthenticationVerifyRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as AuthenticationVerifyResponse21sp1;
        }

        /// <summary>
        /// AuthenticationVerifyRequest21sp1 is used to authenticate a user either by userId/password, userId/sip username/sip password,
        /// dn/passcode, lineport/password or a token previously authorized with the ExternalAuthenticationAuthorizeTokenRequest.
        /// The phone number may be any DN associated with a user.
        /// The lineport may be any lineport associated with a user.
        /// The password used for the lineport is the user's password associated with userId.
        /// 
        /// The response is a AuthenticationVerifyResponse21sp1 or an ErrorResponse
        /// Replaced by AuthenticationVerifyRequest22V2.
        /// </summary>
        public static async Task<AuthenticationVerifyResponse21sp1> AuthenticationVerifyRequest21sp1Async(this OcipClient client, AuthenticationVerifyRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as AuthenticationVerifyResponse21sp1;
        }
        /// <summary>
        /// AuthenticationVerifyRequest22 is used to authenticate a user either by userId/password, userId/sip username/sip password,
        /// dn/passcode, lineport/password or a token previously authorized with the ExternalAuthenticationAuthorizeTokenRequest.
        /// The phone number may be any DN associated with a user.
        /// The lineport may be any lineport associated with a user.
        /// The password used for the lineport is the user's password associated with userId.
        /// 
        /// The response is a AuthenticationVerifyResponse22 or an ErrorResponse
        /// Replaced by AuthenticationVerifyRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use AuthenticationVerifyRequest22Async instead.")]
        public static async Task<AuthenticationVerifyResponse22> AuthenticationVerifyRequest22(this OcipClient client, AuthenticationVerifyRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as AuthenticationVerifyResponse22;
        }

        /// <summary>
        /// AuthenticationVerifyRequest22 is used to authenticate a user either by userId/password, userId/sip username/sip password,
        /// dn/passcode, lineport/password or a token previously authorized with the ExternalAuthenticationAuthorizeTokenRequest.
        /// The phone number may be any DN associated with a user.
        /// The lineport may be any lineport associated with a user.
        /// The password used for the lineport is the user's password associated with userId.
        /// 
        /// The response is a AuthenticationVerifyResponse22 or an ErrorResponse
        /// Replaced by AuthenticationVerifyRequest22V2.
        /// </summary>
        public static async Task<AuthenticationVerifyResponse22> AuthenticationVerifyRequest22Async(this OcipClient client, AuthenticationVerifyRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as AuthenticationVerifyResponse22;
        }
        /// <summary>
        /// AuthenticationVerifyRequest22V2 is used to authenticate a user either by userId/password, userId/sip username/sip password,
        /// dn/passcode, lineport/password or a token previously authorized with the ExternalAuthenticationAuthorizeTokenRequest.
        /// The phone number may be any DN associated with a user.
        /// The lineport may be any lineport associated with a user.
        /// The password used for the lineport is the user's password associated with userId.
        /// 
        /// The response is a AuthenticationVerifyResponse22V2 or an ErrorResponse
        /// Replaced by AuthenticationVerifyRequest22V3
        /// </summary>
        [Obsolete("This method is deprecated. Use AuthenticationVerifyRequest22V2Async instead.")]
        public static async Task<AuthenticationVerifyResponse22V2> AuthenticationVerifyRequest22V2(this OcipClient client, AuthenticationVerifyRequest22V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as AuthenticationVerifyResponse22V2;
        }

        /// <summary>
        /// AuthenticationVerifyRequest22V2 is used to authenticate a user either by userId/password, userId/sip username/sip password,
        /// dn/passcode, lineport/password or a token previously authorized with the ExternalAuthenticationAuthorizeTokenRequest.
        /// The phone number may be any DN associated with a user.
        /// The lineport may be any lineport associated with a user.
        /// The password used for the lineport is the user's password associated with userId.
        /// 
        /// The response is a AuthenticationVerifyResponse22V2 or an ErrorResponse
        /// Replaced by AuthenticationVerifyRequest22V3
        /// </summary>
        public static async Task<AuthenticationVerifyResponse22V2> AuthenticationVerifyRequest22V2Async(this OcipClient client, AuthenticationVerifyRequest22V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as AuthenticationVerifyResponse22V2;
        }
        /// <summary>
        /// AuthenticationVerifyRequest22V3 is used to authenticate a user either by userId/password, userId/sip username/sip password,
        /// dn/passcode, lineport/password or a token previously authorized with the ExternalAuthenticationAuthorizeTokenRequest.
        /// The phone number may be any DN associated with a user.
        /// The lineport may be any lineport associated with a user.
        /// The password used for the lineport is the user's password associated with userId.
        /// 
        /// The response is a AuthenticationVerifyResponse22V3 or an ErrorResponse
        /// Replaced by AuthenticationVerifyRequest22V4.
        /// </summary>
        [Obsolete("This method is deprecated. Use AuthenticationVerifyRequest22V3Async instead.")]
        public static async Task<AuthenticationVerifyResponse22V3> AuthenticationVerifyRequest22V3(this OcipClient client, AuthenticationVerifyRequest22V3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as AuthenticationVerifyResponse22V3;
        }

        /// <summary>
        /// AuthenticationVerifyRequest22V3 is used to authenticate a user either by userId/password, userId/sip username/sip password,
        /// dn/passcode, lineport/password or a token previously authorized with the ExternalAuthenticationAuthorizeTokenRequest.
        /// The phone number may be any DN associated with a user.
        /// The lineport may be any lineport associated with a user.
        /// The password used for the lineport is the user's password associated with userId.
        /// 
        /// The response is a AuthenticationVerifyResponse22V3 or an ErrorResponse
        /// Replaced by AuthenticationVerifyRequest22V4.
        /// </summary>
        public static async Task<AuthenticationVerifyResponse22V3> AuthenticationVerifyRequest22V3Async(this OcipClient client, AuthenticationVerifyRequest22V3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as AuthenticationVerifyResponse22V3;
        }
        /// <summary>
        /// Get the address and credentials of the File Repository hosting the requested access device file. Also get the file name and path on the File Repository. The response is either a DeviceManagementFileAuthLocationGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use DeviceManagementFileAuthLocationGetRequestAsync instead.")]
        public static async Task<DeviceManagementFileAuthLocationGetResponse> DeviceManagementFileAuthLocationGetRequest(this OcipClient client, DeviceManagementFileAuthLocationGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as DeviceManagementFileAuthLocationGetResponse;
        }

        /// <summary>
        /// Get the address and credentials of the File Repository hosting the requested access device file. Also get the file name and path on the File Repository. The response is either a DeviceManagementFileAuthLocationGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<DeviceManagementFileAuthLocationGetResponse> DeviceManagementFileAuthLocationGetRequestAsync(this OcipClient client, DeviceManagementFileAuthLocationGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as DeviceManagementFileAuthLocationGetResponse;
        }
        /// <summary>
        /// Get the address and credentials of the File Repository hosting the requested access device file.
        /// Also get the file name and path on the File Repository.
        /// The response is either a DeviceManagementFileAuthLocationGetResponse17 or an ErrorResponse.
        /// 
        /// Replaced by: DeviceManagementFileAuthLocationGetRequest18
        /// </summary>
        [Obsolete("This method is deprecated. Use DeviceManagementFileAuthLocationGetRequest17Async instead.")]
        public static async Task<DeviceManagementFileAuthLocationGetResponse17> DeviceManagementFileAuthLocationGetRequest17(this OcipClient client, DeviceManagementFileAuthLocationGetRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as DeviceManagementFileAuthLocationGetResponse17;
        }

        /// <summary>
        /// Get the address and credentials of the File Repository hosting the requested access device file.
        /// Also get the file name and path on the File Repository.
        /// The response is either a DeviceManagementFileAuthLocationGetResponse17 or an ErrorResponse.
        /// 
        /// Replaced by: DeviceManagementFileAuthLocationGetRequest18
        /// </summary>
        public static async Task<DeviceManagementFileAuthLocationGetResponse17> DeviceManagementFileAuthLocationGetRequest17Async(this OcipClient client, DeviceManagementFileAuthLocationGetRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as DeviceManagementFileAuthLocationGetResponse17;
        }
        /// <summary>
        /// Get the address and credentials of the File Repository hosting the requested access device file.
        /// Also get the file name and path on the File Repository.
        /// The response is either a DeviceManagementFileAuthLocationGetResponse18 or an ErrorResponse.
        /// Replaced by: DeviceManagementFileAuthLocationGetRequest21.
        /// </summary>
        [Obsolete("This method is deprecated. Use DeviceManagementFileAuthLocationGetRequest18Async instead.")]
        public static async Task<DeviceManagementFileAuthLocationGetResponse18> DeviceManagementFileAuthLocationGetRequest18(this OcipClient client, DeviceManagementFileAuthLocationGetRequest18 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as DeviceManagementFileAuthLocationGetResponse18;
        }

        /// <summary>
        /// Get the address and credentials of the File Repository hosting the requested access device file.
        /// Also get the file name and path on the File Repository.
        /// The response is either a DeviceManagementFileAuthLocationGetResponse18 or an ErrorResponse.
        /// Replaced by: DeviceManagementFileAuthLocationGetRequest21.
        /// </summary>
        public static async Task<DeviceManagementFileAuthLocationGetResponse18> DeviceManagementFileAuthLocationGetRequest18Async(this OcipClient client, DeviceManagementFileAuthLocationGetRequest18 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as DeviceManagementFileAuthLocationGetResponse18;
        }
        /// <summary>
        /// Get the address and credentials of the File Repository hosting the requested access device file.
        /// Also get the file name and path on the File Repository.
        /// The response is either a DeviceManagementFileAuthLocationGetResponse20sp1 or an ErrorResponse.
        /// Replaced by: DeviceManagementFileAuthLocationGetRequest21sp1.
        /// </summary>
        [Obsolete("This method is deprecated. Use DeviceManagementFileAuthLocationGetRequest20sp1Async instead.")]
        public static async Task<DeviceManagementFileAuthLocationGetResponse20sp1> DeviceManagementFileAuthLocationGetRequest20sp1(this OcipClient client, DeviceManagementFileAuthLocationGetRequest20sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as DeviceManagementFileAuthLocationGetResponse20sp1;
        }

        /// <summary>
        /// Get the address and credentials of the File Repository hosting the requested access device file.
        /// Also get the file name and path on the File Repository.
        /// The response is either a DeviceManagementFileAuthLocationGetResponse20sp1 or an ErrorResponse.
        /// Replaced by: DeviceManagementFileAuthLocationGetRequest21sp1.
        /// </summary>
        public static async Task<DeviceManagementFileAuthLocationGetResponse20sp1> DeviceManagementFileAuthLocationGetRequest20sp1Async(this OcipClient client, DeviceManagementFileAuthLocationGetRequest20sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as DeviceManagementFileAuthLocationGetResponse20sp1;
        }
        /// <summary>
        /// Get the address and credentials of the File Repository hosting the requested access device file.
        /// Also get the file name and path on the File Repository.
        /// The response is either DeviceManagementFileAuthLocationGetResponse21 or ErrorResponse.
        /// The following elements are only used in AS data mode and will fail in XS data mode:
        /// deviceToken
        /// 
        /// Replaced by: DeviceManagementFileAuthLocationGetRequest21sp1.
        /// </summary>
        [Obsolete("This method is deprecated. Use DeviceManagementFileAuthLocationGetRequest21Async instead.")]
        public static async Task<DeviceManagementFileAuthLocationGetResponse21> DeviceManagementFileAuthLocationGetRequest21(this OcipClient client, DeviceManagementFileAuthLocationGetRequest21 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as DeviceManagementFileAuthLocationGetResponse21;
        }

        /// <summary>
        /// Get the address and credentials of the File Repository hosting the requested access device file.
        /// Also get the file name and path on the File Repository.
        /// The response is either DeviceManagementFileAuthLocationGetResponse21 or ErrorResponse.
        /// The following elements are only used in AS data mode and will fail in XS data mode:
        /// deviceToken
        /// 
        /// Replaced by: DeviceManagementFileAuthLocationGetRequest21sp1.
        /// </summary>
        public static async Task<DeviceManagementFileAuthLocationGetResponse21> DeviceManagementFileAuthLocationGetRequest21Async(this OcipClient client, DeviceManagementFileAuthLocationGetRequest21 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as DeviceManagementFileAuthLocationGetResponse21;
        }
        /// <summary>
        /// Get the address and credentials of the File Repository hosting the requested access device file.
        /// Also get the file name and path on the File Repository.
        /// The response is either DeviceManagementFileAuthLocationGetResponse21sp1 or ErrorResponse.
        /// The following elements are only used in AS data mode and will fail in XS data mode:
        /// deviceToken
        /// Replaced by DeviceManagementFileAuthLocationGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use DeviceManagementFileAuthLocationGetRequest21sp1Async instead.")]
        public static async Task<DeviceManagementFileAuthLocationGetResponse21sp1> DeviceManagementFileAuthLocationGetRequest21sp1(this OcipClient client, DeviceManagementFileAuthLocationGetRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as DeviceManagementFileAuthLocationGetResponse21sp1;
        }

        /// <summary>
        /// Get the address and credentials of the File Repository hosting the requested access device file.
        /// Also get the file name and path on the File Repository.
        /// The response is either DeviceManagementFileAuthLocationGetResponse21sp1 or ErrorResponse.
        /// The following elements are only used in AS data mode and will fail in XS data mode:
        /// deviceToken
        /// Replaced by DeviceManagementFileAuthLocationGetRequest22
        /// </summary>
        public static async Task<DeviceManagementFileAuthLocationGetResponse21sp1> DeviceManagementFileAuthLocationGetRequest21sp1Async(this OcipClient client, DeviceManagementFileAuthLocationGetRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as DeviceManagementFileAuthLocationGetResponse21sp1;
        }
        /// <summary>
        /// Get the address and credentials of the File Repository hosting the requested access device file.
        /// Also get the file name and path on the File Repository.
        /// The response is either DeviceManagementFileAuthLocationGetResponse22 or ErrorResponse.
        /// The following elements are only used in AS data mode and will fail in XS data mode:
        /// deviceToken
        /// </summary>
        [Obsolete("This method is deprecated. Use DeviceManagementFileAuthLocationGetRequest22Async instead.")]
        public static async Task<DeviceManagementFileAuthLocationGetResponse22> DeviceManagementFileAuthLocationGetRequest22(this OcipClient client, DeviceManagementFileAuthLocationGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as DeviceManagementFileAuthLocationGetResponse22;
        }

        /// <summary>
        /// Get the address and credentials of the File Repository hosting the requested access device file.
        /// Also get the file name and path on the File Repository.
        /// The response is either DeviceManagementFileAuthLocationGetResponse22 or ErrorResponse.
        /// The following elements are only used in AS data mode and will fail in XS data mode:
        /// deviceToken
        /// </summary>
        public static async Task<DeviceManagementFileAuthLocationGetResponse22> DeviceManagementFileAuthLocationGetRequest22Async(this OcipClient client, DeviceManagementFileAuthLocationGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as DeviceManagementFileAuthLocationGetResponse22;
        }
        /// <summary>
        /// Get the address and credentials of the File Repository hosting the requested access device file.
        /// Also get the file name and path on the File Repository.
        /// The response is either DeviceManagementFileAuthLocationGetResponse22V2 or ErrorResponse.
        /// The following elements are only used in AS data mode and will fail in XS data mode:
        /// deviceToken
        /// The following elements are only used in XS data mode and will be ignored in AS data mode:
        /// fileNameLookup
        /// fileNameOnDisk
        /// </summary>
        [Obsolete("This method is deprecated. Use DeviceManagementFileAuthLocationGetRequest22V2Async instead.")]
        public static async Task<DeviceManagementFileAuthLocationGetResponse22V2> DeviceManagementFileAuthLocationGetRequest22V2(this OcipClient client, DeviceManagementFileAuthLocationGetRequest22V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as DeviceManagementFileAuthLocationGetResponse22V2;
        }

        /// <summary>
        /// Get the address and credentials of the File Repository hosting the requested access device file.
        /// Also get the file name and path on the File Repository.
        /// The response is either DeviceManagementFileAuthLocationGetResponse22V2 or ErrorResponse.
        /// The following elements are only used in AS data mode and will fail in XS data mode:
        /// deviceToken
        /// The following elements are only used in XS data mode and will be ignored in AS data mode:
        /// fileNameLookup
        /// fileNameOnDisk
        /// </summary>
        public static async Task<DeviceManagementFileAuthLocationGetResponse22V2> DeviceManagementFileAuthLocationGetRequest22V2Async(this OcipClient client, DeviceManagementFileAuthLocationGetRequest22V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as DeviceManagementFileAuthLocationGetResponse22V2;
        }
        /// <summary>
        /// Request a summary table of all Mobile Subscriber Directory Numbers in an enterprise.
        /// If the responsePagingControl element is not provided, the paging startIndex will be set to 1
        /// by default, and the  responsePageSize will be set to  the maximum ResponsePageSize by default.
        /// If no sortOrder is included the response is sorted by Mobile Number ascending by default.
        /// Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.
        /// Then the search criteria are logically ORed together.
        /// The department in both the search criteria and sort by fields refer to the department of the user.
        /// The response is either EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListResponse or ErrorResponse.
        /// Replaced by: EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListRequestAsync instead.")]
        public static async Task<EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListResponse> EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListRequest(this OcipClient client, EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListResponse;
        }

        /// <summary>
        /// Request a summary table of all Mobile Subscriber Directory Numbers in an enterprise.
        /// If the responsePagingControl element is not provided, the paging startIndex will be set to 1
        /// by default, and the  responsePageSize will be set to  the maximum ResponsePageSize by default.
        /// If no sortOrder is included the response is sorted by Mobile Number ascending by default.
        /// Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.
        /// Then the search criteria are logically ORed together.
        /// The department in both the search criteria and sort by fields refer to the department of the user.
        /// The response is either EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListResponse or ErrorResponse.
        /// Replaced by: EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListRequest22
        /// </summary>
        public static async Task<EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListResponse> EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListRequestAsync(this OcipClient client, EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAssignmentPagedSortedListResponse;
        }
        /// <summary>
        /// Request a list of available Mobile Subscriber Directory Numbers not yet assigned to any user.
        /// The response is either EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListResponse or ErrorResponse.
        /// Replaced by: EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListRequestAsync instead.")]
        public static async Task<EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListResponse> EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListRequest(this OcipClient client, EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListResponse;
        }

        /// <summary>
        /// Request a list of available Mobile Subscriber Directory Numbers not yet assigned to any user.
        /// The response is either EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListResponse or ErrorResponse.
        /// Replaced by: EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListRequest22
        /// </summary>
        public static async Task<EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListResponse> EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListRequestAsync(this OcipClient client, EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailableListResponse;
        }
        /// <summary>
        /// Request a list of available Mobile Subscriber Directory Numbers not yet assigned to any user.
        /// If the responsePagingControl element is not provided, the paging startIndex will be set to 1
        /// by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.
        /// If no sortOrder is included the response is sorted by Mobile Number ascending by default.
        /// Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.
        /// Then the search criteria are logically ORed together.
        /// The response is either EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListResponse or ErrorResponse.
        /// Replaced by: EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListRequestAsync instead.")]
        public static async Task<EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListResponse> EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListRequest(this OcipClient client, EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListResponse;
        }

        /// <summary>
        /// Request a list of available Mobile Subscriber Directory Numbers not yet assigned to any user.
        /// If the responsePagingControl element is not provided, the paging startIndex will be set to 1
        /// by default, and the responsePageSize will be set to the maximum ResponsePageSize by default.
        /// If no sortOrder is included the response is sorted by Mobile Number ascending by default.
        /// Multiple search criteria are logically ANDed together unless the searchCriteriaModeOr option is included.
        /// Then the search criteria are logically ORed together.
        /// The response is either EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListResponse or ErrorResponse.
        /// Replaced by: EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListRequest22
        /// </summary>
        public static async Task<EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListResponse> EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListRequestAsync(this OcipClient client, EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as EnterpriseBroadWorksMobilityMobileSubscriberDirectoryNumberGetAvailablePagedSortedListResponse;
        }
        /// <summary>
        /// Request the enterprise level data associated with Call Center Agents Unavailable Code Settings.
        /// The response is either an EnterpriseCallCenterAgentUnavailableCodeSettingsGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by EnterpriseCallCenterAgentUnavailableCodeSettingsGetRequest17sp4.
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterpriseCallCenterAgentUnavailableCodeSettingsGetRequestAsync instead.")]
        public static async Task<EnterpriseCallCenterAgentUnavailableCodeSettingsGetResponse> EnterpriseCallCenterAgentUnavailableCodeSettingsGetRequest(this OcipClient client, EnterpriseCallCenterAgentUnavailableCodeSettingsGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as EnterpriseCallCenterAgentUnavailableCodeSettingsGetResponse;
        }

        /// <summary>
        /// Request the enterprise level data associated with Call Center Agents Unavailable Code Settings.
        /// The response is either an EnterpriseCallCenterAgentUnavailableCodeSettingsGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by EnterpriseCallCenterAgentUnavailableCodeSettingsGetRequest17sp4.
        /// </summary>
        public static async Task<EnterpriseCallCenterAgentUnavailableCodeSettingsGetResponse> EnterpriseCallCenterAgentUnavailableCodeSettingsGetRequestAsync(this OcipClient client, EnterpriseCallCenterAgentUnavailableCodeSettingsGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as EnterpriseCallCenterAgentUnavailableCodeSettingsGetResponse;
        }
        /// <summary>
        /// Request to get an enterprise level call center enhanced reporting setting.
        /// The response is either an EnterpriseCallCenterEnhancedReportingGetResponse or an ErrorResponse.
        /// 
        /// Replaced by EnterpriseCallCenterEnhancedReportingGetRequest19
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterpriseCallCenterEnhancedReportingGetRequestAsync instead.")]
        public static async Task<EnterpriseCallCenterEnhancedReportingGetResponse> EnterpriseCallCenterEnhancedReportingGetRequest(this OcipClient client, EnterpriseCallCenterEnhancedReportingGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as EnterpriseCallCenterEnhancedReportingGetResponse;
        }

        /// <summary>
        /// Request to get an enterprise level call center enhanced reporting setting.
        /// The response is either an EnterpriseCallCenterEnhancedReportingGetResponse or an ErrorResponse.
        /// 
        /// Replaced by EnterpriseCallCenterEnhancedReportingGetRequest19
        /// </summary>
        public static async Task<EnterpriseCallCenterEnhancedReportingGetResponse> EnterpriseCallCenterEnhancedReportingGetRequestAsync(this OcipClient client, EnterpriseCallCenterEnhancedReportingGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as EnterpriseCallCenterEnhancedReportingGetResponse;
        }
        /// <summary>
        /// Request to modify enterprise level call center enhanced reporting settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by EnterpriseCallCenterEnhancedReportingModifyRequest19
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterpriseCallCenterEnhancedReportingModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> EnterpriseCallCenterEnhancedReportingModifyRequest(this OcipClient client, EnterpriseCallCenterEnhancedReportingModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify enterprise level call center enhanced reporting settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by EnterpriseCallCenterEnhancedReportingModifyRequest19
        /// </summary>
        public static async Task<SuccessResponse> EnterpriseCallCenterEnhancedReportingModifyRequestAsync(this OcipClient client, EnterpriseCallCenterEnhancedReportingModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request the enterprise level data associated with Call Center.
        /// The response is either an EnterpriseCallCenterGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by EnterpriseCallCenterGetRequest17sp4.
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterpriseCallCenterGetRequestAsync instead.")]
        public static async Task<EnterpriseCallCenterGetResponse> EnterpriseCallCenterGetRequest(this OcipClient client, EnterpriseCallCenterGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as EnterpriseCallCenterGetResponse;
        }

        /// <summary>
        /// Request the enterprise level data associated with Call Center.
        /// The response is either an EnterpriseCallCenterGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by EnterpriseCallCenterGetRequest17sp4.
        /// </summary>
        public static async Task<EnterpriseCallCenterGetResponse> EnterpriseCallCenterGetRequestAsync(this OcipClient client, EnterpriseCallCenterGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as EnterpriseCallCenterGetResponse;
        }
        /// <summary>
        /// Request the enterprise level data associated with Call Center Monitoring.
        /// The response is either an EnterpriseCallCenterMonitoringGetResponse or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterpriseCallCenterMonitoringGetRequestAsync instead.")]
        public static async Task<EnterpriseCallCenterMonitoringGetResponse> EnterpriseCallCenterMonitoringGetRequest(this OcipClient client, EnterpriseCallCenterMonitoringGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as EnterpriseCallCenterMonitoringGetResponse;
        }

        /// <summary>
        /// Request the enterprise level data associated with Call Center Monitoring.
        /// The response is either an EnterpriseCallCenterMonitoringGetResponse or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<EnterpriseCallCenterMonitoringGetResponse> EnterpriseCallCenterMonitoringGetRequestAsync(this OcipClient client, EnterpriseCallCenterMonitoringGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as EnterpriseCallCenterMonitoringGetResponse;
        }
        /// <summary>
        /// Request to add an enterprise trunk in an enterprise.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: EnterpriseEnterpriseTrunkAddRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterpriseEnterpriseTrunkAddRequestAsync instead.")]
        public static async Task<SuccessResponse> EnterpriseEnterpriseTrunkAddRequest(this OcipClient client, EnterpriseEnterpriseTrunkAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add an enterprise trunk in an enterprise.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: EnterpriseEnterpriseTrunkAddRequest21
        /// </summary>
        public static async Task<SuccessResponse> EnterpriseEnterpriseTrunkAddRequestAsync(this OcipClient client, EnterpriseEnterpriseTrunkAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get an enterprise trunk
        /// The response is either an EnterpriseEnterpriseTrunkGetResponse or an ErrorResponse.
        /// Replaced by: EnterpriseEnterpriseTrunkGetRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterpriseEnterpriseTrunkGetRequestAsync instead.")]
        public static async Task<EnterpriseEnterpriseTrunkGetResponse> EnterpriseEnterpriseTrunkGetRequest(this OcipClient client, EnterpriseEnterpriseTrunkGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as EnterpriseEnterpriseTrunkGetResponse;
        }

        /// <summary>
        /// Request to get an enterprise trunk
        /// The response is either an EnterpriseEnterpriseTrunkGetResponse or an ErrorResponse.
        /// Replaced by: EnterpriseEnterpriseTrunkGetRequest21
        /// </summary>
        public static async Task<EnterpriseEnterpriseTrunkGetResponse> EnterpriseEnterpriseTrunkGetRequestAsync(this OcipClient client, EnterpriseEnterpriseTrunkGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as EnterpriseEnterpriseTrunkGetResponse;
        }
        /// <summary>
        /// Request to get an enterprise trunk
        /// The response is either an EnterpriseEnterpriseTrunkGetResponse21 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterpriseEnterpriseTrunkGetRequest21Async instead.")]
        public static async Task<EnterpriseEnterpriseTrunkGetResponse21> EnterpriseEnterpriseTrunkGetRequest21(this OcipClient client, EnterpriseEnterpriseTrunkGetRequest21 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as EnterpriseEnterpriseTrunkGetResponse21;
        }

        /// <summary>
        /// Request to get an enterprise trunk
        /// The response is either an EnterpriseEnterpriseTrunkGetResponse21 or an ErrorResponse.
        /// </summary>
        public static async Task<EnterpriseEnterpriseTrunkGetResponse21> EnterpriseEnterpriseTrunkGetRequest21Async(this OcipClient client, EnterpriseEnterpriseTrunkGetRequest21 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as EnterpriseEnterpriseTrunkGetResponse21;
        }
        /// <summary>
        /// Request a table containing the phone directory for an enterprise.
        /// The directory includes all users in the enterprise and all entries in the enterprise common phone list.
        /// It is possible to search by various criteria to restrict the number of rows returned.
        /// Multiple search criteria are logically ANDed together.
        /// The response is either EnterprisePhoneDirectoryGetListResponse or ErrorResponse.
        /// Replace by: EnterprisePhoneDirectoryGetListRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterprisePhoneDirectoryGetListRequestAsync instead.")]
        public static async Task<EnterprisePhoneDirectoryGetListResponse> EnterprisePhoneDirectoryGetListRequest(this OcipClient client, EnterprisePhoneDirectoryGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as EnterprisePhoneDirectoryGetListResponse;
        }

        /// <summary>
        /// Request a table containing the phone directory for an enterprise.
        /// The directory includes all users in the enterprise and all entries in the enterprise common phone list.
        /// It is possible to search by various criteria to restrict the number of rows returned.
        /// Multiple search criteria are logically ANDed together.
        /// The response is either EnterprisePhoneDirectoryGetListResponse or ErrorResponse.
        /// Replace by: EnterprisePhoneDirectoryGetListRequest17
        /// </summary>
        public static async Task<EnterprisePhoneDirectoryGetListResponse> EnterprisePhoneDirectoryGetListRequestAsync(this OcipClient client, EnterprisePhoneDirectoryGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as EnterprisePhoneDirectoryGetListResponse;
        }
        /// <summary>
        /// Request a table containing the phone directory for an enterprise.
        /// The directory includes all users in the enterprise and all entries in the enterprise common phone list.
        /// It is possible to search by various criteria to restrict the number of rows returned.
        /// Multiple search criteria are logically ANDed together.
        /// The response is either EnterprisePhoneDirectoryGetListResponse17 or ErrorResponse.
        /// 
        /// Replaced by: EnterprisePhoneDirectoryGetListRequest18
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterprisePhoneDirectoryGetListRequest17Async instead.")]
        public static async Task<EnterprisePhoneDirectoryGetListResponse17> EnterprisePhoneDirectoryGetListRequest17(this OcipClient client, EnterprisePhoneDirectoryGetListRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as EnterprisePhoneDirectoryGetListResponse17;
        }

        /// <summary>
        /// Request a table containing the phone directory for an enterprise.
        /// The directory includes all users in the enterprise and all entries in the enterprise common phone list.
        /// It is possible to search by various criteria to restrict the number of rows returned.
        /// Multiple search criteria are logically ANDed together.
        /// The response is either EnterprisePhoneDirectoryGetListResponse17 or ErrorResponse.
        /// 
        /// Replaced by: EnterprisePhoneDirectoryGetListRequest18
        /// </summary>
        public static async Task<EnterprisePhoneDirectoryGetListResponse17> EnterprisePhoneDirectoryGetListRequest17Async(this OcipClient client, EnterprisePhoneDirectoryGetListRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as EnterprisePhoneDirectoryGetListResponse17;
        }
        /// <summary>
        /// Request a table containing the phone directory for an enterprise.
        /// The directory includes all users in the enterprise and all entries in the enterprise common phone list.
        /// It is possible to search by various criteria to restrict the number of rows returned.
        /// Multiple search criteria are logically ANDed together.
        /// The response is either EnterprisePhoneDirectoryGetListResponse17sp3 or ErrorResponse.
        /// 
        /// Replaced by: EnterprisePhoneDirectoryGetListRequest18
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterprisePhoneDirectoryGetListRequest17sp3Async instead.")]
        public static async Task<EnterprisePhoneDirectoryGetListResponse17sp3> EnterprisePhoneDirectoryGetListRequest17sp3(this OcipClient client, EnterprisePhoneDirectoryGetListRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as EnterprisePhoneDirectoryGetListResponse17sp3;
        }

        /// <summary>
        /// Request a table containing the phone directory for an enterprise.
        /// The directory includes all users in the enterprise and all entries in the enterprise common phone list.
        /// It is possible to search by various criteria to restrict the number of rows returned.
        /// Multiple search criteria are logically ANDed together.
        /// The response is either EnterprisePhoneDirectoryGetListResponse17sp3 or ErrorResponse.
        /// 
        /// Replaced by: EnterprisePhoneDirectoryGetListRequest18
        /// </summary>
        public static async Task<EnterprisePhoneDirectoryGetListResponse17sp3> EnterprisePhoneDirectoryGetListRequest17sp3Async(this OcipClient client, EnterprisePhoneDirectoryGetListRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as EnterprisePhoneDirectoryGetListResponse17sp3;
        }
        /// <summary>
        /// Request a table containing the phone directory for an enterprise.
        /// The directory includes all users in the enterprise and all entries in the enterprise common phone list.
        /// It is possible to search by various criteria to restrict the number of rows returned.
        /// Multiple search criteria are logically ANDed together.
        /// The response is either EnterprisePhoneDirectoryGetPagedListResponse or ErrorResponse.
        /// 
        /// Replaced By: EnterprisePhoneDirectoryGetPagedSortedListRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterprisePhoneDirectoryGetPagedListRequestAsync instead.")]
        public static async Task<EnterprisePhoneDirectoryGetPagedListResponse> EnterprisePhoneDirectoryGetPagedListRequest(this OcipClient client, EnterprisePhoneDirectoryGetPagedListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as EnterprisePhoneDirectoryGetPagedListResponse;
        }

        /// <summary>
        /// Request a table containing the phone directory for an enterprise.
        /// The directory includes all users in the enterprise and all entries in the enterprise common phone list.
        /// It is possible to search by various criteria to restrict the number of rows returned.
        /// Multiple search criteria are logically ANDed together.
        /// The response is either EnterprisePhoneDirectoryGetPagedListResponse or ErrorResponse.
        /// 
        /// Replaced By: EnterprisePhoneDirectoryGetPagedSortedListRequest
        /// </summary>
        public static async Task<EnterprisePhoneDirectoryGetPagedListResponse> EnterprisePhoneDirectoryGetPagedListRequestAsync(this OcipClient client, EnterprisePhoneDirectoryGetPagedListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as EnterprisePhoneDirectoryGetPagedListResponse;
        }
        /// <summary>
        /// Request to add a session admission control group for the enterprise.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterpriseSessionAdmissionControlGroupAddRequestAsync instead.")]
        public static async Task<SuccessResponse> EnterpriseSessionAdmissionControlGroupAddRequest(this OcipClient client, EnterpriseSessionAdmissionControlGroupAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a session admission control group for the enterprise.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> EnterpriseSessionAdmissionControlGroupAddRequestAsync(this OcipClient client, EnterpriseSessionAdmissionControlGroupAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get a session admission control group for the enterprise.
        /// The response is either an EnterpriseSessionAdmissionControlGroupGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterpriseSessionAdmissionControlGroupGetRequestAsync instead.")]
        public static async Task<EnterpriseSessionAdmissionControlGroupGetResponse> EnterpriseSessionAdmissionControlGroupGetRequest(this OcipClient client, EnterpriseSessionAdmissionControlGroupGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as EnterpriseSessionAdmissionControlGroupGetResponse;
        }

        /// <summary>
        /// Request to get a session admission control group for the enterprise.
        /// The response is either an EnterpriseSessionAdmissionControlGroupGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<EnterpriseSessionAdmissionControlGroupGetResponse> EnterpriseSessionAdmissionControlGroupGetRequestAsync(this OcipClient client, EnterpriseSessionAdmissionControlGroupGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as EnterpriseSessionAdmissionControlGroupGetResponse;
        }
        /// <summary>
        /// Request to get a session admission control group for the enterprise.
        /// The response is either an EnterpriseSessionAdmissionControlGroupGetResponse19sp1 or an ErrorResponse.
        /// 
        /// Replaced by: EnterpriseSessionAdmissionControlGroupGetRequest21sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterpriseSessionAdmissionControlGroupGetRequest19sp1Async instead.")]
        public static async Task<EnterpriseSessionAdmissionControlGroupGetResponse19sp1> EnterpriseSessionAdmissionControlGroupGetRequest19sp1(this OcipClient client, EnterpriseSessionAdmissionControlGroupGetRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as EnterpriseSessionAdmissionControlGroupGetResponse19sp1;
        }

        /// <summary>
        /// Request to get a session admission control group for the enterprise.
        /// The response is either an EnterpriseSessionAdmissionControlGroupGetResponse19sp1 or an ErrorResponse.
        /// 
        /// Replaced by: EnterpriseSessionAdmissionControlGroupGetRequest21sp1
        /// </summary>
        public static async Task<EnterpriseSessionAdmissionControlGroupGetResponse19sp1> EnterpriseSessionAdmissionControlGroupGetRequest19sp1Async(this OcipClient client, EnterpriseSessionAdmissionControlGroupGetRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as EnterpriseSessionAdmissionControlGroupGetResponse19sp1;
        }
        /// <summary>
        /// Request to get a session admission control group for the enterprise.
        /// The response is either an EnterpriseSessionAdmissionControlGroupGetResponse21sp1 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterpriseSessionAdmissionControlGroupGetRequest21sp1Async instead.")]
        public static async Task<EnterpriseSessionAdmissionControlGroupGetResponse21sp1> EnterpriseSessionAdmissionControlGroupGetRequest21sp1(this OcipClient client, EnterpriseSessionAdmissionControlGroupGetRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as EnterpriseSessionAdmissionControlGroupGetResponse21sp1;
        }

        /// <summary>
        /// Request to get a session admission control group for the enterprise.
        /// The response is either an EnterpriseSessionAdmissionControlGroupGetResponse21sp1 or an ErrorResponse.
        /// </summary>
        public static async Task<EnterpriseSessionAdmissionControlGroupGetResponse21sp1> EnterpriseSessionAdmissionControlGroupGetRequest21sp1Async(this OcipClient client, EnterpriseSessionAdmissionControlGroupGetRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as EnterpriseSessionAdmissionControlGroupGetResponse21sp1;
        }
        /// <summary>
        /// Request the enterprise level data associated with Voice VPN.
        /// The response is either a EnterpriseVoiceVPNGetResponse or an ErrorResponse.
        /// Replaced By: EnterpriseVoiceVPNGetRequest14sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use EnterpriseVoiceVPNGetRequestAsync instead.")]
        public static async Task<EnterpriseVoiceVPNGetResponse> EnterpriseVoiceVPNGetRequest(this OcipClient client, EnterpriseVoiceVPNGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as EnterpriseVoiceVPNGetResponse;
        }

        /// <summary>
        /// Request the enterprise level data associated with Voice VPN.
        /// The response is either a EnterpriseVoiceVPNGetResponse or an ErrorResponse.
        /// Replaced By: EnterpriseVoiceVPNGetRequest14sp3
        /// </summary>
        public static async Task<EnterpriseVoiceVPNGetResponse> EnterpriseVoiceVPNGetRequestAsync(this OcipClient client, EnterpriseVoiceVPNGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as EnterpriseVoiceVPNGetResponse;
        }
        /// <summary>
        /// Request to get the list of device files managed by the Device Management System, on a per-device profile basis.
        /// The response is either GroupAccessDeviceFileGetListResponse or ErrorResponse.
        /// Replaced By: GroupAccessDeviceFileGetListRequest14sp8
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAccessDeviceFileGetListRequestAsync instead.")]
        public static async Task<GroupAccessDeviceFileGetListResponse> GroupAccessDeviceFileGetListRequest(this OcipClient client, GroupAccessDeviceFileGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAccessDeviceFileGetListResponse;
        }

        /// <summary>
        /// Request to get the list of device files managed by the Device Management System, on a per-device profile basis.
        /// The response is either GroupAccessDeviceFileGetListResponse or ErrorResponse.
        /// Replaced By: GroupAccessDeviceFileGetListRequest14sp8
        /// </summary>
        public static async Task<GroupAccessDeviceFileGetListResponse> GroupAccessDeviceFileGetListRequestAsync(this OcipClient client, GroupAccessDeviceFileGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAccessDeviceFileGetListResponse;
        }
        /// <summary>
        /// Request to get a group device profile file.
        /// The response is either GroupAccessDeviceFileGetResponse or ErrorResponse.
        /// Replaced By: GroupAccessDeviceFileGetRequest14sp8
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAccessDeviceFileGetRequestAsync instead.")]
        public static async Task<GroupAccessDeviceFileGetResponse> GroupAccessDeviceFileGetRequest(this OcipClient client, GroupAccessDeviceFileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAccessDeviceFileGetResponse;
        }

        /// <summary>
        /// Request to get a group device profile file.
        /// The response is either GroupAccessDeviceFileGetResponse or ErrorResponse.
        /// Replaced By: GroupAccessDeviceFileGetRequest14sp8
        /// </summary>
        public static async Task<GroupAccessDeviceFileGetResponse> GroupAccessDeviceFileGetRequestAsync(this OcipClient client, GroupAccessDeviceFileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAccessDeviceFileGetResponse;
        }
        /// <summary>
        /// Request to get a group device profile file.
        /// The response is either GroupAccessDeviceFileGetResponse14sp8 or ErrorResponse.
        /// Replaced by: GroupAccessDeviceFileGetRequest16sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAccessDeviceFileGetRequest14sp8Async instead.")]
        public static async Task<GroupAccessDeviceFileGetResponse14sp8> GroupAccessDeviceFileGetRequest14sp8(this OcipClient client, GroupAccessDeviceFileGetRequest14sp8 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAccessDeviceFileGetResponse14sp8;
        }

        /// <summary>
        /// Request to get a group device profile file.
        /// The response is either GroupAccessDeviceFileGetResponse14sp8 or ErrorResponse.
        /// Replaced by: GroupAccessDeviceFileGetRequest16sp1
        /// </summary>
        public static async Task<GroupAccessDeviceFileGetResponse14sp8> GroupAccessDeviceFileGetRequest14sp8Async(this OcipClient client, GroupAccessDeviceFileGetRequest14sp8 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAccessDeviceFileGetResponse14sp8;
        }
        /// <summary>
        /// Request to get a group device profile file.
        /// The response is either GroupAccessDeviceFileGetResponse16sp1 or ErrorResponse.
        /// 
        /// Replaced by: GroupAccessDeviceFileGetRequest20
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAccessDeviceFileGetRequest16sp1Async instead.")]
        public static async Task<GroupAccessDeviceFileGetResponse16sp1> GroupAccessDeviceFileGetRequest16sp1(this OcipClient client, GroupAccessDeviceFileGetRequest16sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAccessDeviceFileGetResponse16sp1;
        }

        /// <summary>
        /// Request to get a group device profile file.
        /// The response is either GroupAccessDeviceFileGetResponse16sp1 or ErrorResponse.
        /// 
        /// Replaced by: GroupAccessDeviceFileGetRequest20
        /// </summary>
        public static async Task<GroupAccessDeviceFileGetResponse16sp1> GroupAccessDeviceFileGetRequest16sp1Async(this OcipClient client, GroupAccessDeviceFileGetRequest16sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAccessDeviceFileGetResponse16sp1;
        }
        /// <summary>
        /// Request to modify a specified group access device file.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: GroupAccessDeviceFileModifyRequest14sp8
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAccessDeviceFileModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupAccessDeviceFileModifyRequest(this OcipClient client, GroupAccessDeviceFileModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a specified group access device file.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: GroupAccessDeviceFileModifyRequest14sp8
        /// </summary>
        public static async Task<SuccessResponse> GroupAccessDeviceFileModifyRequestAsync(this OcipClient client, GroupAccessDeviceFileModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Requests the list of available access devices for assignment to a user
        /// within a group. The list includes devices created at the system, service provider, and group levels.
        /// The response is either GroupAccessDeviceGetAvailableDetailListResponse14 or
        /// ErrorResponse.
        /// 
        /// Replaced by: GroupAccessDeviceGetAvailableDetailListRequest19.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAccessDeviceGetAvailableDetailListRequest14Async instead.")]
        public static async Task<GroupAccessDeviceGetAvailableDetailListResponse14> GroupAccessDeviceGetAvailableDetailListRequest14(this OcipClient client, GroupAccessDeviceGetAvailableDetailListRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAccessDeviceGetAvailableDetailListResponse14;
        }

        /// <summary>
        /// Requests the list of available access devices for assignment to a user
        /// within a group. The list includes devices created at the system, service provider, and group levels.
        /// The response is either GroupAccessDeviceGetAvailableDetailListResponse14 or
        /// ErrorResponse.
        /// 
        /// Replaced by: GroupAccessDeviceGetAvailableDetailListRequest19.
        /// </summary>
        public static async Task<GroupAccessDeviceGetAvailableDetailListResponse14> GroupAccessDeviceGetAvailableDetailListRequest14Async(this OcipClient client, GroupAccessDeviceGetAvailableDetailListRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAccessDeviceGetAvailableDetailListResponse14;
        }
        /// <summary>
        /// Requests the list of access devices in a group.
        /// The response is either GroupAccessDeviceGetPagedSortedListResponse or ErrorResponse.
        /// If no sortOrder is included, the response is sorted by Device Name ascending
        /// by default.  If the responsePagingControl element is not provided, the paging startIndex
        /// will be set to 1 by default, and the responsePageSize will be set to the maximum
        /// responsePageSize by default.
        /// Multiple search criteria are logically ANDed together unless the
        /// searchCriteriaModeOr option is included. Then the search criteria are logically
        /// ORed together.
        /// The getVisualDeviceManagementAPIDevicesOnly element can only be set when CloudPBX is licenced.
        /// If the getVisualDeviceManagementAPIDevicesOnly element is not set, all devices are returned with Visual Device Management API flag set to empty.
        /// If the getVisualDeviceManagementAPIDevicesOnly element is set to true, only SIP devices supporting Visual Device Management API are returned.
        /// If the getVisualDeviceManagementAPIDevicesOnly element is set to false, all SIP devices are returned with their current Visual Device Management API flag value.
        /// 
        /// Replaced by GroupAccessDeviceGetPagedSortedListRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAccessDeviceGetPagedSortedListRequestAsync instead.")]
        public static async Task<GroupAccessDeviceGetPagedSortedListResponse> GroupAccessDeviceGetPagedSortedListRequest(this OcipClient client, GroupAccessDeviceGetPagedSortedListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAccessDeviceGetPagedSortedListResponse;
        }

        /// <summary>
        /// Requests the list of access devices in a group.
        /// The response is either GroupAccessDeviceGetPagedSortedListResponse or ErrorResponse.
        /// If no sortOrder is included, the response is sorted by Device Name ascending
        /// by default.  If the responsePagingControl element is not provided, the paging startIndex
        /// will be set to 1 by default, and the responsePageSize will be set to the maximum
        /// responsePageSize by default.
        /// Multiple search criteria are logically ANDed together unless the
        /// searchCriteriaModeOr option is included. Then the search criteria are logically
        /// ORed together.
        /// The getVisualDeviceManagementAPIDevicesOnly element can only be set when CloudPBX is licenced.
        /// If the getVisualDeviceManagementAPIDevicesOnly element is not set, all devices are returned with Visual Device Management API flag set to empty.
        /// If the getVisualDeviceManagementAPIDevicesOnly element is set to true, only SIP devices supporting Visual Device Management API are returned.
        /// If the getVisualDeviceManagementAPIDevicesOnly element is set to false, all SIP devices are returned with their current Visual Device Management API flag value.
        /// 
        /// Replaced by GroupAccessDeviceGetPagedSortedListRequest22.
        /// </summary>
        public static async Task<GroupAccessDeviceGetPagedSortedListResponse> GroupAccessDeviceGetPagedSortedListRequestAsync(this OcipClient client, GroupAccessDeviceGetPagedSortedListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAccessDeviceGetPagedSortedListResponse;
        }
        /// <summary>
        /// Requests the configuration of a specified group access device.
        /// The response is either GroupAccessDeviceGetResponse14 or ErrorResponse.
        /// Replaced By: GroupAccessDeviceGetRequest14sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAccessDeviceGetRequest14Async instead.")]
        public static async Task<GroupAccessDeviceGetResponse14> GroupAccessDeviceGetRequest14(this OcipClient client, GroupAccessDeviceGetRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAccessDeviceGetResponse14;
        }

        /// <summary>
        /// Requests the configuration of a specified group access device.
        /// The response is either GroupAccessDeviceGetResponse14 or ErrorResponse.
        /// Replaced By: GroupAccessDeviceGetRequest14sp3
        /// </summary>
        public static async Task<GroupAccessDeviceGetResponse14> GroupAccessDeviceGetRequest14Async(this OcipClient client, GroupAccessDeviceGetRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAccessDeviceGetResponse14;
        }
        /// <summary>
        /// Requests the configuration of a specified group access device.
        /// The response is either GroupAccessDeviceGetResponse14sp3 or ErrorResponse.
        /// Replaced By: GroupAccessDeviceGetRequest14sp6
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAccessDeviceGetRequest14sp3Async instead.")]
        public static async Task<GroupAccessDeviceGetResponse14sp3> GroupAccessDeviceGetRequest14sp3(this OcipClient client, GroupAccessDeviceGetRequest14sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAccessDeviceGetResponse14sp3;
        }

        /// <summary>
        /// Requests the configuration of a specified group access device.
        /// The response is either GroupAccessDeviceGetResponse14sp3 or ErrorResponse.
        /// Replaced By: GroupAccessDeviceGetRequest14sp6
        /// </summary>
        public static async Task<GroupAccessDeviceGetResponse14sp3> GroupAccessDeviceGetRequest14sp3Async(this OcipClient client, GroupAccessDeviceGetRequest14sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAccessDeviceGetResponse14sp3;
        }
        /// <summary>
        /// Requests the configuration of a specified group access device.
        /// The response is either GroupAccessDeviceGetResponse14sp6 or ErrorResponse.
        /// Replaced by: GroupAccessDeviceGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAccessDeviceGetRequest14sp6Async instead.")]
        public static async Task<GroupAccessDeviceGetResponse14sp6> GroupAccessDeviceGetRequest14sp6(this OcipClient client, GroupAccessDeviceGetRequest14sp6 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAccessDeviceGetResponse14sp6;
        }

        /// <summary>
        /// Requests the configuration of a specified group access device.
        /// The response is either GroupAccessDeviceGetResponse14sp6 or ErrorResponse.
        /// Replaced by: GroupAccessDeviceGetRequest16
        /// </summary>
        public static async Task<GroupAccessDeviceGetResponse14sp6> GroupAccessDeviceGetRequest14sp6Async(this OcipClient client, GroupAccessDeviceGetRequest14sp6 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAccessDeviceGetResponse14sp6;
        }
        /// <summary>
        /// Requests the configuration of a specified group access device.
        /// The response is either GroupAccessDeviceGetResponse16 or ErrorResponse.
        /// 
        /// Replaced by: GroupAccessDeviceGetRequest18sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAccessDeviceGetRequest16Async instead.")]
        public static async Task<GroupAccessDeviceGetResponse16> GroupAccessDeviceGetRequest16(this OcipClient client, GroupAccessDeviceGetRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAccessDeviceGetResponse16;
        }

        /// <summary>
        /// Requests the configuration of a specified group access device.
        /// The response is either GroupAccessDeviceGetResponse16 or ErrorResponse.
        /// 
        /// Replaced by: GroupAccessDeviceGetRequest18sp1
        /// </summary>
        public static async Task<GroupAccessDeviceGetResponse16> GroupAccessDeviceGetRequest16Async(this OcipClient client, GroupAccessDeviceGetRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAccessDeviceGetResponse16;
        }
        /// <summary>
        /// Requests the Group administrator's policy settings.
        /// The response is either GroupAdminGetPolicyResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAdminGetPolicyRequestAsync instead.")]
        public static async Task<GroupAdminGetPolicyResponse> GroupAdminGetPolicyRequest(this OcipClient client, GroupAdminGetPolicyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAdminGetPolicyResponse;
        }

        /// <summary>
        /// Requests the Group administrator's policy settings.
        /// The response is either GroupAdminGetPolicyResponse or ErrorResponse.
        /// </summary>
        public static async Task<GroupAdminGetPolicyResponse> GroupAdminGetPolicyRequestAsync(this OcipClient client, GroupAdminGetPolicyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAdminGetPolicyResponse;
        }
        /// <summary>
        /// Requests the Group administrator's policy settings.
        /// The response is either GroupAdminGetPolicyResponse14sp1 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAdminGetPolicyRequest14sp1Async instead.")]
        public static async Task<GroupAdminGetPolicyResponse14sp1> GroupAdminGetPolicyRequest14sp1(this OcipClient client, GroupAdminGetPolicyRequest14sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAdminGetPolicyResponse14sp1;
        }

        /// <summary>
        /// Requests the Group administrator's policy settings.
        /// The response is either GroupAdminGetPolicyResponse14sp1 or ErrorResponse.
        /// </summary>
        public static async Task<GroupAdminGetPolicyResponse14sp1> GroupAdminGetPolicyRequest14sp1Async(this OcipClient client, GroupAdminGetPolicyRequest14sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAdminGetPolicyResponse14sp1;
        }
        /// <summary>
        /// Requests the Group administrator's policy settings.
        /// The response is either GroupAdminGetPolicyResponse16sp1 or ErrorResponse.
        /// Replaced by: GroupAdminGetPolicyRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAdminGetPolicyRequest16sp1Async instead.")]
        public static async Task<GroupAdminGetPolicyResponse16sp1> GroupAdminGetPolicyRequest16sp1(this OcipClient client, GroupAdminGetPolicyRequest16sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAdminGetPolicyResponse16sp1;
        }

        /// <summary>
        /// Requests the Group administrator's policy settings.
        /// The response is either GroupAdminGetPolicyResponse16sp1 or ErrorResponse.
        /// Replaced by: GroupAdminGetPolicyRequest17
        /// </summary>
        public static async Task<GroupAdminGetPolicyResponse16sp1> GroupAdminGetPolicyRequest16sp1Async(this OcipClient client, GroupAdminGetPolicyRequest16sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAdminGetPolicyResponse16sp1;
        }
        /// <summary>
        /// Requests the Group administrator's policy settings.
        /// The response is either GroupAdminGetPolicyResponse16sp2 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAdminGetPolicyRequest16sp2Async instead.")]
        public static async Task<GroupAdminGetPolicyResponse16sp2> GroupAdminGetPolicyRequest16sp2(this OcipClient client, GroupAdminGetPolicyRequest16sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAdminGetPolicyResponse16sp2;
        }

        /// <summary>
        /// Requests the Group administrator's policy settings.
        /// The response is either GroupAdminGetPolicyResponse16sp2 or ErrorResponse.
        /// </summary>
        public static async Task<GroupAdminGetPolicyResponse16sp2> GroupAdminGetPolicyRequest16sp2Async(this OcipClient client, GroupAdminGetPolicyRequest16sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAdminGetPolicyResponse16sp2;
        }
        /// <summary>
        /// Requests the Group administrator's policy settings.
        /// The response is either GroupAdminGetPolicyResponse17 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAdminGetPolicyRequest17Async instead.")]
        public static async Task<GroupAdminGetPolicyResponse17> GroupAdminGetPolicyRequest17(this OcipClient client, GroupAdminGetPolicyRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAdminGetPolicyResponse17;
        }

        /// <summary>
        /// Requests the Group administrator's policy settings.
        /// The response is either GroupAdminGetPolicyResponse17 or ErrorResponse.
        /// </summary>
        public static async Task<GroupAdminGetPolicyResponse17> GroupAdminGetPolicyRequest17Async(this OcipClient client, GroupAdminGetPolicyRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAdminGetPolicyResponse17;
        }
        /// <summary>
        /// Requests the Group administrator's policy settings.
        /// The response is either GroupAdminGetPolicyResponse17sp3 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAdminGetPolicyRequest17sp3Async instead.")]
        public static async Task<GroupAdminGetPolicyResponse17sp3> GroupAdminGetPolicyRequest17sp3(this OcipClient client, GroupAdminGetPolicyRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAdminGetPolicyResponse17sp3;
        }

        /// <summary>
        /// Requests the Group administrator's policy settings.
        /// The response is either GroupAdminGetPolicyResponse17sp3 or ErrorResponse.
        /// </summary>
        public static async Task<GroupAdminGetPolicyResponse17sp3> GroupAdminGetPolicyRequest17sp3Async(this OcipClient client, GroupAdminGetPolicyRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAdminGetPolicyResponse17sp3;
        }
        /// <summary>
        /// Request to get the announcement repository file information.
        /// The response is either GroupAnnouncementFileGetResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupAnnouncementFileGetRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAnnouncementFileGetRequestAsync instead.")]
        public static async Task<GroupAnnouncementFileGetResponse> GroupAnnouncementFileGetRequest(this OcipClient client, GroupAnnouncementFileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAnnouncementFileGetResponse;
        }

        /// <summary>
        /// Request to get the announcement repository file information.
        /// The response is either GroupAnnouncementFileGetResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupAnnouncementFileGetRequest22.
        /// </summary>
        public static async Task<GroupAnnouncementFileGetResponse> GroupAnnouncementFileGetRequestAsync(this OcipClient client, GroupAnnouncementFileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAnnouncementFileGetResponse;
        }
        /// <summary>
        /// Add a Auto Attendant instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: GroupAutoAttendantAddInstanceRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAutoAttendantAddInstanceRequest14Async instead.")]
        public static async Task<SuccessResponse> GroupAutoAttendantAddInstanceRequest14(this OcipClient client, GroupAutoAttendantAddInstanceRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Auto Attendant instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: GroupAutoAttendantAddInstanceRequest16
        /// </summary>
        public static async Task<SuccessResponse> GroupAutoAttendantAddInstanceRequest14Async(this OcipClient client, GroupAutoAttendantAddInstanceRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Auto Attendant instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAutoAttendantAddInstanceRequest16Async instead.")]
        public static async Task<SuccessResponse> GroupAutoAttendantAddInstanceRequest16(this OcipClient client, GroupAutoAttendantAddInstanceRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Auto Attendant instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupAutoAttendantAddInstanceRequest16Async(this OcipClient client, GroupAutoAttendantAddInstanceRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Auto Attendant instance to a group.
        /// The domain is required in the serviceUserId.
        /// Only Group and Enterprise level schedules are accepted.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAutoAttendantAddInstanceRequest17sp1Async instead.")]
        public static async Task<SuccessResponse> GroupAutoAttendantAddInstanceRequest17sp1(this OcipClient client, GroupAutoAttendantAddInstanceRequest17sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Auto Attendant instance to a group.
        /// The domain is required in the serviceUserId.
        /// Only Group and Enterprise level schedules are accepted.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupAutoAttendantAddInstanceRequest17sp1Async(this OcipClient client, GroupAutoAttendantAddInstanceRequest17sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get all the information of a Auto Attendant instance.
        /// The response is either GroupAutoAttendantGetInstanceResponse14 or ErrorResponse.
        /// Replaced By: GroupAutoAttendantGetInstanceRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAutoAttendantGetInstanceRequest14Async instead.")]
        public static async Task<GroupAutoAttendantGetInstanceResponse14> GroupAutoAttendantGetInstanceRequest14(this OcipClient client, GroupAutoAttendantGetInstanceRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAutoAttendantGetInstanceResponse14;
        }

        /// <summary>
        /// Request to get all the information of a Auto Attendant instance.
        /// The response is either GroupAutoAttendantGetInstanceResponse14 or ErrorResponse.
        /// Replaced By: GroupAutoAttendantGetInstanceRequest16
        /// </summary>
        public static async Task<GroupAutoAttendantGetInstanceResponse14> GroupAutoAttendantGetInstanceRequest14Async(this OcipClient client, GroupAutoAttendantGetInstanceRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAutoAttendantGetInstanceResponse14;
        }
        /// <summary>
        /// Request to get all the information of a Auto Attendant instance.
        /// The response is either GroupAutoAttendantGetInstanceResponse16 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAutoAttendantGetInstanceRequest16Async instead.")]
        public static async Task<GroupAutoAttendantGetInstanceResponse16> GroupAutoAttendantGetInstanceRequest16(this OcipClient client, GroupAutoAttendantGetInstanceRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAutoAttendantGetInstanceResponse16;
        }

        /// <summary>
        /// Request to get all the information of a Auto Attendant instance.
        /// The response is either GroupAutoAttendantGetInstanceResponse16 or ErrorResponse.
        /// </summary>
        public static async Task<GroupAutoAttendantGetInstanceResponse16> GroupAutoAttendantGetInstanceRequest16Async(this OcipClient client, GroupAutoAttendantGetInstanceRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAutoAttendantGetInstanceResponse16;
        }
        /// <summary>
        /// Request to get all the information of a Auto Attendant instance.
        /// The response is either GroupAutoAttendantGetInstanceResponse17 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAutoAttendantGetInstanceRequest17Async instead.")]
        public static async Task<GroupAutoAttendantGetInstanceResponse17> GroupAutoAttendantGetInstanceRequest17(this OcipClient client, GroupAutoAttendantGetInstanceRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAutoAttendantGetInstanceResponse17;
        }

        /// <summary>
        /// Request to get all the information of a Auto Attendant instance.
        /// The response is either GroupAutoAttendantGetInstanceResponse17 or ErrorResponse.
        /// </summary>
        public static async Task<GroupAutoAttendantGetInstanceResponse17> GroupAutoAttendantGetInstanceRequest17Async(this OcipClient client, GroupAutoAttendantGetInstanceRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAutoAttendantGetInstanceResponse17;
        }
        /// <summary>
        /// Request to get all the information of a Auto Attendant instance.
        /// The response is either GroupAutoAttendantGetInstanceResponse17sp1 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAutoAttendantGetInstanceRequest17sp1Async instead.")]
        public static async Task<GroupAutoAttendantGetInstanceResponse17sp1> GroupAutoAttendantGetInstanceRequest17sp1(this OcipClient client, GroupAutoAttendantGetInstanceRequest17sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupAutoAttendantGetInstanceResponse17sp1;
        }

        /// <summary>
        /// Request to get all the information of a Auto Attendant instance.
        /// The response is either GroupAutoAttendantGetInstanceResponse17sp1 or ErrorResponse.
        /// </summary>
        public static async Task<GroupAutoAttendantGetInstanceResponse17sp1> GroupAutoAttendantGetInstanceRequest17sp1Async(this OcipClient client, GroupAutoAttendantGetInstanceRequest17sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupAutoAttendantGetInstanceResponse17sp1;
        }
        /// <summary>
        /// Request to modify an Auto Attendant instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: GroupAutoAttendantModifyInstanceRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAutoAttendantModifyInstanceRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupAutoAttendantModifyInstanceRequest(this OcipClient client, GroupAutoAttendantModifyInstanceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify an Auto Attendant instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: GroupAutoAttendantModifyInstanceRequest16
        /// </summary>
        public static async Task<SuccessResponse> GroupAutoAttendantModifyInstanceRequestAsync(this OcipClient client, GroupAutoAttendantModifyInstanceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify an Auto Attendant instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupAutoAttendantModifyInstanceRequest16Async instead.")]
        public static async Task<SuccessResponse> GroupAutoAttendantModifyInstanceRequest16(this OcipClient client, GroupAutoAttendantModifyInstanceRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify an Auto Attendant instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupAutoAttendantModifyInstanceRequest16Async(this OcipClient client, GroupAutoAttendantModifyInstanceRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get all the information of a BroadWorks Anywhere instance.
        /// The response is either GroupBroadWorksAnywhereGetInstanceResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupBroadWorksAnywhereGetInstanceRequestAsync instead.")]
        public static async Task<GroupBroadWorksAnywhereGetInstanceResponse> GroupBroadWorksAnywhereGetInstanceRequest(this OcipClient client, GroupBroadWorksAnywhereGetInstanceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupBroadWorksAnywhereGetInstanceResponse;
        }

        /// <summary>
        /// Request to get all the information of a BroadWorks Anywhere instance.
        /// The response is either GroupBroadWorksAnywhereGetInstanceResponse or ErrorResponse.
        /// </summary>
        public static async Task<GroupBroadWorksAnywhereGetInstanceResponse> GroupBroadWorksAnywhereGetInstanceRequestAsync(this OcipClient client, GroupBroadWorksAnywhereGetInstanceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupBroadWorksAnywhereGetInstanceResponse;
        }
        /// <summary>
        /// Get the groups BroadWorks Mobility settings.
        /// The response is either a GroupBroadWorksMobilityGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupBroadWorksMobilityGetRequestAsync instead.")]
        public static async Task<GroupBroadWorksMobilityGetResponse> GroupBroadWorksMobilityGetRequest(this OcipClient client, GroupBroadWorksMobilityGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupBroadWorksMobilityGetResponse;
        }

        /// <summary>
        /// Get the groups BroadWorks Mobility settings.
        /// The response is either a GroupBroadWorksMobilityGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupBroadWorksMobilityGetResponse> GroupBroadWorksMobilityGetRequestAsync(this OcipClient client, GroupBroadWorksMobilityGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupBroadWorksMobilityGetResponse;
        }
        /// <summary>
        /// Get the group's BroadWorks Mobility settings.
        /// The response is either a GroupBroadWorksMobilityGetResponse19sp1 or an ErrorResponse.
        /// 
        /// Replaced by: GroupBroadWorksMobilityGetRequest22 in AS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupBroadWorksMobilityGetRequest19sp1Async instead.")]
        public static async Task<GroupBroadWorksMobilityGetResponse19sp1> GroupBroadWorksMobilityGetRequest19sp1(this OcipClient client, GroupBroadWorksMobilityGetRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupBroadWorksMobilityGetResponse19sp1;
        }

        /// <summary>
        /// Get the group's BroadWorks Mobility settings.
        /// The response is either a GroupBroadWorksMobilityGetResponse19sp1 or an ErrorResponse.
        /// 
        /// Replaced by: GroupBroadWorksMobilityGetRequest22 in AS data mode
        /// </summary>
        public static async Task<GroupBroadWorksMobilityGetResponse19sp1> GroupBroadWorksMobilityGetRequest19sp1Async(this OcipClient client, GroupBroadWorksMobilityGetRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupBroadWorksMobilityGetResponse19sp1;
        }
        /// <summary>
        /// Get the group's BroadWorks Mobility settings.
        /// The response is either a GroupBroadWorksMobilityGetResponse21sp1 or an ErrorResponse.
        /// 
        /// Replaced by GroupBroadWorksMobilityGetRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupBroadWorksMobilityGetRequest21sp1Async instead.")]
        public static async Task<GroupBroadWorksMobilityGetResponse21sp1> GroupBroadWorksMobilityGetRequest21sp1(this OcipClient client, GroupBroadWorksMobilityGetRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupBroadWorksMobilityGetResponse21sp1;
        }

        /// <summary>
        /// Get the group's BroadWorks Mobility settings.
        /// The response is either a GroupBroadWorksMobilityGetResponse21sp1 or an ErrorResponse.
        /// 
        /// Replaced by GroupBroadWorksMobilityGetRequest22V2.
        /// </summary>
        public static async Task<GroupBroadWorksMobilityGetResponse21sp1> GroupBroadWorksMobilityGetRequest21sp1Async(this OcipClient client, GroupBroadWorksMobilityGetRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupBroadWorksMobilityGetResponse21sp1;
        }
        /// <summary>
        /// Get the group's BroadWorks Mobility settings.
        /// The response is either a GroupBroadWorksMobilityGetResponse21sp1V2 or an ErrorResponse.
        /// 
        /// Replaced by GroupBroadWorksMobilityGetRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupBroadWorksMobilityGetRequest21sp1V2Async instead.")]
        public static async Task<GroupBroadWorksMobilityGetResponse21sp1V2> GroupBroadWorksMobilityGetRequest21sp1V2(this OcipClient client, GroupBroadWorksMobilityGetRequest21sp1V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupBroadWorksMobilityGetResponse21sp1V2;
        }

        /// <summary>
        /// Get the group's BroadWorks Mobility settings.
        /// The response is either a GroupBroadWorksMobilityGetResponse21sp1V2 or an ErrorResponse.
        /// 
        /// Replaced by GroupBroadWorksMobilityGetRequest22V2.
        /// </summary>
        public static async Task<GroupBroadWorksMobilityGetResponse21sp1V2> GroupBroadWorksMobilityGetRequest21sp1V2Async(this OcipClient client, GroupBroadWorksMobilityGetRequest21sp1V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupBroadWorksMobilityGetResponse21sp1V2;
        }
        /// <summary>
        /// Get the group's BroadWorks Mobility settings.
        /// The response is either a GroupBroadWorksMobilityGetResponse22 or an ErrorResponse.
        /// 
        /// Replaced by GroupBroadWorksMobilityGetRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupBroadWorksMobilityGetRequest22Async instead.")]
        public static async Task<GroupBroadWorksMobilityGetResponse22> GroupBroadWorksMobilityGetRequest22(this OcipClient client, GroupBroadWorksMobilityGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupBroadWorksMobilityGetResponse22;
        }

        /// <summary>
        /// Get the group's BroadWorks Mobility settings.
        /// The response is either a GroupBroadWorksMobilityGetResponse22 or an ErrorResponse.
        /// 
        /// Replaced by GroupBroadWorksMobilityGetRequest22V2.
        /// </summary>
        public static async Task<GroupBroadWorksMobilityGetResponse22> GroupBroadWorksMobilityGetRequest22Async(this OcipClient client, GroupBroadWorksMobilityGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupBroadWorksMobilityGetResponse22;
        }
        /// <summary>
        /// Get the group's BroadWorks Mobility settings.
        /// The response is either a GroupBroadWorksMobilityGetResponse22V2 or an ErrorResponse.
        /// 
        /// Replaced by GroupBroadWorksMobilityGetRequest22V3.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupBroadWorksMobilityGetRequest22V2Async instead.")]
        public static async Task<GroupBroadWorksMobilityGetResponse22V2> GroupBroadWorksMobilityGetRequest22V2(this OcipClient client, GroupBroadWorksMobilityGetRequest22V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupBroadWorksMobilityGetResponse22V2;
        }

        /// <summary>
        /// Get the group's BroadWorks Mobility settings.
        /// The response is either a GroupBroadWorksMobilityGetResponse22V2 or an ErrorResponse.
        /// 
        /// Replaced by GroupBroadWorksMobilityGetRequest22V3.
        /// </summary>
        public static async Task<GroupBroadWorksMobilityGetResponse22V2> GroupBroadWorksMobilityGetRequest22V2Async(this OcipClient client, GroupBroadWorksMobilityGetRequest22V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupBroadWorksMobilityGetResponse22V2;
        }
        /// <summary>
        /// Get the group's BroadWorks Mobility settings.
        /// The response is either a GroupBroadWorksMobilityGetResponse22V3 or an ErrorResponse.
        /// 
        /// Replaced by GroupBroadWorksMobilityGetRequest22V4.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupBroadWorksMobilityGetRequest22V3Async instead.")]
        public static async Task<GroupBroadWorksMobilityGetResponse22V3> GroupBroadWorksMobilityGetRequest22V3(this OcipClient client, GroupBroadWorksMobilityGetRequest22V3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupBroadWorksMobilityGetResponse22V3;
        }

        /// <summary>
        /// Get the group's BroadWorks Mobility settings.
        /// The response is either a GroupBroadWorksMobilityGetResponse22V3 or an ErrorResponse.
        /// 
        /// Replaced by GroupBroadWorksMobilityGetRequest22V4.
        /// </summary>
        public static async Task<GroupBroadWorksMobilityGetResponse22V3> GroupBroadWorksMobilityGetRequest22V3Async(this OcipClient client, GroupBroadWorksMobilityGetRequest22V3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupBroadWorksMobilityGetResponse22V3;
        }
        /// <summary>
        /// Add a Call Center instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: GroupCallCenterAddInstanceRequest14sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterAddInstanceRequest14Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterAddInstanceRequest14(this OcipClient client, GroupCallCenterAddInstanceRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Call Center instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: GroupCallCenterAddInstanceRequest14sp3
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterAddInstanceRequest14Async(this OcipClient client, GroupCallCenterAddInstanceRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Call Center instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: GroupCallCenterAddInstanceRequest14sp9
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterAddInstanceRequest14sp3Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterAddInstanceRequest14sp3(this OcipClient client, GroupCallCenterAddInstanceRequest14sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Call Center instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: GroupCallCenterAddInstanceRequest14sp9
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterAddInstanceRequest14sp3Async(this OcipClient client, GroupCallCenterAddInstanceRequest14sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Call Center instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterAddInstanceRequest16,
        /// GroupCallCenterAddAgentListRequest,
        /// GroupCallCenterModifyPolicyRequest,
        /// GroupCallCenterModifyAnnouncementRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterAddInstanceRequest14sp9Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterAddInstanceRequest14sp9(this OcipClient client, GroupCallCenterAddInstanceRequest14sp9 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Call Center instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterAddInstanceRequest16,
        /// GroupCallCenterAddAgentListRequest,
        /// GroupCallCenterModifyPolicyRequest,
        /// GroupCallCenterModifyAnnouncementRequest16
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterAddInstanceRequest14sp9Async(this OcipClient client, GroupCallCenterAddInstanceRequest14sp9 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Call Center instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterAddInstanceRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterAddInstanceRequest16Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterAddInstanceRequest16(this OcipClient client, GroupCallCenterAddInstanceRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Call Center instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterAddInstanceRequest17
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterAddInstanceRequest16Async(this OcipClient client, GroupCallCenterAddInstanceRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Call Center instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterAddInstanceRequest17Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterAddInstanceRequest17(this OcipClient client, GroupCallCenterAddInstanceRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Call Center instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterAddInstanceRequest17Async(this OcipClient client, GroupCallCenterAddInstanceRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Call Center instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterAddInstanceRequest17sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterAddInstanceRequest17sp1Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterAddInstanceRequest17sp1(this OcipClient client, GroupCallCenterAddInstanceRequest17sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Call Center instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterAddInstanceRequest17sp3
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterAddInstanceRequest17sp1Async(this OcipClient client, GroupCallCenterAddInstanceRequest17sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Call Center instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by GroupCallCenterAddInstanceRequest19
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterAddInstanceRequest17sp3Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterAddInstanceRequest17sp3(this OcipClient client, GroupCallCenterAddInstanceRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Call Center instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by GroupCallCenterAddInstanceRequest19
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterAddInstanceRequest17sp3Async(this OcipClient client, GroupCallCenterAddInstanceRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Call Center instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by GroupCallCenterAddInstanceRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterAddInstanceRequest19Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterAddInstanceRequest19(this OcipClient client, GroupCallCenterAddInstanceRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Call Center instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by GroupCallCenterAddInstanceRequest22
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterAddInstanceRequest19Async(this OcipClient client, GroupCallCenterAddInstanceRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request the group level data associated with Call Center Agents Unavailable Code Settings.
        /// The response is either an GroupCallCenterAgentUnavailableCodeSettingsGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by GroupCallCenterAgentUnavailableCodeSettingsGetRequest17sp4.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterAgentUnavailableCodeSettingsGetRequestAsync instead.")]
        public static async Task<GroupCallCenterAgentUnavailableCodeSettingsGetResponse> GroupCallCenterAgentUnavailableCodeSettingsGetRequest(this OcipClient client, GroupCallCenterAgentUnavailableCodeSettingsGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterAgentUnavailableCodeSettingsGetResponse;
        }

        /// <summary>
        /// Request the group level data associated with Call Center Agents Unavailable Code Settings.
        /// The response is either an GroupCallCenterAgentUnavailableCodeSettingsGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by GroupCallCenterAgentUnavailableCodeSettingsGetRequest17sp4.
        /// </summary>
        public static async Task<GroupCallCenterAgentUnavailableCodeSettingsGetResponse> GroupCallCenterAgentUnavailableCodeSettingsGetRequestAsync(this OcipClient client, GroupCallCenterAgentUnavailableCodeSettingsGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterAgentUnavailableCodeSettingsGetResponse;
        }
        /// <summary>
        /// Get a call center's bounced call settings.
        /// The response is either a GroupCallCenterBouncedCallGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterBouncedCallGetRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterBouncedCallGetRequestAsync instead.")]
        public static async Task<GroupCallCenterBouncedCallGetResponse> GroupCallCenterBouncedCallGetRequest(this OcipClient client, GroupCallCenterBouncedCallGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterBouncedCallGetResponse;
        }

        /// <summary>
        /// Get a call center's bounced call settings.
        /// The response is either a GroupCallCenterBouncedCallGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterBouncedCallGetRequest17
        /// </summary>
        public static async Task<GroupCallCenterBouncedCallGetResponse> GroupCallCenterBouncedCallGetRequestAsync(this OcipClient client, GroupCallCenterBouncedCallGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterBouncedCallGetResponse;
        }
        /// <summary>
        /// Get a call center's comfort message bypass settings.
        /// The response is either a GroupCallCenterComfortMessageBypassGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterComfortMessageBypassGetRequestAsync instead.")]
        public static async Task<GroupCallCenterComfortMessageBypassGetResponse> GroupCallCenterComfortMessageBypassGetRequest(this OcipClient client, GroupCallCenterComfortMessageBypassGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterComfortMessageBypassGetResponse;
        }

        /// <summary>
        /// Get a call center's comfort message bypass settings.
        /// The response is either a GroupCallCenterComfortMessageBypassGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupCallCenterComfortMessageBypassGetResponse> GroupCallCenterComfortMessageBypassGetRequestAsync(this OcipClient client, GroupCallCenterComfortMessageBypassGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterComfortMessageBypassGetResponse;
        }
        /// <summary>
        /// Get a call center's comfort message bypass settings.
        /// The response is either a GroupCallCenterComfortMessageBypassGetResponse17 or an ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterComfortMessageBypassGetRequest20
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterComfortMessageBypassGetRequest17Async instead.")]
        public static async Task<GroupCallCenterComfortMessageBypassGetResponse17> GroupCallCenterComfortMessageBypassGetRequest17(this OcipClient client, GroupCallCenterComfortMessageBypassGetRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterComfortMessageBypassGetResponse17;
        }

        /// <summary>
        /// Get a call center's comfort message bypass settings.
        /// The response is either a GroupCallCenterComfortMessageBypassGetResponse17 or an ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterComfortMessageBypassGetRequest20
        /// </summary>
        public static async Task<GroupCallCenterComfortMessageBypassGetResponse17> GroupCallCenterComfortMessageBypassGetRequest17Async(this OcipClient client, GroupCallCenterComfortMessageBypassGetRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterComfortMessageBypassGetResponse17;
        }
        /// <summary>
        /// Modify a call center's comfort message bypass settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterComfortMessageBypassModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCallCenterComfortMessageBypassModifyRequest(this OcipClient client, GroupCallCenterComfortMessageBypassModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a call center's comfort message bypass settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterComfortMessageBypassModifyRequestAsync(this OcipClient client, GroupCallCenterComfortMessageBypassModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify a call center's comfort message bypass
        /// settings.
        /// The response is either a SuccessResponse
        /// or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterComfortMessageBypassModifyRequest17Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterComfortMessageBypassModifyRequest17(this OcipClient client, GroupCallCenterComfortMessageBypassModifyRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a call center's comfort message bypass
        /// settings.
        /// The response is either a SuccessResponse
        /// or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterComfortMessageBypassModifyRequest17Async(this OcipClient client, GroupCallCenterComfortMessageBypassModifyRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get the Call Center Enhanced configuration data for a
        /// Call Center.
        /// The response is either GroupCallCenterEnhancedGetResponse or
        /// ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterGetInstanceResponse16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterEnhancedGetRequestAsync instead.")]
        public static async Task<GroupCallCenterEnhancedGetResponse> GroupCallCenterEnhancedGetRequest(this OcipClient client, GroupCallCenterEnhancedGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterEnhancedGetResponse;
        }

        /// <summary>
        /// Request to get the Call Center Enhanced configuration data for a
        /// Call Center.
        /// The response is either GroupCallCenterEnhancedGetResponse or
        /// ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterGetInstanceResponse16
        /// </summary>
        public static async Task<GroupCallCenterEnhancedGetResponse> GroupCallCenterEnhancedGetRequestAsync(this OcipClient client, GroupCallCenterEnhancedGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterEnhancedGetResponse;
        }
        /// <summary>
        /// Modify the Call Center Enhanced configuration data for a Call
        /// Center.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterModifyInstanceRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterEnhancedModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCallCenterEnhancedModifyRequest(this OcipClient client, GroupCallCenterEnhancedModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the Call Center Enhanced configuration data for a Call
        /// Center.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterModifyInstanceRequest16
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterEnhancedModifyRequestAsync(this OcipClient client, GroupCallCenterEnhancedModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get a group level call center enhanced reporting setting.
        /// The response is either a GroupCallCenterEnhancedReportingGetResponse or an ErrorResponse.
        /// 
        /// Replaced by GroupCallCenterEnhancedReportingGetRequest19
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterEnhancedReportingGetRequestAsync instead.")]
        public static async Task<GroupCallCenterEnhancedReportingGetResponse> GroupCallCenterEnhancedReportingGetRequest(this OcipClient client, GroupCallCenterEnhancedReportingGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterEnhancedReportingGetResponse;
        }

        /// <summary>
        /// Request to get a group level call center enhanced reporting setting.
        /// The response is either a GroupCallCenterEnhancedReportingGetResponse or an ErrorResponse.
        /// 
        /// Replaced by GroupCallCenterEnhancedReportingGetRequest19
        /// </summary>
        public static async Task<GroupCallCenterEnhancedReportingGetResponse> GroupCallCenterEnhancedReportingGetRequestAsync(this OcipClient client, GroupCallCenterEnhancedReportingGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterEnhancedReportingGetResponse;
        }
        /// <summary>
        /// Request to modify group level call center enhanced reporting settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by GroupCallCenterEnhancedReportingModifyRequest19
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterEnhancedReportingModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCallCenterEnhancedReportingModifyRequest(this OcipClient client, GroupCallCenterEnhancedReportingModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify group level call center enhanced reporting settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by GroupCallCenterEnhancedReportingModifyRequest19
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterEnhancedReportingModifyRequestAsync(this OcipClient client, GroupCallCenterEnhancedReportingModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a call center's forced forwarding settings.
        /// The response is either a GroupCallCenterForcedForwardingGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterForcedForwardingGetRequestAsync instead.")]
        public static async Task<GroupCallCenterForcedForwardingGetResponse> GroupCallCenterForcedForwardingGetRequest(this OcipClient client, GroupCallCenterForcedForwardingGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterForcedForwardingGetResponse;
        }

        /// <summary>
        /// Get a call center's forced forwarding settings.
        /// The response is either a GroupCallCenterForcedForwardingGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupCallCenterForcedForwardingGetResponse> GroupCallCenterForcedForwardingGetRequestAsync(this OcipClient client, GroupCallCenterForcedForwardingGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterForcedForwardingGetResponse;
        }
        /// <summary>
        /// Get a call center's forced forwarding settings.
        /// The response is either a GroupCallCenterForcedForwardingGetResponse17 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterForcedForwardingGetRequest17Async instead.")]
        public static async Task<GroupCallCenterForcedForwardingGetResponse17> GroupCallCenterForcedForwardingGetRequest17(this OcipClient client, GroupCallCenterForcedForwardingGetRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterForcedForwardingGetResponse17;
        }

        /// <summary>
        /// Get a call center's forced forwarding settings.
        /// The response is either a GroupCallCenterForcedForwardingGetResponse17 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupCallCenterForcedForwardingGetResponse17> GroupCallCenterForcedForwardingGetRequest17Async(this OcipClient client, GroupCallCenterForcedForwardingGetRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterForcedForwardingGetResponse17;
        }
        /// <summary>
        /// Modify a call center's forced forwarding settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterForcedForwardingModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCallCenterForcedForwardingModifyRequest(this OcipClient client, GroupCallCenterForcedForwardingModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a call center's forced forwarding settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterForcedForwardingModifyRequestAsync(this OcipClient client, GroupCallCenterForcedForwardingModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a call center's announcement settings.
        /// The response is either a GroupCallCenterGetAnnouncementResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetAnnouncementRequestAsync instead.")]
        public static async Task<GroupCallCenterGetAnnouncementResponse> GroupCallCenterGetAnnouncementRequest(this OcipClient client, GroupCallCenterGetAnnouncementRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetAnnouncementResponse;
        }

        /// <summary>
        /// Get a call center's announcement settings.
        /// The response is either a GroupCallCenterGetAnnouncementResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupCallCenterGetAnnouncementResponse> GroupCallCenterGetAnnouncementRequestAsync(this OcipClient client, GroupCallCenterGetAnnouncementRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetAnnouncementResponse;
        }
        /// <summary>
        /// Get a call center's announcement settings.
        /// The response is either a GroupCallCenterGetAnnouncementResponse14sp6 or an ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterGetAnnouncementRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetAnnouncementRequest14sp6Async instead.")]
        public static async Task<GroupCallCenterGetAnnouncementResponse14sp6> GroupCallCenterGetAnnouncementRequest14sp6(this OcipClient client, GroupCallCenterGetAnnouncementRequest14sp6 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetAnnouncementResponse14sp6;
        }

        /// <summary>
        /// Get a call center's announcement settings.
        /// The response is either a GroupCallCenterGetAnnouncementResponse14sp6 or an ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterGetAnnouncementRequest16
        /// </summary>
        public static async Task<GroupCallCenterGetAnnouncementResponse14sp6> GroupCallCenterGetAnnouncementRequest14sp6Async(this OcipClient client, GroupCallCenterGetAnnouncementRequest14sp6 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetAnnouncementResponse14sp6;
        }
        /// <summary>
        /// Get a call center's announcement settings.
        /// The response is either a GroupCallCenterGetAnnouncementResponse16 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetAnnouncementRequest16Async instead.")]
        public static async Task<GroupCallCenterGetAnnouncementResponse16> GroupCallCenterGetAnnouncementRequest16(this OcipClient client, GroupCallCenterGetAnnouncementRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetAnnouncementResponse16;
        }

        /// <summary>
        /// Get a call center's announcement settings.
        /// The response is either a GroupCallCenterGetAnnouncementResponse16 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupCallCenterGetAnnouncementResponse16> GroupCallCenterGetAnnouncementRequest16Async(this OcipClient client, GroupCallCenterGetAnnouncementRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetAnnouncementResponse16;
        }
        /// <summary>
        /// Get a call center's announcement settings.
        /// The response is either a GroupCallCenterGetAnnouncementResponse17 or an ErrorResponse.
        /// 
        /// Replaced by GroupCallCenterGetAnnouncementRequest17sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetAnnouncementRequest17Async instead.")]
        public static async Task<GroupCallCenterGetAnnouncementResponse17> GroupCallCenterGetAnnouncementRequest17(this OcipClient client, GroupCallCenterGetAnnouncementRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetAnnouncementResponse17;
        }

        /// <summary>
        /// Get a call center's announcement settings.
        /// The response is either a GroupCallCenterGetAnnouncementResponse17 or an ErrorResponse.
        /// 
        /// Replaced by GroupCallCenterGetAnnouncementRequest17sp4
        /// </summary>
        public static async Task<GroupCallCenterGetAnnouncementResponse17> GroupCallCenterGetAnnouncementRequest17Async(this OcipClient client, GroupCallCenterGetAnnouncementRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetAnnouncementResponse17;
        }
        /// <summary>
        /// Get a call center's announcement settings.
        /// The response is either a GroupCallCenterGetAnnouncementResponse17sp4 or an ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterGetAnnouncementRequest19.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetAnnouncementRequest17sp4Async instead.")]
        public static async Task<GroupCallCenterGetAnnouncementResponse17sp4> GroupCallCenterGetAnnouncementRequest17sp4(this OcipClient client, GroupCallCenterGetAnnouncementRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetAnnouncementResponse17sp4;
        }

        /// <summary>
        /// Get a call center's announcement settings.
        /// The response is either a GroupCallCenterGetAnnouncementResponse17sp4 or an ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterGetAnnouncementRequest19.
        /// </summary>
        public static async Task<GroupCallCenterGetAnnouncementResponse17sp4> GroupCallCenterGetAnnouncementRequest17sp4Async(this OcipClient client, GroupCallCenterGetAnnouncementRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetAnnouncementResponse17sp4;
        }
        /// <summary>
        /// Get a list of users that can be assigned to a Call Center group.
        /// Searching for users by group only makes sense when the call center is part of an Enterprise.
        /// The response is either GroupCallCenterGetAvailableUserListResponse or ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterGetAvailableAgentListRequest and GroupCallCenterGetAvailableSupervisorListRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetAvailableUserListRequestAsync instead.")]
        public static async Task<GroupCallCenterGetAvailableUserListResponse> GroupCallCenterGetAvailableUserListRequest(this OcipClient client, GroupCallCenterGetAvailableUserListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetAvailableUserListResponse;
        }

        /// <summary>
        /// Get a list of users that can be assigned to a Call Center group.
        /// Searching for users by group only makes sense when the call center is part of an Enterprise.
        /// The response is either GroupCallCenterGetAvailableUserListResponse or ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterGetAvailableAgentListRequest and GroupCallCenterGetAvailableSupervisorListRequest
        /// </summary>
        public static async Task<GroupCallCenterGetAvailableUserListResponse> GroupCallCenterGetAvailableUserListRequestAsync(this OcipClient client, GroupCallCenterGetAvailableUserListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetAvailableUserListResponse;
        }
        /// <summary>
        /// Get a call center's DNIS Announcements. The response is either a GroupCallCenterGetDNISAnnouncementResponse or an ErrorResponse.
        /// 
        /// Replaced by GroupCallCenterGetDNISAnnouncementRequest17sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetDNISAnnouncementRequestAsync instead.")]
        public static async Task<GroupCallCenterGetDNISAnnouncementResponse> GroupCallCenterGetDNISAnnouncementRequest(this OcipClient client, GroupCallCenterGetDNISAnnouncementRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetDNISAnnouncementResponse;
        }

        /// <summary>
        /// Get a call center's DNIS Announcements. The response is either a GroupCallCenterGetDNISAnnouncementResponse or an ErrorResponse.
        /// 
        /// Replaced by GroupCallCenterGetDNISAnnouncementRequest17sp4
        /// </summary>
        public static async Task<GroupCallCenterGetDNISAnnouncementResponse> GroupCallCenterGetDNISAnnouncementRequestAsync(this OcipClient client, GroupCallCenterGetDNISAnnouncementRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetDNISAnnouncementResponse;
        }
        /// <summary>
        /// Get a call center's DNIS Announcements
        /// The response is either a GroupCallCenterGetDNISAnnouncementResponse17sp4 or an ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterGetDNISAnnouncementRequest19.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetDNISAnnouncementRequest17sp4Async instead.")]
        public static async Task<GroupCallCenterGetDNISAnnouncementResponse17sp4> GroupCallCenterGetDNISAnnouncementRequest17sp4(this OcipClient client, GroupCallCenterGetDNISAnnouncementRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetDNISAnnouncementResponse17sp4;
        }

        /// <summary>
        /// Get a call center's DNIS Announcements
        /// The response is either a GroupCallCenterGetDNISAnnouncementResponse17sp4 or an ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterGetDNISAnnouncementRequest19.
        /// </summary>
        public static async Task<GroupCallCenterGetDNISAnnouncementResponse17sp4> GroupCallCenterGetDNISAnnouncementRequest17sp4Async(this OcipClient client, GroupCallCenterGetDNISAnnouncementRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetDNISAnnouncementResponse17sp4;
        }
        /// <summary>
        /// Get a call center's DNIS Announcements
        /// The response is either a GroupCallCenterGetDNISAnnouncementResponse19 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetDNISAnnouncementRequest19Async instead.")]
        public static async Task<GroupCallCenterGetDNISAnnouncementResponse19> GroupCallCenterGetDNISAnnouncementRequest19(this OcipClient client, GroupCallCenterGetDNISAnnouncementRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetDNISAnnouncementResponse19;
        }

        /// <summary>
        /// Get a call center's DNIS Announcements
        /// The response is either a GroupCallCenterGetDNISAnnouncementResponse19 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupCallCenterGetDNISAnnouncementResponse19> GroupCallCenterGetDNISAnnouncementRequest19Async(this OcipClient client, GroupCallCenterGetDNISAnnouncementRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetDNISAnnouncementResponse19;
        }
        /// <summary>
        /// Get a call center's DNIS Announcements
        /// The response is either a GroupCallCenterGetDNISAnnouncementResponse20 or an ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterGetDNISAnnouncementRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetDNISAnnouncementRequest20Async instead.")]
        public static async Task<GroupCallCenterGetDNISAnnouncementResponse20> GroupCallCenterGetDNISAnnouncementRequest20(this OcipClient client, GroupCallCenterGetDNISAnnouncementRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetDNISAnnouncementResponse20;
        }

        /// <summary>
        /// Get a call center's DNIS Announcements
        /// The response is either a GroupCallCenterGetDNISAnnouncementResponse20 or an ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterGetDNISAnnouncementRequest22.
        /// </summary>
        public static async Task<GroupCallCenterGetDNISAnnouncementResponse20> GroupCallCenterGetDNISAnnouncementRequest20Async(this OcipClient client, GroupCallCenterGetDNISAnnouncementRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetDNISAnnouncementResponse20;
        }
        /// <summary>
        /// Request to get all the information of a Call Center instance.
        /// The response is either GroupCallCenterGetInstanceResponse14 or ErrorResponse.
        /// Replaced By: GroupCallCenterGetInstanceRequest14sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetInstanceRequest14Async instead.")]
        public static async Task<GroupCallCenterGetInstanceResponse14> GroupCallCenterGetInstanceRequest14(this OcipClient client, GroupCallCenterGetInstanceRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetInstanceResponse14;
        }

        /// <summary>
        /// Request to get all the information of a Call Center instance.
        /// The response is either GroupCallCenterGetInstanceResponse14 or ErrorResponse.
        /// Replaced By: GroupCallCenterGetInstanceRequest14sp3
        /// </summary>
        public static async Task<GroupCallCenterGetInstanceResponse14> GroupCallCenterGetInstanceRequest14Async(this OcipClient client, GroupCallCenterGetInstanceRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetInstanceResponse14;
        }
        /// <summary>
        /// Request to get all the information of a Call Center instance.
        /// The response is either GroupCallCenterGetInstanceResponse14sp3 or ErrorResponse.
        /// Replaced By: GroupCallCenterGetInstanceRequest14sp9
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetInstanceRequest14sp3Async instead.")]
        public static async Task<GroupCallCenterGetInstanceResponse14sp3> GroupCallCenterGetInstanceRequest14sp3(this OcipClient client, GroupCallCenterGetInstanceRequest14sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetInstanceResponse14sp3;
        }

        /// <summary>
        /// Request to get all the information of a Call Center instance.
        /// The response is either GroupCallCenterGetInstanceResponse14sp3 or ErrorResponse.
        /// Replaced By: GroupCallCenterGetInstanceRequest14sp9
        /// </summary>
        public static async Task<GroupCallCenterGetInstanceResponse14sp3> GroupCallCenterGetInstanceRequest14sp3Async(this OcipClient client, GroupCallCenterGetInstanceRequest14sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetInstanceResponse14sp3;
        }
        /// <summary>
        /// Request to get all the information of a Call Center instance.
        /// The response is either GroupCallCenterGetInstanceResponse14sp9 or ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterGetInstanceRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetInstanceRequest14sp9Async instead.")]
        public static async Task<GroupCallCenterGetInstanceResponse14sp9> GroupCallCenterGetInstanceRequest14sp9(this OcipClient client, GroupCallCenterGetInstanceRequest14sp9 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetInstanceResponse14sp9;
        }

        /// <summary>
        /// Request to get all the information of a Call Center instance.
        /// The response is either GroupCallCenterGetInstanceResponse14sp9 or ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterGetInstanceRequest16
        /// </summary>
        public static async Task<GroupCallCenterGetInstanceResponse14sp9> GroupCallCenterGetInstanceRequest14sp9Async(this OcipClient client, GroupCallCenterGetInstanceRequest14sp9 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetInstanceResponse14sp9;
        }
        /// <summary>
        /// Request to get all the information of a Call Center instance.
        /// The response is either GroupCallCenterGetInstanceResponse16 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetInstanceRequest16Async instead.")]
        public static async Task<GroupCallCenterGetInstanceResponse16> GroupCallCenterGetInstanceRequest16(this OcipClient client, GroupCallCenterGetInstanceRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetInstanceResponse16;
        }

        /// <summary>
        /// Request to get all the information of a Call Center instance.
        /// The response is either GroupCallCenterGetInstanceResponse16 or ErrorResponse.
        /// </summary>
        public static async Task<GroupCallCenterGetInstanceResponse16> GroupCallCenterGetInstanceRequest16Async(this OcipClient client, GroupCallCenterGetInstanceRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetInstanceResponse16;
        }
        /// <summary>
        /// Request to get all the information of a Call Center instance.
        /// The response is either GroupCallCenterGetInstanceResponse17 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetInstanceRequest17Async instead.")]
        public static async Task<GroupCallCenterGetInstanceResponse17> GroupCallCenterGetInstanceRequest17(this OcipClient client, GroupCallCenterGetInstanceRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetInstanceResponse17;
        }

        /// <summary>
        /// Request to get all the information of a Call Center instance.
        /// The response is either GroupCallCenterGetInstanceResponse17 or ErrorResponse.
        /// </summary>
        public static async Task<GroupCallCenterGetInstanceResponse17> GroupCallCenterGetInstanceRequest17Async(this OcipClient client, GroupCallCenterGetInstanceRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetInstanceResponse17;
        }
        /// <summary>
        /// Request to get all the information of a Call Center instance.
        /// The response is either GroupCallCenterGetInstanceResponse17sp1 or ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterGetInstanceRequest17sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetInstanceRequest17sp1Async instead.")]
        public static async Task<GroupCallCenterGetInstanceResponse17sp1> GroupCallCenterGetInstanceRequest17sp1(this OcipClient client, GroupCallCenterGetInstanceRequest17sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetInstanceResponse17sp1;
        }

        /// <summary>
        /// Request to get all the information of a Call Center instance.
        /// The response is either GroupCallCenterGetInstanceResponse17sp1 or ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterGetInstanceRequest17sp3
        /// </summary>
        public static async Task<GroupCallCenterGetInstanceResponse17sp1> GroupCallCenterGetInstanceRequest17sp1Async(this OcipClient client, GroupCallCenterGetInstanceRequest17sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetInstanceResponse17sp1;
        }
        /// <summary>
        /// Request to get all the information of a Call Center instance.
        /// The response is either GroupCallCenterGetInstanceResponse17sp3 or ErrorResponse.
        /// Replaced by GroupCallCenterGetInstanceRequest19
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetInstanceRequest17sp3Async instead.")]
        public static async Task<GroupCallCenterGetInstanceResponse17sp3> GroupCallCenterGetInstanceRequest17sp3(this OcipClient client, GroupCallCenterGetInstanceRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetInstanceResponse17sp3;
        }

        /// <summary>
        /// Request to get all the information of a Call Center instance.
        /// The response is either GroupCallCenterGetInstanceResponse17sp3 or ErrorResponse.
        /// Replaced by GroupCallCenterGetInstanceRequest19
        /// </summary>
        public static async Task<GroupCallCenterGetInstanceResponse17sp3> GroupCallCenterGetInstanceRequest17sp3Async(this OcipClient client, GroupCallCenterGetInstanceRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetInstanceResponse17sp3;
        }
        /// <summary>
        /// Request to get all the information of a Call Center instance.
        /// The response is either GroupCallCenterGetInstanceResponse19 or ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterGetInstanceRequest19sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetInstanceRequest19Async instead.")]
        public static async Task<GroupCallCenterGetInstanceResponse19> GroupCallCenterGetInstanceRequest19(this OcipClient client, GroupCallCenterGetInstanceRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetInstanceResponse19;
        }

        /// <summary>
        /// Request to get all the information of a Call Center instance.
        /// The response is either GroupCallCenterGetInstanceResponse19 or ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterGetInstanceRequest19sp1
        /// </summary>
        public static async Task<GroupCallCenterGetInstanceResponse19> GroupCallCenterGetInstanceRequest19Async(this OcipClient client, GroupCallCenterGetInstanceRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetInstanceResponse19;
        }
        /// <summary>
        /// Request to get all the information of a Call Center instance.
        /// The response is either GroupCallCenterGetInstanceResponse19sp1 or ErrorResponse.
        /// Replaced by GroupCallCenterGetInstanceRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetInstanceRequest19sp1Async instead.")]
        public static async Task<GroupCallCenterGetInstanceResponse19sp1> GroupCallCenterGetInstanceRequest19sp1(this OcipClient client, GroupCallCenterGetInstanceRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetInstanceResponse19sp1;
        }

        /// <summary>
        /// Request to get all the information of a Call Center instance.
        /// The response is either GroupCallCenterGetInstanceResponse19sp1 or ErrorResponse.
        /// Replaced by GroupCallCenterGetInstanceRequest22.
        /// </summary>
        public static async Task<GroupCallCenterGetInstanceResponse19sp1> GroupCallCenterGetInstanceRequest19sp1Async(this OcipClient client, GroupCallCenterGetInstanceRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetInstanceResponse19sp1;
        }
        /// <summary>
        /// Request to get the call center statistics reporting settings.
        /// The response is either GroupCallCenterGetInstanceStatisticsReportingResponse or ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterGetInstanceStatisticsReportingRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetInstanceStatisticsReportingRequestAsync instead.")]
        public static async Task<GroupCallCenterGetInstanceStatisticsReportingResponse> GroupCallCenterGetInstanceStatisticsReportingRequest(this OcipClient client, GroupCallCenterGetInstanceStatisticsReportingRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetInstanceStatisticsReportingResponse;
        }

        /// <summary>
        /// Request to get the call center statistics reporting settings.
        /// The response is either GroupCallCenterGetInstanceStatisticsReportingResponse or ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterGetInstanceStatisticsReportingRequest16
        /// </summary>
        public static async Task<GroupCallCenterGetInstanceStatisticsReportingResponse> GroupCallCenterGetInstanceStatisticsReportingRequestAsync(this OcipClient client, GroupCallCenterGetInstanceStatisticsReportingRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetInstanceStatisticsReportingResponse;
        }
        /// <summary>
        /// Request to get the call center statistics reporting settings.
        /// The response is either GroupCallCenterGetInstanceStatisticsReportingResponse16 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetInstanceStatisticsReportingRequest16Async instead.")]
        public static async Task<GroupCallCenterGetInstanceStatisticsReportingResponse16> GroupCallCenterGetInstanceStatisticsReportingRequest16(this OcipClient client, GroupCallCenterGetInstanceStatisticsReportingRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetInstanceStatisticsReportingResponse16;
        }

        /// <summary>
        /// Request to get the call center statistics reporting settings.
        /// The response is either GroupCallCenterGetInstanceStatisticsReportingResponse16 or ErrorResponse.
        /// </summary>
        public static async Task<GroupCallCenterGetInstanceStatisticsReportingResponse16> GroupCallCenterGetInstanceStatisticsReportingRequest16Async(this OcipClient client, GroupCallCenterGetInstanceStatisticsReportingRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetInstanceStatisticsReportingResponse16;
        }
        /// <summary>
        /// Get Call Center queue and agent statistics.
        /// The response is either GroupCallCenterGetInstanceStatisticsResponse13mp8 or ErrorResponse.
        /// Replaced By: GroupCallCenterGetInstanceStatisticsRequest14sp9
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetInstanceStatisticsRequest13mp8Async instead.")]
        public static async Task<GroupCallCenterGetInstanceStatisticsResponse13mp8> GroupCallCenterGetInstanceStatisticsRequest13mp8(this OcipClient client, GroupCallCenterGetInstanceStatisticsRequest13mp8 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetInstanceStatisticsResponse13mp8;
        }

        /// <summary>
        /// Get Call Center queue and agent statistics.
        /// The response is either GroupCallCenterGetInstanceStatisticsResponse13mp8 or ErrorResponse.
        /// Replaced By: GroupCallCenterGetInstanceStatisticsRequest14sp9
        /// </summary>
        public static async Task<GroupCallCenterGetInstanceStatisticsResponse13mp8> GroupCallCenterGetInstanceStatisticsRequest13mp8Async(this OcipClient client, GroupCallCenterGetInstanceStatisticsRequest13mp8 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetInstanceStatisticsResponse13mp8;
        }
        /// <summary>
        /// Request the Group level data associated with Call Center.
        /// The response is either a GroupCallCenterGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by GroupCallCenterGetRequest17sp4.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetRequestAsync instead.")]
        public static async Task<GroupCallCenterGetResponse> GroupCallCenterGetRequest(this OcipClient client, GroupCallCenterGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetResponse;
        }

        /// <summary>
        /// Request the Group level data associated with Call Center.
        /// The response is either a GroupCallCenterGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by GroupCallCenterGetRequest17sp4.
        /// </summary>
        public static async Task<GroupCallCenterGetResponse> GroupCallCenterGetRequestAsync(this OcipClient client, GroupCallCenterGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetResponse;
        }
        /// <summary>
        /// Get a list of supervisors assigned to a call center.
        /// Only users in the same group or enterprise as this call center can
        /// successfully execute this request.
        /// The response is either a GroupCallCenterGetSupervisorListResponse
        /// or an ErrorResponse.
        /// Replaced By: GroupCallCenterSupervisorReportingGetRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterGetSupervisorListRequestAsync instead.")]
        public static async Task<GroupCallCenterGetSupervisorListResponse> GroupCallCenterGetSupervisorListRequest(this OcipClient client, GroupCallCenterGetSupervisorListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterGetSupervisorListResponse;
        }

        /// <summary>
        /// Get a list of supervisors assigned to a call center.
        /// Only users in the same group or enterprise as this call center can
        /// successfully execute this request.
        /// The response is either a GroupCallCenterGetSupervisorListResponse
        /// or an ErrorResponse.
        /// Replaced By: GroupCallCenterSupervisorReportingGetRequest
        /// </summary>
        public static async Task<GroupCallCenterGetSupervisorListResponse> GroupCallCenterGetSupervisorListRequestAsync(this OcipClient client, GroupCallCenterGetSupervisorListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterGetSupervisorListResponse;
        }
        /// <summary>
        /// Get a call center's holiday service settings.
        /// The response is either a GroupCallCenterHolidayServiceGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterHolidayServiceGetRequestAsync instead.")]
        public static async Task<GroupCallCenterHolidayServiceGetResponse> GroupCallCenterHolidayServiceGetRequest(this OcipClient client, GroupCallCenterHolidayServiceGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterHolidayServiceGetResponse;
        }

        /// <summary>
        /// Get a call center's holiday service settings.
        /// The response is either a GroupCallCenterHolidayServiceGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupCallCenterHolidayServiceGetResponse> GroupCallCenterHolidayServiceGetRequestAsync(this OcipClient client, GroupCallCenterHolidayServiceGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterHolidayServiceGetResponse;
        }
        /// <summary>
        /// Get a call center's holiday service settings.
        /// The response is either a GroupCallCenterHolidayServiceGetResponse17 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterHolidayServiceGetRequest17Async instead.")]
        public static async Task<GroupCallCenterHolidayServiceGetResponse17> GroupCallCenterHolidayServiceGetRequest17(this OcipClient client, GroupCallCenterHolidayServiceGetRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterHolidayServiceGetResponse17;
        }

        /// <summary>
        /// Get a call center's holiday service settings.
        /// The response is either a GroupCallCenterHolidayServiceGetResponse17 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupCallCenterHolidayServiceGetResponse17> GroupCallCenterHolidayServiceGetRequest17Async(this OcipClient client, GroupCallCenterHolidayServiceGetRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterHolidayServiceGetResponse17;
        }
        /// <summary>
        /// Get a call center's holiday service settings.
        /// The response is either a GroupCallCenterHolidayServiceGetResponse17sp1 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterHolidayServiceGetRequest17sp1Async instead.")]
        public static async Task<GroupCallCenterHolidayServiceGetResponse17sp1> GroupCallCenterHolidayServiceGetRequest17sp1(this OcipClient client, GroupCallCenterHolidayServiceGetRequest17sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterHolidayServiceGetResponse17sp1;
        }

        /// <summary>
        /// Get a call center's holiday service settings.
        /// The response is either a GroupCallCenterHolidayServiceGetResponse17sp1 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupCallCenterHolidayServiceGetResponse17sp1> GroupCallCenterHolidayServiceGetRequest17sp1Async(this OcipClient client, GroupCallCenterHolidayServiceGetRequest17sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterHolidayServiceGetResponse17sp1;
        }
        /// <summary>
        /// Modify a call center's holiday service settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterHolidayServiceModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCallCenterHolidayServiceModifyRequest(this OcipClient client, GroupCallCenterHolidayServiceModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a call center's holiday service settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterHolidayServiceModifyRequestAsync(this OcipClient client, GroupCallCenterHolidayServiceModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify a call center's holiday service settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterHolidayServiceModifyRequest17Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterHolidayServiceModifyRequest17(this OcipClient client, GroupCallCenterHolidayServiceModifyRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a call center's holiday service settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterHolidayServiceModifyRequest17Async(this OcipClient client, GroupCallCenterHolidayServiceModifyRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify a call center's holiday service settings.
        /// Only Group and Enterprise level schedules are
        /// accepted.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterHolidayServiceModifyRequest17sp1Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterHolidayServiceModifyRequest17sp1(this OcipClient client, GroupCallCenterHolidayServiceModifyRequest17sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a call center's holiday service settings.
        /// Only Group and Enterprise level schedules are
        /// accepted.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterHolidayServiceModifyRequest17sp1Async(this OcipClient client, GroupCallCenterHolidayServiceModifyRequest17sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify a call center's announcement settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterModifyAnnouncementRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCallCenterModifyAnnouncementRequest(this OcipClient client, GroupCallCenterModifyAnnouncementRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a call center's announcement settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterModifyAnnouncementRequestAsync(this OcipClient client, GroupCallCenterModifyAnnouncementRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify a call center's announcement settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterModifyAnnouncementRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterModifyAnnouncementRequest14sp6Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterModifyAnnouncementRequest14sp6(this OcipClient client, GroupCallCenterModifyAnnouncementRequest14sp6 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a call center's announcement settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterModifyAnnouncementRequest16
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterModifyAnnouncementRequest14sp6Async(this OcipClient client, GroupCallCenterModifyAnnouncementRequest14sp6 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify a call center's announcement settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterModifyAnnouncementRequest16Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterModifyAnnouncementRequest16(this OcipClient client, GroupCallCenterModifyAnnouncementRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a call center's announcement settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterModifyAnnouncementRequest16Async(this OcipClient client, GroupCallCenterModifyAnnouncementRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify a call center DNIS announcement settings.
        /// The response is either a SuccessResponse or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterModifyDNISAnnouncementRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCallCenterModifyDNISAnnouncementRequest(this OcipClient client, GroupCallCenterModifyDNISAnnouncementRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a call center DNIS announcement settings.
        /// The response is either a SuccessResponse or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterModifyDNISAnnouncementRequestAsync(this OcipClient client, GroupCallCenterModifyDNISAnnouncementRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify a Call Center instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterModifyInstanceRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterModifyInstanceRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCallCenterModifyInstanceRequest(this OcipClient client, GroupCallCenterModifyInstanceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a Call Center instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterModifyInstanceRequest16
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterModifyInstanceRequestAsync(this OcipClient client, GroupCallCenterModifyInstanceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify a Call Center instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterModifyInstanceRequest16Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterModifyInstanceRequest16(this OcipClient client, GroupCallCenterModifyInstanceRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a Call Center instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterModifyInstanceRequest16Async(this OcipClient client, GroupCallCenterModifyInstanceRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify a Call Center instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterModifyInstanceRequest19
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterModifyInstanceRequest17sp1Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterModifyInstanceRequest17sp1(this OcipClient client, GroupCallCenterModifyInstanceRequest17sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a Call Center instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupCallCenterModifyInstanceRequest19
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterModifyInstanceRequest17sp1Async(this OcipClient client, GroupCallCenterModifyInstanceRequest17sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify a Call Center instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterModifyInstanceRequest19Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterModifyInstanceRequest19(this OcipClient client, GroupCallCenterModifyInstanceRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a Call Center instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterModifyInstanceRequest19Async(this OcipClient client, GroupCallCenterModifyInstanceRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify the Call Center statistics reporting frequency and destination.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: GroupCallCenterModifyInstanceStatisticsReportingRequest14sp9
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterModifyInstanceStatisticsReportingRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCallCenterModifyInstanceStatisticsReportingRequest(this OcipClient client, GroupCallCenterModifyInstanceStatisticsReportingRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the Call Center statistics reporting frequency and destination.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: GroupCallCenterModifyInstanceStatisticsReportingRequest14sp9
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterModifyInstanceStatisticsReportingRequestAsync(this OcipClient client, GroupCallCenterModifyInstanceStatisticsReportingRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify the Call Center statistics reporting frequency and destination.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterModifyInstanceStatisticsReportingRequest14sp9Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterModifyInstanceStatisticsReportingRequest14sp9(this OcipClient client, GroupCallCenterModifyInstanceStatisticsReportingRequest14sp9 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the Call Center statistics reporting frequency and destination.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterModifyInstanceStatisticsReportingRequest14sp9Async(this OcipClient client, GroupCallCenterModifyInstanceStatisticsReportingRequest14sp9 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Replaces a list of users as supervisors for a call center.
        /// Also allows the modification of the reporting server URL address.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Element "reportingServerURL"" will always be ignored.
        /// Replaced By: GroupCallCenterSupervisorReportingModifyRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterModifySupervisorListRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCallCenterModifySupervisorListRequest(this OcipClient client, GroupCallCenterModifySupervisorListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Replaces a list of users as supervisors for a call center.
        /// Also allows the modification of the reporting server URL address.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Element "reportingServerURL"" will always be ignored.
        /// Replaced By: GroupCallCenterSupervisorReportingModifyRequest
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterModifySupervisorListRequestAsync(this OcipClient client, GroupCallCenterModifySupervisorListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a call center's night service settings.
        /// The response is either a GroupCallCenterNightServiceGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterNightServiceGetRequestAsync instead.")]
        public static async Task<GroupCallCenterNightServiceGetResponse> GroupCallCenterNightServiceGetRequest(this OcipClient client, GroupCallCenterNightServiceGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterNightServiceGetResponse;
        }

        /// <summary>
        /// Get a call center's night service settings.
        /// The response is either a GroupCallCenterNightServiceGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupCallCenterNightServiceGetResponse> GroupCallCenterNightServiceGetRequestAsync(this OcipClient client, GroupCallCenterNightServiceGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterNightServiceGetResponse;
        }
        /// <summary>
        /// Get a call center's night service settings.
        /// The response is either a GroupCallCenterNightServiceGetResponse17 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterNightServiceGetRequest17Async instead.")]
        public static async Task<GroupCallCenterNightServiceGetResponse17> GroupCallCenterNightServiceGetRequest17(this OcipClient client, GroupCallCenterNightServiceGetRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterNightServiceGetResponse17;
        }

        /// <summary>
        /// Get a call center's night service settings.
        /// The response is either a GroupCallCenterNightServiceGetResponse17 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupCallCenterNightServiceGetResponse17> GroupCallCenterNightServiceGetRequest17Async(this OcipClient client, GroupCallCenterNightServiceGetRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterNightServiceGetResponse17;
        }
        /// <summary>
        /// Modify a call center's night service settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterNightServiceModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCallCenterNightServiceModifyRequest(this OcipClient client, GroupCallCenterNightServiceModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a call center's night service settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterNightServiceModifyRequestAsync(this OcipClient client, GroupCallCenterNightServiceModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify a call center's night service settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterNightServiceModifyRequest17Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterNightServiceModifyRequest17(this OcipClient client, GroupCallCenterNightServiceModifyRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a call center's night service settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterNightServiceModifyRequest17Async(this OcipClient client, GroupCallCenterNightServiceModifyRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a call center's overflow settings.
        /// The response is either a GroupCallCenterOverflowGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterOverflowGetRequestAsync instead.")]
        public static async Task<GroupCallCenterOverflowGetResponse> GroupCallCenterOverflowGetRequest(this OcipClient client, GroupCallCenterOverflowGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterOverflowGetResponse;
        }

        /// <summary>
        /// Get a call center's overflow settings.
        /// The response is either a GroupCallCenterOverflowGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupCallCenterOverflowGetResponse> GroupCallCenterOverflowGetRequestAsync(this OcipClient client, GroupCallCenterOverflowGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterOverflowGetResponse;
        }
        /// <summary>
        /// Modify a call center's overflow settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterOverflowModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCallCenterOverflowModifyRequest(this OcipClient client, GroupCallCenterOverflowModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a call center's overflow settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterOverflowModifyRequestAsync(this OcipClient client, GroupCallCenterOverflowModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a call center's stranded call settings.
        /// The response is either a GroupCallCenterStrandedCallGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterStrandedCallGetRequestAsync instead.")]
        public static async Task<GroupCallCenterStrandedCallGetResponse> GroupCallCenterStrandedCallGetRequest(this OcipClient client, GroupCallCenterStrandedCallGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterStrandedCallGetResponse;
        }

        /// <summary>
        /// Get a call center's stranded call settings.
        /// The response is either a GroupCallCenterStrandedCallGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupCallCenterStrandedCallGetResponse> GroupCallCenterStrandedCallGetRequestAsync(this OcipClient client, GroupCallCenterStrandedCallGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterStrandedCallGetResponse;
        }
        /// <summary>
        /// Get a call center's stranded call settings.
        /// The response is either a GroupCallCenterStrandedCallGetResponse17 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterStrandedCallGetRequest17Async instead.")]
        public static async Task<GroupCallCenterStrandedCallGetResponse17> GroupCallCenterStrandedCallGetRequest17(this OcipClient client, GroupCallCenterStrandedCallGetRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterStrandedCallGetResponse17;
        }

        /// <summary>
        /// Get a call center's stranded call settings.
        /// The response is either a GroupCallCenterStrandedCallGetResponse17 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupCallCenterStrandedCallGetResponse17> GroupCallCenterStrandedCallGetRequest17Async(this OcipClient client, GroupCallCenterStrandedCallGetRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterStrandedCallGetResponse17;
        }
        /// <summary>
        /// Modify a call center's stranded call settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterStrandedCallModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCallCenterStrandedCallModifyRequest(this OcipClient client, GroupCallCenterStrandedCallModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a call center's stranded call settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterStrandedCallModifyRequestAsync(this OcipClient client, GroupCallCenterStrandedCallModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify a call center's stranded call settings.
        /// The response is either a SuccessResponse or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterStrandedCallModifyRequest17Async instead.")]
        public static async Task<SuccessResponse> GroupCallCenterStrandedCallModifyRequest17(this OcipClient client, GroupCallCenterStrandedCallModifyRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a call center's stranded call settings.
        /// The response is either a SuccessResponse or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterStrandedCallModifyRequest17Async(this OcipClient client, GroupCallCenterStrandedCallModifyRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a call center's stranded calls - unavailable settings.
        /// The response is either a GroupCallCenterStrandedCallUnavailableGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterStrandedCallUnavailableGetRequestAsync instead.")]
        public static async Task<GroupCallCenterStrandedCallUnavailableGetResponse> GroupCallCenterStrandedCallUnavailableGetRequest(this OcipClient client, GroupCallCenterStrandedCallUnavailableGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterStrandedCallUnavailableGetResponse;
        }

        /// <summary>
        /// Get a call center's stranded calls - unavailable settings.
        /// The response is either a GroupCallCenterStrandedCallUnavailableGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupCallCenterStrandedCallUnavailableGetResponse> GroupCallCenterStrandedCallUnavailableGetRequestAsync(this OcipClient client, GroupCallCenterStrandedCallUnavailableGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterStrandedCallUnavailableGetResponse;
        }
        /// <summary>
        /// Modify a call center's stranded calls -
        /// unavailable settings. The response is either a SuccessResponse oran ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterStrandedCallUnavailableModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCallCenterStrandedCallUnavailableModifyRequest(this OcipClient client, GroupCallCenterStrandedCallUnavailableModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a call center's stranded calls -
        /// unavailable settings. The response is either a SuccessResponse oran ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterStrandedCallUnavailableModifyRequestAsync(this OcipClient client, GroupCallCenterStrandedCallUnavailableModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a list of supervisors assigned to a call center.
        /// Only users in the same group or enterprise as this call center
        /// can successfully execute this request.
        /// The response is either a GroupCallCenterSupervisorReportingGetResponse or an ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterGetSupervisorListRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterSupervisorReportingGetRequestAsync instead.")]
        public static async Task<GroupCallCenterSupervisorReportingGetResponse> GroupCallCenterSupervisorReportingGetRequest(this OcipClient client, GroupCallCenterSupervisorReportingGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallCenterSupervisorReportingGetResponse;
        }

        /// <summary>
        /// Get a list of supervisors assigned to a call center.
        /// Only users in the same group or enterprise as this call center
        /// can successfully execute this request.
        /// The response is either a GroupCallCenterSupervisorReportingGetResponse or an ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterGetSupervisorListRequest16
        /// </summary>
        public static async Task<GroupCallCenterSupervisorReportingGetResponse> GroupCallCenterSupervisorReportingGetRequestAsync(this OcipClient client, GroupCallCenterSupervisorReportingGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallCenterSupervisorReportingGetResponse;
        }
        /// <summary>
        /// Replaces a list of users as supervisors for a call center.
        /// Also allows the modification of the reporting server URL address.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterModifySupervisorListRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallCenterSupervisorReportingModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCallCenterSupervisorReportingModifyRequest(this OcipClient client, GroupCallCenterSupervisorReportingModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Replaces a list of users as supervisors for a call center.
        /// Also allows the modification of the reporting server URL address.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced By: GroupCallCenterModifySupervisorListRequest16
        /// </summary>
        public static async Task<SuccessResponse> GroupCallCenterSupervisorReportingModifyRequestAsync(this OcipClient client, GroupCallCenterSupervisorReportingModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the calling line id settings for a group.
        /// The response is either a GroupCallingLineIdGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallingLineIdGetRequestAsync instead.")]
        public static async Task<GroupCallingLineIdGetResponse> GroupCallingLineIdGetRequest(this OcipClient client, GroupCallingLineIdGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallingLineIdGetResponse;
        }

        /// <summary>
        /// Get the calling line id settings for a group.
        /// The response is either a GroupCallingLineIdGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupCallingLineIdGetResponse> GroupCallingLineIdGetRequestAsync(this OcipClient client, GroupCallingLineIdGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallingLineIdGetResponse;
        }
        /// <summary>
        /// Modify the calling line id settings for a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallingLineIdModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCallingLineIdModifyRequest(this OcipClient client, GroupCallingLineIdModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the calling line id settings for a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallingLineIdModifyRequestAsync(this OcipClient client, GroupCallingLineIdModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Adds a Call Park group.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallParkAddInstanceRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCallParkAddInstanceRequest(this OcipClient client, GroupCallParkAddInstanceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Adds a Call Park group.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupCallParkAddInstanceRequestAsync(this OcipClient client, GroupCallParkAddInstanceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Gets a Call Park group.
        /// The response is either GroupCallParkGetInstanceResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallParkGetInstanceRequestAsync instead.")]
        public static async Task<GroupCallParkGetInstanceResponse> GroupCallParkGetInstanceRequest(this OcipClient client, GroupCallParkGetInstanceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallParkGetInstanceResponse;
        }

        /// <summary>
        /// Gets a Call Park group.
        /// The response is either GroupCallParkGetInstanceResponse or ErrorResponse.
        /// </summary>
        public static async Task<GroupCallParkGetInstanceResponse> GroupCallParkGetInstanceRequestAsync(this OcipClient client, GroupCallParkGetInstanceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallParkGetInstanceResponse;
        }
        /// <summary>
        /// Gets the Call Park Group settings.
        /// The response is either GroupCallParkGetResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallParkGetRequestAsync instead.")]
        public static async Task<GroupCallParkGetResponse> GroupCallParkGetRequest(this OcipClient client, GroupCallParkGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallParkGetResponse;
        }

        /// <summary>
        /// Gets the Call Park Group settings.
        /// The response is either GroupCallParkGetResponse or ErrorResponse.
        /// </summary>
        public static async Task<GroupCallParkGetResponse> GroupCallParkGetRequestAsync(this OcipClient client, GroupCallParkGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallParkGetResponse;
        }
        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse14 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallProcessingGetPolicyRequest14Async instead.")]
        public static async Task<GroupCallProcessingGetPolicyResponse14> GroupCallProcessingGetPolicyRequest14(this OcipClient client, GroupCallProcessingGetPolicyRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse14;
        }

        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse14 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupCallProcessingGetPolicyResponse14> GroupCallProcessingGetPolicyRequest14Async(this OcipClient client, GroupCallProcessingGetPolicyRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse14;
        }
        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse14sp1 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallProcessingGetPolicyRequest14sp1Async instead.")]
        public static async Task<GroupCallProcessingGetPolicyResponse14sp1> GroupCallProcessingGetPolicyRequest14sp1(this OcipClient client, GroupCallProcessingGetPolicyRequest14sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse14sp1;
        }

        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse14sp1 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupCallProcessingGetPolicyResponse14sp1> GroupCallProcessingGetPolicyRequest14sp1Async(this OcipClient client, GroupCallProcessingGetPolicyRequest14sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse14sp1;
        }
        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse14sp4 or an ErrorResponse.
        /// Replaced By : GroupCallProcessingGetPolicyRequest15
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallProcessingGetPolicyRequest14sp4Async instead.")]
        public static async Task<GroupCallProcessingGetPolicyResponse14sp4> GroupCallProcessingGetPolicyRequest14sp4(this OcipClient client, GroupCallProcessingGetPolicyRequest14sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse14sp4;
        }

        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse14sp4 or an ErrorResponse.
        /// Replaced By : GroupCallProcessingGetPolicyRequest15
        /// </summary>
        public static async Task<GroupCallProcessingGetPolicyResponse14sp4> GroupCallProcessingGetPolicyRequest14sp4Async(this OcipClient client, GroupCallProcessingGetPolicyRequest14sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse14sp4;
        }
        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse14sp7 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// Replaced By: GroupCallProcessingGetPolicyRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallProcessingGetPolicyRequest14sp7Async instead.")]
        public static async Task<GroupCallProcessingGetPolicyResponse14sp7> GroupCallProcessingGetPolicyRequest14sp7(this OcipClient client, GroupCallProcessingGetPolicyRequest14sp7 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse14sp7;
        }

        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse14sp7 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// Replaced By: GroupCallProcessingGetPolicyRequest16
        /// </summary>
        public static async Task<GroupCallProcessingGetPolicyResponse14sp7> GroupCallProcessingGetPolicyRequest14sp7Async(this OcipClient client, GroupCallProcessingGetPolicyRequest14sp7 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse14sp7;
        }
        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse15 or an ErrorResponse.
        /// Replaced By: GroupCallProcessingGetPolicyRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallProcessingGetPolicyRequest15Async instead.")]
        public static async Task<GroupCallProcessingGetPolicyResponse15> GroupCallProcessingGetPolicyRequest15(this OcipClient client, GroupCallProcessingGetPolicyRequest15 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse15;
        }

        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse15 or an ErrorResponse.
        /// Replaced By: GroupCallProcessingGetPolicyRequest16
        /// </summary>
        public static async Task<GroupCallProcessingGetPolicyResponse15> GroupCallProcessingGetPolicyRequest15Async(this OcipClient client, GroupCallProcessingGetPolicyRequest15 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse15;
        }
        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse15sp2 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls,
        /// maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes,
        /// useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth,
        /// useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan,
        /// overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallProcessingGetPolicyRequest15sp2Async instead.")]
        public static async Task<GroupCallProcessingGetPolicyResponse15sp2> GroupCallProcessingGetPolicyRequest15sp2(this OcipClient client, GroupCallProcessingGetPolicyRequest15sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse15sp2;
        }

        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse15sp2 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls,
        /// maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes,
        /// useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth,
        /// useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan,
        /// overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// </summary>
        public static async Task<GroupCallProcessingGetPolicyResponse15sp2> GroupCallProcessingGetPolicyRequest15sp2Async(this OcipClient client, GroupCallProcessingGetPolicyRequest15sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse15sp2;
        }
        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse16 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallProcessingGetPolicyRequest16Async instead.")]
        public static async Task<GroupCallProcessingGetPolicyResponse16> GroupCallProcessingGetPolicyRequest16(this OcipClient client, GroupCallProcessingGetPolicyRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse16;
        }

        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse16 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// </summary>
        public static async Task<GroupCallProcessingGetPolicyResponse16> GroupCallProcessingGetPolicyRequest16Async(this OcipClient client, GroupCallProcessingGetPolicyRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse16;
        }
        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse16sp2 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// The useGroupDCLIDSetting controls the Dialable Caller ID settings (enableDialableCallerID)
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallProcessingGetPolicyRequest16sp2Async instead.")]
        public static async Task<GroupCallProcessingGetPolicyResponse16sp2> GroupCallProcessingGetPolicyRequest16sp2(this OcipClient client, GroupCallProcessingGetPolicyRequest16sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse16sp2;
        }

        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse16sp2 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// The useGroupDCLIDSetting controls the Dialable Caller ID settings (enableDialableCallerID)
        /// </summary>
        public static async Task<GroupCallProcessingGetPolicyResponse16sp2> GroupCallProcessingGetPolicyRequest16sp2Async(this OcipClient client, GroupCallProcessingGetPolicyRequest16sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse16sp2;
        }
        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse17 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallProcessingGetPolicyRequest17Async instead.")]
        public static async Task<GroupCallProcessingGetPolicyResponse17> GroupCallProcessingGetPolicyRequest17(this OcipClient client, GroupCallProcessingGetPolicyRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse17;
        }

        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse17 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// </summary>
        public static async Task<GroupCallProcessingGetPolicyResponse17> GroupCallProcessingGetPolicyRequest17Async(this OcipClient client, GroupCallProcessingGetPolicyRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse17;
        }
        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse17sp3 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// The useGroupDCLIDSetting controls the Dialable Caller ID settings (enableDialableCallerID)
        /// 
        /// The following elements are only used in AS data mode:
        /// useGroupDCLIDSetting
        /// enableDialableCallerID
        /// 
        /// Replaced by GroupCallProcessingGetPolicyRequest17sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallProcessingGetPolicyRequest17sp3Async instead.")]
        public static async Task<GroupCallProcessingGetPolicyResponse17sp3> GroupCallProcessingGetPolicyRequest17sp3(this OcipClient client, GroupCallProcessingGetPolicyRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse17sp3;
        }

        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse17sp3 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// The useGroupDCLIDSetting controls the Dialable Caller ID settings (enableDialableCallerID)
        /// 
        /// The following elements are only used in AS data mode:
        /// useGroupDCLIDSetting
        /// enableDialableCallerID
        /// 
        /// Replaced by GroupCallProcessingGetPolicyRequest17sp4
        /// </summary>
        public static async Task<GroupCallProcessingGetPolicyResponse17sp3> GroupCallProcessingGetPolicyRequest17sp3Async(this OcipClient client, GroupCallProcessingGetPolicyRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse17sp3;
        }
        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse17sp4 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName, allowConfigurableCLIDForRedirectingIdentity)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// The following elements are only used in AS data mode:
        /// useGroupDCLIDSetting
        /// enableDialableCallerID
        /// 
        /// Replaced by GroupCallProcessingGetPolicyRequest18
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallProcessingGetPolicyRequest17sp4Async instead.")]
        public static async Task<GroupCallProcessingGetPolicyResponse17sp4> GroupCallProcessingGetPolicyRequest17sp4(this OcipClient client, GroupCallProcessingGetPolicyRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse17sp4;
        }

        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse17sp4 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName, allowConfigurableCLIDForRedirectingIdentity)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// The following elements are only used in AS data mode:
        /// useGroupDCLIDSetting
        /// enableDialableCallerID
        /// 
        /// Replaced by GroupCallProcessingGetPolicyRequest18
        /// </summary>
        public static async Task<GroupCallProcessingGetPolicyResponse17sp4> GroupCallProcessingGetPolicyRequest17sp4Async(this OcipClient client, GroupCallProcessingGetPolicyRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse17sp4;
        }
        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse18 or an
        /// ErrorResponse.
        /// 
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName, allowDepartmentCLIDNameOverride)
        /// 
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// The following elements are only used in AS data mode:
        /// useGroupDCLIDSetting
        /// enableDialableCallerID
        /// allowDepartmentCLIDNameOverride
        /// 
        /// Replaced By : GroupCallProcessingGetPolicyRequest18sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallProcessingGetPolicyRequest18Async instead.")]
        public static async Task<GroupCallProcessingGetPolicyResponse18> GroupCallProcessingGetPolicyRequest18(this OcipClient client, GroupCallProcessingGetPolicyRequest18 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse18;
        }

        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse18 or an
        /// ErrorResponse.
        /// 
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName, allowDepartmentCLIDNameOverride)
        /// 
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// The following elements are only used in AS data mode:
        /// useGroupDCLIDSetting
        /// enableDialableCallerID
        /// allowDepartmentCLIDNameOverride
        /// 
        /// Replaced By : GroupCallProcessingGetPolicyRequest18sp1
        /// </summary>
        public static async Task<GroupCallProcessingGetPolicyResponse18> GroupCallProcessingGetPolicyRequest18Async(this OcipClient client, GroupCallProcessingGetPolicyRequest18 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse18;
        }
        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse18sp1 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy,enterpriseCallsCLIDPolicy, groupCallsCLIDPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName, allowDepartmentCLIDNameOverride)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// Replaced by: GroupCallProcessingGetPolicyRequest19sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallProcessingGetPolicyRequest18sp1Async instead.")]
        public static async Task<GroupCallProcessingGetPolicyResponse18sp1> GroupCallProcessingGetPolicyRequest18sp1(this OcipClient client, GroupCallProcessingGetPolicyRequest18sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse18sp1;
        }

        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse18sp1 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy,enterpriseCallsCLIDPolicy, groupCallsCLIDPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName, allowDepartmentCLIDNameOverride)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// Replaced by: GroupCallProcessingGetPolicyRequest19sp1
        /// </summary>
        public static async Task<GroupCallProcessingGetPolicyResponse18sp1> GroupCallProcessingGetPolicyRequest18sp1Async(this OcipClient client, GroupCallProcessingGetPolicyRequest18sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse18sp1;
        }
        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse19sp1 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy,enterpriseCallsCLIDPolicy, groupCallsCLIDPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName, allowDepartmentCLIDNameOverride)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// 
        /// Replaced by: GroupCallProcessingGetPolicyRequest21sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallProcessingGetPolicyRequest19sp1Async instead.")]
        public static async Task<GroupCallProcessingGetPolicyResponse19sp1> GroupCallProcessingGetPolicyRequest19sp1(this OcipClient client, GroupCallProcessingGetPolicyRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse19sp1;
        }

        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse19sp1 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy,enterpriseCallsCLIDPolicy, groupCallsCLIDPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName, allowDepartmentCLIDNameOverride)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// 
        /// Replaced by: GroupCallProcessingGetPolicyRequest21sp1
        /// </summary>
        public static async Task<GroupCallProcessingGetPolicyResponse19sp1> GroupCallProcessingGetPolicyRequest19sp1Async(this OcipClient client, GroupCallProcessingGetPolicyRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse19sp1;
        }
        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse21sp1 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy,enterpriseCallsCLIDPolicy, groupCallsCLIDPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName, allowDepartmentCLIDNameOverride)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// 
        /// Replaced by: GroupCallProcessingGetPolicyRequest21sp2
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallProcessingGetPolicyRequest21sp1Async instead.")]
        public static async Task<GroupCallProcessingGetPolicyResponse21sp1> GroupCallProcessingGetPolicyRequest21sp1(this OcipClient client, GroupCallProcessingGetPolicyRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse21sp1;
        }

        /// <summary>
        /// Request the group level data associated with Call Processing Policy.
        /// The response is either a GroupCallProcessingGetPolicyResponse21sp1 or an
        /// ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy,enterpriseCallsCLIDPolicy, groupCallsCLIDPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName, allowDepartmentCLIDNameOverride)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls,
        /// useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and translation settings
        /// (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// 
        /// Replaced by: GroupCallProcessingGetPolicyRequest21sp2
        /// </summary>
        public static async Task<GroupCallProcessingGetPolicyResponse21sp1> GroupCallProcessingGetPolicyRequest21sp1Async(this OcipClient client, GroupCallProcessingGetPolicyRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCallProcessingGetPolicyResponse21sp1;
        }
        /// <summary>
        /// Modify the group level data associated with Call Processing Policy.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By : GroupCallProcessingModifyPolicyRequest15
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallProcessingModifyPolicyRequest14Async instead.")]
        public static async Task<SuccessResponse> GroupCallProcessingModifyPolicyRequest14(this OcipClient client, GroupCallProcessingModifyPolicyRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the group level data associated with Call Processing Policy.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By : GroupCallProcessingModifyPolicyRequest15
        /// </summary>
        public static async Task<SuccessResponse> GroupCallProcessingModifyPolicyRequest14Async(this OcipClient client, GroupCallProcessingModifyPolicyRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify the group level data associated with Call Processing Policy.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls, useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and
        /// translation settings (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// Replaced By: GroupCallProcessingModifyPolicyRequest15sp2
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallProcessingModifyPolicyRequest14sp7Async instead.")]
        public static async Task<SuccessResponse> GroupCallProcessingModifyPolicyRequest14sp7(this OcipClient client, GroupCallProcessingModifyPolicyRequest14sp7 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the group level data associated with Call Processing Policy.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// The useGroupCLIDSetting attribute controls the CLID settings
        /// (clidPolicy, emergencyClidPolicy, allowAlternateNumbersForRedirectingIdentity, useGroupName)
        /// The useGroupMediaSetting attribute controls the Media settings
        /// (medisPolicySelection, supportedMediaSetName)
        /// The useGroupCallLimitsSetting attribute controls the Call Limits settings
        /// (useMaxSimultaneousCalls, maxSimultaneousCalls, useMaxSimultaneousVideoCalls, maxSimultaneousVideoCalls, useMaxCallTimeForAnsweredCalls, maxCallTimeForAnsweredCallsMinutes, useMaxCallTimeForUnansweredCalls, maxCallTimeForUnansweredCallsMinutes, useMaxConcurrentRedirectedCalls, useMaxFindMeFollowMeDepth, maxRedirectionDepth, useMaxConcurrentFindMeFollowMeInvocations, maxConcurrentFindMeFollowMeInvocations)
        /// The useGroupTranslationRoutingSetting attribute controls the routing and
        /// translation settings (networkUsageSelection, enforceGroupCallingLineIdentityRestriction,
        /// allowEnterpriseGroupCallTypingForPrivateDialingPlan, allowEnterpriseGroupCallTypingForPublicDialingPlan, overrideCLIDRestrictionForExternalCallsViaPrivateDialingPlan, enableEnterpriseExtensionDialing)
        /// Replaced By: GroupCallProcessingModifyPolicyRequest15sp2
        /// </summary>
        public static async Task<SuccessResponse> GroupCallProcessingModifyPolicyRequest14sp7Async(this OcipClient client, GroupCallProcessingModifyPolicyRequest14sp7 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify the group level data associated with Call Processing Policy.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: GroupCallProcessingModifyPolicyRequest15sp2
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCallProcessingModifyPolicyRequest15Async instead.")]
        public static async Task<SuccessResponse> GroupCallProcessingModifyPolicyRequest15(this OcipClient client, GroupCallProcessingModifyPolicyRequest15 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the group level data associated with Call Processing Policy.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: GroupCallProcessingModifyPolicyRequest15sp2
        /// </summary>
        public static async Task<SuccessResponse> GroupCallProcessingModifyPolicyRequest15Async(this OcipClient client, GroupCallProcessingModifyPolicyRequest15 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a collaborate bridge to a group.
        /// The domain is required in the serviceUserId.
        /// The request fails when supportOutdial is enabled and the system-level collaborate supportOutdial setting is disabled.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by GroupCollaborateBridgeAddInstanceRequest20sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCollaborateBridgeAddInstanceRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCollaborateBridgeAddInstanceRequest(this OcipClient client, GroupCollaborateBridgeAddInstanceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a collaborate bridge to a group.
        /// The domain is required in the serviceUserId.
        /// The request fails when supportOutdial is enabled and the system-level collaborate supportOutdial setting is disabled.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by GroupCollaborateBridgeAddInstanceRequest20sp1
        /// </summary>
        public static async Task<SuccessResponse> GroupCollaborateBridgeAddInstanceRequestAsync(this OcipClient client, GroupCollaborateBridgeAddInstanceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get all the information of a collaborate bridge.
        /// The response is either GroupCollaborateBridgeGetInstanceResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupCollaborateBridgeGetInstanceRequest20sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCollaborateBridgeGetInstanceRequestAsync instead.")]
        public static async Task<GroupCollaborateBridgeGetInstanceResponse> GroupCollaborateBridgeGetInstanceRequest(this OcipClient client, GroupCollaborateBridgeGetInstanceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCollaborateBridgeGetInstanceResponse;
        }

        /// <summary>
        /// Request to get all the information of a collaborate bridge.
        /// The response is either GroupCollaborateBridgeGetInstanceResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupCollaborateBridgeGetInstanceRequest20sp1
        /// </summary>
        public static async Task<GroupCollaborateBridgeGetInstanceResponse> GroupCollaborateBridgeGetInstanceRequestAsync(this OcipClient client, GroupCollaborateBridgeGetInstanceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCollaborateBridgeGetInstanceResponse;
        }
        /// <summary>
        /// Request to modify a Collaborate bridge.
        /// The request fails when the collaborateOwnerUserIdList is included in the request for the default collaborate bridge.
        /// The request fails when the supportOutdial is included in the request and the system-level collaborate supportOutdial setting is disabled.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupCollaborateBridgeModifyInstanceRequest20sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCollaborateBridgeModifyInstanceRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCollaborateBridgeModifyInstanceRequest(this OcipClient client, GroupCollaborateBridgeModifyInstanceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a Collaborate bridge.
        /// The request fails when the collaborateOwnerUserIdList is included in the request for the default collaborate bridge.
        /// The request fails when the supportOutdial is included in the request and the system-level collaborate supportOutdial setting is disabled.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupCollaborateBridgeModifyInstanceRequest20sp1
        /// </summary>
        public static async Task<SuccessResponse> GroupCollaborateBridgeModifyInstanceRequestAsync(this OcipClient client, GroupCollaborateBridgeModifyInstanceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Adds a Custom Contact Directory to a group.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replace by: GroupCustomContactDirectoryAddRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCustomContactDirectoryAddRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCustomContactDirectoryAddRequest(this OcipClient client, GroupCustomContactDirectoryAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Adds a Custom Contact Directory to a group.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replace by: GroupCustomContactDirectoryAddRequest17
        /// </summary>
        public static async Task<SuccessResponse> GroupCustomContactDirectoryAddRequestAsync(this OcipClient client, GroupCustomContactDirectoryAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a list of users that can be part of a custom contact directory.
        /// The response is either GroupCustomContactDirectoryGetAvailableUserListResponse or ErrorResponse.
        /// Replace by: GroupCustomContactDirectoryGetAvailableUserListRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCustomContactDirectoryGetAvailableUserListRequestAsync instead.")]
        public static async Task<GroupCustomContactDirectoryGetAvailableUserListResponse> GroupCustomContactDirectoryGetAvailableUserListRequest(this OcipClient client, GroupCustomContactDirectoryGetAvailableUserListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCustomContactDirectoryGetAvailableUserListResponse;
        }

        /// <summary>
        /// Get a list of users that can be part of a custom contact directory.
        /// The response is either GroupCustomContactDirectoryGetAvailableUserListResponse or ErrorResponse.
        /// Replace by: GroupCustomContactDirectoryGetAvailableUserListRequest17
        /// </summary>
        public static async Task<GroupCustomContactDirectoryGetAvailableUserListResponse> GroupCustomContactDirectoryGetAvailableUserListRequestAsync(this OcipClient client, GroupCustomContactDirectoryGetAvailableUserListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCustomContactDirectoryGetAvailableUserListResponse;
        }
        /// <summary>
        /// Gets a Custom Contact Directory in a group.
        /// The response is either GroupCustomContactDirectoryGetResponse or ErrorResponse.
        /// Replace by: GroupCustomContactDirectoryGetRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCustomContactDirectoryGetRequestAsync instead.")]
        public static async Task<GroupCustomContactDirectoryGetResponse> GroupCustomContactDirectoryGetRequest(this OcipClient client, GroupCustomContactDirectoryGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCustomContactDirectoryGetResponse;
        }

        /// <summary>
        /// Gets a Custom Contact Directory in a group.
        /// The response is either GroupCustomContactDirectoryGetResponse or ErrorResponse.
        /// Replace by: GroupCustomContactDirectoryGetRequest17
        /// </summary>
        public static async Task<GroupCustomContactDirectoryGetResponse> GroupCustomContactDirectoryGetRequestAsync(this OcipClient client, GroupCustomContactDirectoryGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCustomContactDirectoryGetResponse;
        }
        /// <summary>
        /// Adds a Custom Contact Directory to a group.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replace by: GroupCustomContactDirectoryModifyRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCustomContactDirectoryModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCustomContactDirectoryModifyRequest(this OcipClient client, GroupCustomContactDirectoryModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Adds a Custom Contact Directory to a group.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replace by: GroupCustomContactDirectoryModifyRequest17
        /// </summary>
        public static async Task<SuccessResponse> GroupCustomContactDirectoryModifyRequestAsync(this OcipClient client, GroupCustomContactDirectoryModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the group's custom ring back service settings.
        /// The response is either a GroupCustomRingbackGroupGetResponse or an ErrorResponse.
        /// Replaced By: GroupCustomRingbackGroupGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCustomRingbackGroupGetRequestAsync instead.")]
        public static async Task<GroupCustomRingbackGroupGetResponse> GroupCustomRingbackGroupGetRequest(this OcipClient client, GroupCustomRingbackGroupGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupCustomRingbackGroupGetResponse;
        }

        /// <summary>
        /// Get the group's custom ring back service settings.
        /// The response is either a GroupCustomRingbackGroupGetResponse or an ErrorResponse.
        /// Replaced By: GroupCustomRingbackGroupGetRequest16
        /// </summary>
        public static async Task<GroupCustomRingbackGroupGetResponse> GroupCustomRingbackGroupGetRequestAsync(this OcipClient client, GroupCustomRingbackGroupGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupCustomRingbackGroupGetResponse;
        }
        /// <summary>
        /// Modify the group's custom ring back service settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: GroupCustomRingbackGroupModifyRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupCustomRingbackGroupModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupCustomRingbackGroupModifyRequest(this OcipClient client, GroupCustomRingbackGroupModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the group's custom ring back service settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: GroupCustomRingbackGroupModifyRequest16
        /// </summary>
        public static async Task<SuccessResponse> GroupCustomRingbackGroupModifyRequestAsync(this OcipClient client, GroupCustomRingbackGroupModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request a list of departments in a group. You may request only the
        /// list of departments defined at the group-level, or you may request
        /// the list of all departments in the group including all the departments
        /// defined within the enterprise the group belongs to.
        /// The response is either GroupDepartmentGetListResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupDepartmentGetListRequest18
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupDepartmentGetListRequestAsync instead.")]
        public static async Task<GroupDepartmentGetListResponse> GroupDepartmentGetListRequest(this OcipClient client, GroupDepartmentGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupDepartmentGetListResponse;
        }

        /// <summary>
        /// Request a list of departments in a group. You may request only the
        /// list of departments defined at the group-level, or you may request
        /// the list of all departments in the group including all the departments
        /// defined within the enterprise the group belongs to.
        /// The response is either GroupDepartmentGetListResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupDepartmentGetListRequest18
        /// </summary>
        public static async Task<GroupDepartmentGetListResponse> GroupDepartmentGetListRequestAsync(this OcipClient client, GroupDepartmentGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupDepartmentGetListResponse;
        }
        /// <summary>
        /// Request device management's events for a specific queue.
        /// It is possible to restrict the number of rows returned using
        /// responseSizeLimit.
        /// If eventQueueType is not specified, the events from all the
        /// event queues are returned.
        /// The response is either a GroupDeviceManagementEventGetListResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupDeviceManagementEventGetListRequestAsync instead.")]
        public static async Task<GroupDeviceManagementEventGetListResponse> GroupDeviceManagementEventGetListRequest(this OcipClient client, GroupDeviceManagementEventGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupDeviceManagementEventGetListResponse;
        }

        /// <summary>
        /// Request device management's events for a specific queue.
        /// It is possible to restrict the number of rows returned using
        /// responseSizeLimit.
        /// If eventQueueType is not specified, the events from all the
        /// event queues are returned.
        /// The response is either a GroupDeviceManagementEventGetListResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupDeviceManagementEventGetListResponse> GroupDeviceManagementEventGetListRequestAsync(this OcipClient client, GroupDeviceManagementEventGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupDeviceManagementEventGetListResponse;
        }
        /// <summary>
        /// Request to get the list of device type files managed by the Device Management System, on a per-group basis.
        /// The response is either GroupDeviceTypeFileGetListResponse or ErrorResponse.
        /// Replaced By: GroupDeviceTypeFileGetListRequest14sp8
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupDeviceTypeFileGetListRequestAsync instead.")]
        public static async Task<GroupDeviceTypeFileGetListResponse> GroupDeviceTypeFileGetListRequest(this OcipClient client, GroupDeviceTypeFileGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupDeviceTypeFileGetListResponse;
        }

        /// <summary>
        /// Request to get the list of device type files managed by the Device Management System, on a per-group basis.
        /// The response is either GroupDeviceTypeFileGetListResponse or ErrorResponse.
        /// Replaced By: GroupDeviceTypeFileGetListRequest14sp8
        /// </summary>
        public static async Task<GroupDeviceTypeFileGetListResponse> GroupDeviceTypeFileGetListRequestAsync(this OcipClient client, GroupDeviceTypeFileGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupDeviceTypeFileGetListResponse;
        }
        /// <summary>
        /// Request to get the list of device type files managed by the Device Management System, on a per-group basis.
        /// The response is either GroupDeviceTypeFileGetListResponse14sp8 or ErrorResponse.
        /// 
        /// Replaced by: GroupDeviceTypeFileGetListRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupDeviceTypeFileGetListRequest14sp8Async instead.")]
        public static async Task<GroupDeviceTypeFileGetListResponse14sp8> GroupDeviceTypeFileGetListRequest14sp8(this OcipClient client, GroupDeviceTypeFileGetListRequest14sp8 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupDeviceTypeFileGetListResponse14sp8;
        }

        /// <summary>
        /// Request to get the list of device type files managed by the Device Management System, on a per-group basis.
        /// The response is either GroupDeviceTypeFileGetListResponse14sp8 or ErrorResponse.
        /// 
        /// Replaced by: GroupDeviceTypeFileGetListRequest21
        /// </summary>
        public static async Task<GroupDeviceTypeFileGetListResponse14sp8> GroupDeviceTypeFileGetListRequest14sp8Async(this OcipClient client, GroupDeviceTypeFileGetListRequest14sp8 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupDeviceTypeFileGetListResponse14sp8;
        }
        /// <summary>
        /// Request to get a group device type file.
        /// The response is either GroupDeviceTypeFileGetResponse or ErrorResponse.
        /// Replaced By: GroupDeviceTypeFileGetRequest14sp8
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupDeviceTypeFileGetRequestAsync instead.")]
        public static async Task<GroupDeviceTypeFileGetResponse> GroupDeviceTypeFileGetRequest(this OcipClient client, GroupDeviceTypeFileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupDeviceTypeFileGetResponse;
        }

        /// <summary>
        /// Request to get a group device type file.
        /// The response is either GroupDeviceTypeFileGetResponse or ErrorResponse.
        /// Replaced By: GroupDeviceTypeFileGetRequest14sp8
        /// </summary>
        public static async Task<GroupDeviceTypeFileGetResponse> GroupDeviceTypeFileGetRequestAsync(this OcipClient client, GroupDeviceTypeFileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupDeviceTypeFileGetResponse;
        }
        /// <summary>
        /// Request to get a group device type file.
        /// The response is either GroupDeviceTypeFileGetResponse14sp8 or ErrorResponse.
        /// Replaced by: GroupDeviceTypeFileGetRequest16sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupDeviceTypeFileGetRequest14sp8Async instead.")]
        public static async Task<GroupDeviceTypeFileGetResponse14sp8> GroupDeviceTypeFileGetRequest14sp8(this OcipClient client, GroupDeviceTypeFileGetRequest14sp8 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupDeviceTypeFileGetResponse14sp8;
        }

        /// <summary>
        /// Request to get a group device type file.
        /// The response is either GroupDeviceTypeFileGetResponse14sp8 or ErrorResponse.
        /// Replaced by: GroupDeviceTypeFileGetRequest16sp1
        /// </summary>
        public static async Task<GroupDeviceTypeFileGetResponse14sp8> GroupDeviceTypeFileGetRequest14sp8Async(this OcipClient client, GroupDeviceTypeFileGetRequest14sp8 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupDeviceTypeFileGetResponse14sp8;
        }
        /// <summary>
        /// Request to modify a specified device type file for a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: GroupDeviceTypeFileModifyRequest14sp8
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupDeviceTypeFileModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupDeviceTypeFileModifyRequest(this OcipClient client, GroupDeviceTypeFileModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a specified device type file for a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: GroupDeviceTypeFileModifyRequest14sp8
        /// </summary>
        public static async Task<SuccessResponse> GroupDeviceTypeFileModifyRequestAsync(this OcipClient client, GroupDeviceTypeFileModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request the Group level data associated with Dial Plan Policy.
        /// The response is either a GroupDialPlanPolicyGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: GroupDialPlanPolicyGetRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupDialPlanPolicyGetRequestAsync instead.")]
        public static async Task<GroupDialPlanPolicyGetResponse> GroupDialPlanPolicyGetRequest(this OcipClient client, GroupDialPlanPolicyGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupDialPlanPolicyGetResponse;
        }

        /// <summary>
        /// Request the Group level data associated with Dial Plan Policy.
        /// The response is either a GroupDialPlanPolicyGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: GroupDialPlanPolicyGetRequest17
        /// </summary>
        public static async Task<GroupDialPlanPolicyGetResponse> GroupDialPlanPolicyGetRequestAsync(this OcipClient client, GroupDialPlanPolicyGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupDialPlanPolicyGetResponse;
        }
        /// <summary>
        /// Request to get the properties of the DNH service for a specified serviceUserId.
        /// It gets the agents of a call center or hunt group that are members
        /// of a directory number hunting group.  They are agents that are not already
        /// assigned to any other directory number hunting group.
        /// The response is either GroupDirectoryNumberHuntingGetResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupDirectoryNumberHuntingGetRequest17sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupDirectoryNumberHuntingGetRequestAsync instead.")]
        public static async Task<GroupDirectoryNumberHuntingGetResponse> GroupDirectoryNumberHuntingGetRequest(this OcipClient client, GroupDirectoryNumberHuntingGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupDirectoryNumberHuntingGetResponse;
        }

        /// <summary>
        /// Request to get the properties of the DNH service for a specified serviceUserId.
        /// It gets the agents of a call center or hunt group that are members
        /// of a directory number hunting group.  They are agents that are not already
        /// assigned to any other directory number hunting group.
        /// The response is either GroupDirectoryNumberHuntingGetResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupDirectoryNumberHuntingGetRequest17sp1
        /// </summary>
        public static async Task<GroupDirectoryNumberHuntingGetResponse> GroupDirectoryNumberHuntingGetRequestAsync(this OcipClient client, GroupDirectoryNumberHuntingGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupDirectoryNumberHuntingGetResponse;
        }
        /// <summary>
        /// Get the list of assigned and unassigned DNs in a group. Each DN can be assigned
        /// to a user and/or department. Ranges of DNs with identical assignment and activation properties
        /// are coalesced to a single table row entry.
        /// The response is either a GroupDnGetAssignmentListResponse or an ErrorResponse.
        /// 
        /// Replaced by: GroupDnGetAssignmentListRequest18
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupDnGetAssignmentListRequestAsync instead.")]
        public static async Task<GroupDnGetAssignmentListResponse> GroupDnGetAssignmentListRequest(this OcipClient client, GroupDnGetAssignmentListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupDnGetAssignmentListResponse;
        }

        /// <summary>
        /// Get the list of assigned and unassigned DNs in a group. Each DN can be assigned
        /// to a user and/or department. Ranges of DNs with identical assignment and activation properties
        /// are coalesced to a single table row entry.
        /// The response is either a GroupDnGetAssignmentListResponse or an ErrorResponse.
        /// 
        /// Replaced by: GroupDnGetAssignmentListRequest18
        /// </summary>
        public static async Task<GroupDnGetAssignmentListResponse> GroupDnGetAssignmentListRequestAsync(this OcipClient client, GroupDnGetAssignmentListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupDnGetAssignmentListResponse;
        }
        /// <summary>
        /// Request to add an enterprise trunk in a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: GroupEnterpriseTrunkAddRequest21.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupEnterpriseTrunkAddRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupEnterpriseTrunkAddRequest(this OcipClient client, GroupEnterpriseTrunkAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add an enterprise trunk in a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: GroupEnterpriseTrunkAddRequest21.
        /// </summary>
        public static async Task<SuccessResponse> GroupEnterpriseTrunkAddRequestAsync(this OcipClient client, GroupEnterpriseTrunkAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get an enterprise trunk
        /// The response is either an GroupEnterpriseTrunkGetResponse or an ErrorResponse.
        /// Replaced by: GroupEnterpriseTrunkGetRequest21.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupEnterpriseTrunkGetRequestAsync instead.")]
        public static async Task<GroupEnterpriseTrunkGetResponse> GroupEnterpriseTrunkGetRequest(this OcipClient client, GroupEnterpriseTrunkGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupEnterpriseTrunkGetResponse;
        }

        /// <summary>
        /// Request to get an enterprise trunk
        /// The response is either an GroupEnterpriseTrunkGetResponse or an ErrorResponse.
        /// Replaced by: GroupEnterpriseTrunkGetRequest21.
        /// </summary>
        public static async Task<GroupEnterpriseTrunkGetResponse> GroupEnterpriseTrunkGetRequestAsync(this OcipClient client, GroupEnterpriseTrunkGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupEnterpriseTrunkGetResponse;
        }
        /// <summary>
        /// Request to get an enterprise trunk
        /// The response is either an GroupEnterpriseTrunkGetResponse21 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupEnterpriseTrunkGetRequest21Async instead.")]
        public static async Task<GroupEnterpriseTrunkGetResponse21> GroupEnterpriseTrunkGetRequest21(this OcipClient client, GroupEnterpriseTrunkGetRequest21 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupEnterpriseTrunkGetResponse21;
        }

        /// <summary>
        /// Request to get an enterprise trunk
        /// The response is either an GroupEnterpriseTrunkGetResponse21 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupEnterpriseTrunkGetResponse21> GroupEnterpriseTrunkGetRequest21Async(this OcipClient client, GroupEnterpriseTrunkGetRequest21 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupEnterpriseTrunkGetResponse21;
        }
        /// <summary>
        /// Request the group's extension length.
        /// The response is either a GroupExtensionLengthGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupExtensionLengthGetRequestAsync instead.")]
        public static async Task<GroupExtensionLengthGetResponse> GroupExtensionLengthGetRequest(this OcipClient client, GroupExtensionLengthGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupExtensionLengthGetResponse;
        }

        /// <summary>
        /// Request the group's extension length.
        /// The response is either a GroupExtensionLengthGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupExtensionLengthGetResponse> GroupExtensionLengthGetRequestAsync(this OcipClient client, GroupExtensionLengthGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupExtensionLengthGetResponse;
        }
        /// <summary>
        /// Modify the group's extension length.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupExtensionLengthModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupExtensionLengthModifyRequest(this OcipClient client, GroupExtensionLengthModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the group's extension length.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupExtensionLengthModifyRequestAsync(this OcipClient client, GroupExtensionLengthModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the list of feature access codes for a group.
        /// The response is either a GroupFeatureAccessCodeGetListResponse or an ErrorResponse.
        /// Replaced by: GroupFeatureAccessCodeGetRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupFeatureAccessCodeGetListRequestAsync instead.")]
        public static async Task<GroupFeatureAccessCodeGetListResponse> GroupFeatureAccessCodeGetListRequest(this OcipClient client, GroupFeatureAccessCodeGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupFeatureAccessCodeGetListResponse;
        }

        /// <summary>
        /// Get the list of feature access codes for a group.
        /// The response is either a GroupFeatureAccessCodeGetListResponse or an ErrorResponse.
        /// Replaced by: GroupFeatureAccessCodeGetRequest
        /// </summary>
        public static async Task<GroupFeatureAccessCodeGetListResponse> GroupFeatureAccessCodeGetListRequestAsync(this OcipClient client, GroupFeatureAccessCodeGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupFeatureAccessCodeGetListResponse;
        }
        /// <summary>
        /// Get group FAC code level and the list of feature access codes for a group.
        /// The response is either a GroupFeatureAccessCodeGetResponse20 or an
        /// ErrorResponse.
        /// Returned Feature Access Codes may be group specific, or Service Provider
        /// Feature Access Codes, depending on FAC code level.
        /// In release 20 the "Call Recording" FAC name is changed to
        /// "Call Recording - Start".
        /// Replaced by: GroupFeatureAccessCodeGetRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupFeatureAccessCodeGetRequest20Async instead.")]
        public static async Task<GroupFeatureAccessCodeGetResponse20> GroupFeatureAccessCodeGetRequest20(this OcipClient client, GroupFeatureAccessCodeGetRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupFeatureAccessCodeGetResponse20;
        }

        /// <summary>
        /// Get group FAC code level and the list of feature access codes for a group.
        /// The response is either a GroupFeatureAccessCodeGetResponse20 or an
        /// ErrorResponse.
        /// Returned Feature Access Codes may be group specific, or Service Provider
        /// Feature Access Codes, depending on FAC code level.
        /// In release 20 the "Call Recording" FAC name is changed to
        /// "Call Recording - Start".
        /// Replaced by: GroupFeatureAccessCodeGetRequest21
        /// </summary>
        public static async Task<GroupFeatureAccessCodeGetResponse20> GroupFeatureAccessCodeGetRequest20Async(this OcipClient client, GroupFeatureAccessCodeGetRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupFeatureAccessCodeGetResponse20;
        }
        /// <summary>
        /// Modify a list of feature access codes for a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: GroupFeatureAccessCodeModifyRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupFeatureAccessCodeModifyListRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupFeatureAccessCodeModifyListRequest(this OcipClient client, GroupFeatureAccessCodeModifyListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a list of feature access codes for a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: GroupFeatureAccessCodeModifyRequest
        /// </summary>
        public static async Task<SuccessResponse> GroupFeatureAccessCodeModifyListRequestAsync(this OcipClient client, GroupFeatureAccessCodeModifyListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify group FAC code level and the list of feature access codes for a
        /// group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Note: choice element is only valid when useFeatureAccessCodeLevel is set
        /// to "Group", otherwise an ErrorResponse will be returned.
        /// In release 20 the "Call Recording" FAC name is changed to
        /// "Call Recording - Start".
        /// Replaced by: GroupFeatureAccessCodeModifyRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupFeatureAccessCodeModifyRequest20Async instead.")]
        public static async Task<SuccessResponse> GroupFeatureAccessCodeModifyRequest20(this OcipClient client, GroupFeatureAccessCodeModifyRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify group FAC code level and the list of feature access codes for a
        /// group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Note: choice element is only valid when useFeatureAccessCodeLevel is set
        /// to "Group", otherwise an ErrorResponse will be returned.
        /// In release 20 the "Call Recording" FAC name is changed to
        /// "Call Recording - Start".
        /// Replaced by: GroupFeatureAccessCodeModifyRequest21
        /// </summary>
        public static async Task<SuccessResponse> GroupFeatureAccessCodeModifyRequest20Async(this OcipClient client, GroupFeatureAccessCodeModifyRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get all the information of a specific Find-me/Follow-me alerting group selective criteria.
        /// The response is either GroupFindMeFollowMeGetAlertingGroupResponse or ErrorResponse.
        /// Replaced by: GroupFindMeFollowMeGetAlertingGroupSelectiveCriteriaRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupFindMeFollowMeGetAlertingGroupSelectiveCriteriaRequestAsync instead.")]
        public static async Task<GroupFindMeFollowMeGetAlertingGroupResponse> GroupFindMeFollowMeGetAlertingGroupSelectiveCriteriaRequest(this OcipClient client, GroupFindMeFollowMeGetAlertingGroupSelectiveCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupFindMeFollowMeGetAlertingGroupResponse;
        }

        /// <summary>
        /// Request to get all the information of a specific Find-me/Follow-me alerting group selective criteria.
        /// The response is either GroupFindMeFollowMeGetAlertingGroupResponse or ErrorResponse.
        /// Replaced by: GroupFindMeFollowMeGetAlertingGroupSelectiveCriteriaRequest21
        /// </summary>
        public static async Task<GroupFindMeFollowMeGetAlertingGroupResponse> GroupFindMeFollowMeGetAlertingGroupSelectiveCriteriaRequestAsync(this OcipClient client, GroupFindMeFollowMeGetAlertingGroupSelectiveCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupFindMeFollowMeGetAlertingGroupResponse;
        }
        /// <summary>
        /// Request to get all the information of a Find-me/Follow-me instance.
        /// The response is either GroupFindMeFollowMeGetInstanceResponse or ErrorResponse.
        /// Replaced by: GroupFindMeFollowMeGetInstanceRequest19sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupFindMeFollowMeGetInstanceRequestAsync instead.")]
        public static async Task<GroupFindMeFollowMeGetInstanceResponse> GroupFindMeFollowMeGetInstanceRequest(this OcipClient client, GroupFindMeFollowMeGetInstanceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupFindMeFollowMeGetInstanceResponse;
        }

        /// <summary>
        /// Request to get all the information of a Find-me/Follow-me instance.
        /// The response is either GroupFindMeFollowMeGetInstanceResponse or ErrorResponse.
        /// Replaced by: GroupFindMeFollowMeGetInstanceRequest19sp1
        /// </summary>
        public static async Task<GroupFindMeFollowMeGetInstanceResponse> GroupFindMeFollowMeGetInstanceRequestAsync(this OcipClient client, GroupFindMeFollowMeGetInstanceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupFindMeFollowMeGetInstanceResponse;
        }
        /// <summary>
        /// Add a flexible seating host instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupFlexibleSeatingHostAddInstanceRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupFlexibleSeatingHostAddInstanceRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupFlexibleSeatingHostAddInstanceRequest(this OcipClient client, GroupFlexibleSeatingHostAddInstanceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a flexible seating host instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupFlexibleSeatingHostAddInstanceRequest22.
        /// </summary>
        public static async Task<SuccessResponse> GroupFlexibleSeatingHostAddInstanceRequestAsync(this OcipClient client, GroupFlexibleSeatingHostAddInstanceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get all the information of a flexible seating host instance.
        /// The response is either GroupFlexibleSeatingHostGetInstanceResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupFlexibleSeatingHostGetInstanceRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupFlexibleSeatingHostGetInstanceRequestAsync instead.")]
        public static async Task<GroupFlexibleSeatingHostGetInstanceResponse> GroupFlexibleSeatingHostGetInstanceRequest(this OcipClient client, GroupFlexibleSeatingHostGetInstanceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupFlexibleSeatingHostGetInstanceResponse;
        }

        /// <summary>
        /// Request to get all the information of a flexible seating host instance.
        /// The response is either GroupFlexibleSeatingHostGetInstanceResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupFlexibleSeatingHostGetInstanceRequest22.
        /// </summary>
        public static async Task<GroupFlexibleSeatingHostGetInstanceResponse> GroupFlexibleSeatingHostGetInstanceRequestAsync(this OcipClient client, GroupFlexibleSeatingHostGetInstanceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupFlexibleSeatingHostGetInstanceResponse;
        }
        /// <summary>
        /// Request to modify a flexible seating host instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupFlexibleSeatingHostModifyInstanceRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupFlexibleSeatingHostModifyInstanceRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupFlexibleSeatingHostModifyInstanceRequest(this OcipClient client, GroupFlexibleSeatingHostModifyInstanceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a flexible seating host instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupFlexibleSeatingHostModifyInstanceRequest22.
        /// </summary>
        public static async Task<SuccessResponse> GroupFlexibleSeatingHostModifyInstanceRequestAsync(this OcipClient client, GroupFlexibleSeatingHostModifyInstanceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the profile for a group.
        /// The response is either a GroupGetResponse or an ErrorResponse.
        /// Replaced By: GroupGetRequest14sp7
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupGetRequestAsync instead.")]
        public static async Task<GroupGetResponse> GroupGetRequest(this OcipClient client, GroupGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupGetResponse;
        }

        /// <summary>
        /// Get the profile for a group.
        /// The response is either a GroupGetResponse or an ErrorResponse.
        /// Replaced By: GroupGetRequest14sp7
        /// </summary>
        public static async Task<GroupGetResponse> GroupGetRequestAsync(this OcipClient client, GroupGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupGetResponse;
        }
        /// <summary>
        /// Get the profile for a group.
        /// The response is either a GroupGetResponse14sp7 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupGetRequest14sp7Async instead.")]
        public static async Task<GroupGetResponse14sp7> GroupGetRequest14sp7(this OcipClient client, GroupGetRequest14sp7 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupGetResponse14sp7;
        }

        /// <summary>
        /// Get the profile for a group.
        /// The response is either a GroupGetResponse14sp7 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupGetResponse14sp7> GroupGetRequest14sp7Async(this OcipClient client, GroupGetRequest14sp7 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupGetResponse14sp7;
        }
        /// <summary>
        /// Replaced by: GroupGroupPagingGetInstanceRequest17sp3
        /// Request to get all the information of a Group Paging instance.
        /// The response is either GroupGroupPagingGetInstanceResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupGroupPagingGetInstanceRequestAsync instead.")]
        public static async Task<GroupGroupPagingGetInstanceResponse> GroupGroupPagingGetInstanceRequest(this OcipClient client, GroupGroupPagingGetInstanceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupGroupPagingGetInstanceResponse;
        }

        /// <summary>
        /// Replaced by: GroupGroupPagingGetInstanceRequest17sp3
        /// Request to get all the information of a Group Paging instance.
        /// The response is either GroupGroupPagingGetInstanceResponse or ErrorResponse.
        /// </summary>
        public static async Task<GroupGroupPagingGetInstanceResponse> GroupGroupPagingGetInstanceRequestAsync(this OcipClient client, GroupGroupPagingGetInstanceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupGroupPagingGetInstanceResponse;
        }
        /// <summary>
        /// Request to get all the information of a Group Paging instance.
        /// The response is either GroupGroupPagingGetInstanceResponse17sp3 or ErrorResponse.
        /// 
        /// Replaced by: GroupGroupPagingGetInstanceRequest19sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupGroupPagingGetInstanceRequest17sp3Async instead.")]
        public static async Task<GroupGroupPagingGetInstanceResponse17sp3> GroupGroupPagingGetInstanceRequest17sp3(this OcipClient client, GroupGroupPagingGetInstanceRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupGroupPagingGetInstanceResponse17sp3;
        }

        /// <summary>
        /// Request to get all the information of a Group Paging instance.
        /// The response is either GroupGroupPagingGetInstanceResponse17sp3 or ErrorResponse.
        /// 
        /// Replaced by: GroupGroupPagingGetInstanceRequest19sp1
        /// </summary>
        public static async Task<GroupGroupPagingGetInstanceResponse17sp3> GroupGroupPagingGetInstanceRequest17sp3Async(this OcipClient client, GroupGroupPagingGetInstanceRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupGroupPagingGetInstanceResponse17sp3;
        }
        /// <summary>
        /// Add a holiday schedule to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupHolidayScheduleAddRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupHolidayScheduleAddRequest(this OcipClient client, GroupHolidayScheduleAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a holiday schedule to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupHolidayScheduleAddRequestAsync(this OcipClient client, GroupHolidayScheduleAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Delete a holiday schedule from a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupHolidayScheduleDeleteRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupHolidayScheduleDeleteRequest(this OcipClient client, GroupHolidayScheduleDeleteRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Delete a holiday schedule from a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupHolidayScheduleDeleteRequestAsync(this OcipClient client, GroupHolidayScheduleDeleteRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a holiday schedule in a group.
        /// The response is either a GroupHolidayScheduleGetListResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupHolidayScheduleGetListRequestAsync instead.")]
        public static async Task<GroupHolidayScheduleGetListResponse> GroupHolidayScheduleGetListRequest(this OcipClient client, GroupHolidayScheduleGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupHolidayScheduleGetListResponse;
        }

        /// <summary>
        /// Get a holiday schedule in a group.
        /// The response is either a GroupHolidayScheduleGetListResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupHolidayScheduleGetListResponse> GroupHolidayScheduleGetListRequestAsync(this OcipClient client, GroupHolidayScheduleGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupHolidayScheduleGetListResponse;
        }
        /// <summary>
        /// Get a holiday schedule in a group.
        /// The response is either a GroupHolidayScheduleGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupHolidayScheduleGetRequestAsync instead.")]
        public static async Task<GroupHolidayScheduleGetResponse> GroupHolidayScheduleGetRequest(this OcipClient client, GroupHolidayScheduleGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupHolidayScheduleGetResponse;
        }

        /// <summary>
        /// Get a holiday schedule in a group.
        /// The response is either a GroupHolidayScheduleGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupHolidayScheduleGetResponse> GroupHolidayScheduleGetRequestAsync(this OcipClient client, GroupHolidayScheduleGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupHolidayScheduleGetResponse;
        }
        /// <summary>
        /// Modify a holiday schedule in a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupHolidayScheduleModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupHolidayScheduleModifyRequest(this OcipClient client, GroupHolidayScheduleModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a holiday schedule in a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupHolidayScheduleModifyRequestAsync(this OcipClient client, GroupHolidayScheduleModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Hunt Group instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupHuntGroupAddInstanceRequest14Async instead.")]
        public static async Task<SuccessResponse> GroupHuntGroupAddInstanceRequest14(this OcipClient client, GroupHuntGroupAddInstanceRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Hunt Group instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupHuntGroupAddInstanceRequest14Async(this OcipClient client, GroupHuntGroupAddInstanceRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Hunt Group instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in XS data mode:
        /// allowMembersToControlGroupBusy, use value "false" in AS data mode
        /// enableGroupBusy, use value "false" in AS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupHuntGroupAddInstanceRequest17sp1V1Async instead.")]
        public static async Task<SuccessResponse> GroupHuntGroupAddInstanceRequest17sp1V1(this OcipClient client, GroupHuntGroupAddInstanceRequest17sp1V1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Hunt Group instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in XS data mode:
        /// allowMembersToControlGroupBusy, use value "false" in AS data mode
        /// enableGroupBusy, use value "false" in AS data mode
        /// </summary>
        public static async Task<SuccessResponse> GroupHuntGroupAddInstanceRequest17sp1V1Async(this OcipClient client, GroupHuntGroupAddInstanceRequest17sp1V1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Hunt Group instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in AS data mode:
        /// useSystemHuntGroupCLIDSetting, use value "true" in XS data mode
        /// includeHuntGroupNameInCLID, use value "true" in XS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupHuntGroupAddInstanceRequest17sp3Async instead.")]
        public static async Task<SuccessResponse> GroupHuntGroupAddInstanceRequest17sp3(this OcipClient client, GroupHuntGroupAddInstanceRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Hunt Group instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in AS data mode:
        /// useSystemHuntGroupCLIDSetting, use value "true" in XS data mode
        /// includeHuntGroupNameInCLID, use value "true" in XS data mode
        /// </summary>
        public static async Task<SuccessResponse> GroupHuntGroupAddInstanceRequest17sp3Async(this OcipClient client, GroupHuntGroupAddInstanceRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Hunt Group instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in AS data mode:
        /// useSystemHuntGroupCLIDSetting, use value "true" in XS data mode
        /// includeHuntGroupNameInCLID, use value "true" in XS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupHuntGroupAddInstanceRequest17sp4Async instead.")]
        public static async Task<SuccessResponse> GroupHuntGroupAddInstanceRequest17sp4(this OcipClient client, GroupHuntGroupAddInstanceRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Hunt Group instance to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in AS data mode:
        /// useSystemHuntGroupCLIDSetting, use value "true" in XS data mode
        /// includeHuntGroupNameInCLID, use value "true" in XS data mode
        /// </summary>
        public static async Task<SuccessResponse> GroupHuntGroupAddInstanceRequest17sp4Async(this OcipClient client, GroupHuntGroupAddInstanceRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get all the information of a Hunt Group instance.
        /// The response is either GroupHuntGroupGetInstanceResponse14 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupHuntGroupGetInstanceRequest14Async instead.")]
        public static async Task<GroupHuntGroupGetInstanceResponse14> GroupHuntGroupGetInstanceRequest14(this OcipClient client, GroupHuntGroupGetInstanceRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupHuntGroupGetInstanceResponse14;
        }

        /// <summary>
        /// Request to get all the information of a Hunt Group instance.
        /// The response is either GroupHuntGroupGetInstanceResponse14 or ErrorResponse.
        /// </summary>
        public static async Task<GroupHuntGroupGetInstanceResponse14> GroupHuntGroupGetInstanceRequest14Async(this OcipClient client, GroupHuntGroupGetInstanceRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupHuntGroupGetInstanceResponse14;
        }
        /// <summary>
        /// Request to get all the information of a Hunt Group instance.
        /// The response is either GroupHuntGroupGetInstanceResponse17 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupHuntGroupGetInstanceRequest17Async instead.")]
        public static async Task<GroupHuntGroupGetInstanceResponse17> GroupHuntGroupGetInstanceRequest17(this OcipClient client, GroupHuntGroupGetInstanceRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupHuntGroupGetInstanceResponse17;
        }

        /// <summary>
        /// Request to get all the information of a Hunt Group instance.
        /// The response is either GroupHuntGroupGetInstanceResponse17 or ErrorResponse.
        /// </summary>
        public static async Task<GroupHuntGroupGetInstanceResponse17> GroupHuntGroupGetInstanceRequest17Async(this OcipClient client, GroupHuntGroupGetInstanceRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupHuntGroupGetInstanceResponse17;
        }
        /// <summary>
        /// Request to get all the information of a Hunt Group instance.
        /// The response is either GroupHuntGroupGetInstanceResponse17sp1V1 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupHuntGroupGetInstanceRequest17sp1V1Async instead.")]
        public static async Task<GroupHuntGroupGetInstanceResponse17sp1V1> GroupHuntGroupGetInstanceRequest17sp1V1(this OcipClient client, GroupHuntGroupGetInstanceRequest17sp1V1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupHuntGroupGetInstanceResponse17sp1V1;
        }

        /// <summary>
        /// Request to get all the information of a Hunt Group instance.
        /// The response is either GroupHuntGroupGetInstanceResponse17sp1V1 or ErrorResponse.
        /// </summary>
        public static async Task<GroupHuntGroupGetInstanceResponse17sp1V1> GroupHuntGroupGetInstanceRequest17sp1V1Async(this OcipClient client, GroupHuntGroupGetInstanceRequest17sp1V1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupHuntGroupGetInstanceResponse17sp1V1;
        }
        /// <summary>
        /// Request to get all the information of a Hunt Group instance.
        /// The response is either GroupHuntGroupGetInstanceResponse17sp3 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupHuntGroupGetInstanceRequest17sp3Async instead.")]
        public static async Task<GroupHuntGroupGetInstanceResponse17sp3> GroupHuntGroupGetInstanceRequest17sp3(this OcipClient client, GroupHuntGroupGetInstanceRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupHuntGroupGetInstanceResponse17sp3;
        }

        /// <summary>
        /// Request to get all the information of a Hunt Group instance.
        /// The response is either GroupHuntGroupGetInstanceResponse17sp3 or ErrorResponse.
        /// </summary>
        public static async Task<GroupHuntGroupGetInstanceResponse17sp3> GroupHuntGroupGetInstanceRequest17sp3Async(this OcipClient client, GroupHuntGroupGetInstanceRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupHuntGroupGetInstanceResponse17sp3;
        }
        /// <summary>
        /// Request to get all the information of a Hunt Group instance.
        /// The response is either GroupHuntGroupGetInstanceResponse17sp4 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupHuntGroupGetInstanceRequest17sp4Async instead.")]
        public static async Task<GroupHuntGroupGetInstanceResponse17sp4> GroupHuntGroupGetInstanceRequest17sp4(this OcipClient client, GroupHuntGroupGetInstanceRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupHuntGroupGetInstanceResponse17sp4;
        }

        /// <summary>
        /// Request to get all the information of a Hunt Group instance.
        /// The response is either GroupHuntGroupGetInstanceResponse17sp4 or ErrorResponse.
        /// </summary>
        public static async Task<GroupHuntGroupGetInstanceResponse17sp4> GroupHuntGroupGetInstanceRequest17sp4Async(this OcipClient client, GroupHuntGroupGetInstanceRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupHuntGroupGetInstanceResponse17sp4;
        }
        /// <summary>
        /// Request to get all the information of a Hunt Group instance.
        /// The response is either GroupHuntGroupGetInstanceResponse19sp1 or ErrorResponse.
        /// 
        /// Replaced by: GroupHuntGroupGetInstanceRequest20
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupHuntGroupGetInstanceRequest19sp1Async instead.")]
        public static async Task<GroupHuntGroupGetInstanceResponse19sp1> GroupHuntGroupGetInstanceRequest19sp1(this OcipClient client, GroupHuntGroupGetInstanceRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupHuntGroupGetInstanceResponse19sp1;
        }

        /// <summary>
        /// Request to get all the information of a Hunt Group instance.
        /// The response is either GroupHuntGroupGetInstanceResponse19sp1 or ErrorResponse.
        /// 
        /// Replaced by: GroupHuntGroupGetInstanceRequest20
        /// </summary>
        public static async Task<GroupHuntGroupGetInstanceResponse19sp1> GroupHuntGroupGetInstanceRequest19sp1Async(this OcipClient client, GroupHuntGroupGetInstanceRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupHuntGroupGetInstanceResponse19sp1;
        }
        /// <summary>
        /// Request to get all the information of an Instant Group Call service instance.
        /// The response is either GroupInstantGroupCallGetInstanceResponse14 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupInstantGroupCallGetInstanceRequest14Async instead.")]
        public static async Task<GroupInstantGroupCallGetInstanceResponse14> GroupInstantGroupCallGetInstanceRequest14(this OcipClient client, GroupInstantGroupCallGetInstanceRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupInstantGroupCallGetInstanceResponse14;
        }

        /// <summary>
        /// Request to get all the information of an Instant Group Call service instance.
        /// The response is either GroupInstantGroupCallGetInstanceResponse14 or ErrorResponse.
        /// </summary>
        public static async Task<GroupInstantGroupCallGetInstanceResponse14> GroupInstantGroupCallGetInstanceRequest14Async(this OcipClient client, GroupInstantGroupCallGetInstanceRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupInstantGroupCallGetInstanceResponse14;
        }
        /// <summary>
        /// Request to get all the information of an Instant Group Call service instance.
        /// The response is either GroupInstantGroupCallGetInstanceResponse17 or ErrorResponse.
        /// 
        /// Replaced by: GroupInstantGroupCallGetInstanceRequest19sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupInstantGroupCallGetInstanceRequest17Async instead.")]
        public static async Task<GroupInstantGroupCallGetInstanceResponse17> GroupInstantGroupCallGetInstanceRequest17(this OcipClient client, GroupInstantGroupCallGetInstanceRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupInstantGroupCallGetInstanceResponse17;
        }

        /// <summary>
        /// Request to get all the information of an Instant Group Call service instance.
        /// The response is either GroupInstantGroupCallGetInstanceResponse17 or ErrorResponse.
        /// 
        /// Replaced by: GroupInstantGroupCallGetInstanceRequest19sp1
        /// </summary>
        public static async Task<GroupInstantGroupCallGetInstanceResponse17> GroupInstantGroupCallGetInstanceRequest17Async(this OcipClient client, GroupInstantGroupCallGetInstanceRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupInstantGroupCallGetInstanceResponse17;
        }
        /// <summary>
        /// Get the group's intercept group service settings.
        /// The response is either a GroupInterceptGroupGetResponse or an ErrorResponse.
        /// Replaced By: GroupInterceptGroupGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupInterceptGroupGetRequestAsync instead.")]
        public static async Task<GroupInterceptGroupGetResponse> GroupInterceptGroupGetRequest(this OcipClient client, GroupInterceptGroupGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupInterceptGroupGetResponse;
        }

        /// <summary>
        /// Get the group's intercept group service settings.
        /// The response is either a GroupInterceptGroupGetResponse or an ErrorResponse.
        /// Replaced By: GroupInterceptGroupGetRequest16
        /// </summary>
        public static async Task<GroupInterceptGroupGetResponse> GroupInterceptGroupGetRequestAsync(this OcipClient client, GroupInterceptGroupGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupInterceptGroupGetResponse;
        }
        /// <summary>
        /// Get the group's intercept group service settings.
        /// The response is either a GroupInterceptGroupGetResponse16 or an ErrorResponse.
        /// Replaced By: GroupInterceptGroupGetRequest16sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupInterceptGroupGetRequest16Async instead.")]
        public static async Task<GroupInterceptGroupGetResponse16> GroupInterceptGroupGetRequest16(this OcipClient client, GroupInterceptGroupGetRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupInterceptGroupGetResponse16;
        }

        /// <summary>
        /// Get the group's intercept group service settings.
        /// The response is either a GroupInterceptGroupGetResponse16 or an ErrorResponse.
        /// Replaced By: GroupInterceptGroupGetRequest16sp1
        /// </summary>
        public static async Task<GroupInterceptGroupGetResponse16> GroupInterceptGroupGetRequest16Async(this OcipClient client, GroupInterceptGroupGetRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupInterceptGroupGetResponse16;
        }
        /// <summary>
        /// Modify the group's intercept group service settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: GroupInterceptGroupModifyRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupInterceptGroupModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupInterceptGroupModifyRequest(this OcipClient client, GroupInterceptGroupModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the group's intercept group service settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: GroupInterceptGroupModifyRequest16
        /// </summary>
        public static async Task<SuccessResponse> GroupInterceptGroupModifyRequestAsync(this OcipClient client, GroupInterceptGroupModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Meet-Me Conferencing bridge to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupMeetMeConferencingAddInstanceRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupMeetMeConferencingAddInstanceRequest(this OcipClient client, GroupMeetMeConferencingAddInstanceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Meet-Me Conferencing bridge to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupMeetMeConferencingAddInstanceRequestAsync(this OcipClient client, GroupMeetMeConferencingAddInstanceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Meet-Me Conferencing bridge to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupMeetMeConferencingAddInstanceRequest18Async instead.")]
        public static async Task<SuccessResponse> GroupMeetMeConferencingAddInstanceRequest18(this OcipClient client, GroupMeetMeConferencingAddInstanceRequest18 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Meet-Me Conferencing bridge to a group.
        /// The domain is required in the serviceUserId.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupMeetMeConferencingAddInstanceRequest18Async(this OcipClient client, GroupMeetMeConferencingAddInstanceRequest18 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get all the information of a Meet-Me Conferencing bridge.
        /// The response is either GroupMeetMeConferencingGetInstanceResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupMeetMeConferencingGetInstanceRequestAsync instead.")]
        public static async Task<GroupMeetMeConferencingGetInstanceResponse> GroupMeetMeConferencingGetInstanceRequest(this OcipClient client, GroupMeetMeConferencingGetInstanceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupMeetMeConferencingGetInstanceResponse;
        }

        /// <summary>
        /// Request to get all the information of a Meet-Me Conferencing bridge.
        /// The response is either GroupMeetMeConferencingGetInstanceResponse or ErrorResponse.
        /// </summary>
        public static async Task<GroupMeetMeConferencingGetInstanceResponse> GroupMeetMeConferencingGetInstanceRequestAsync(this OcipClient client, GroupMeetMeConferencingGetInstanceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupMeetMeConferencingGetInstanceResponse;
        }
        /// <summary>
        /// Request to get all the information of a Meet-Me Conferencing bridge.
        /// The response is either GroupMeetMeConferencingGetInstanceResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupMeetMeConferencingGetInstanceRequest17sp3Async instead.")]
        public static async Task<GroupMeetMeConferencingGetInstanceResponse> GroupMeetMeConferencingGetInstanceRequest17sp3(this OcipClient client, GroupMeetMeConferencingGetInstanceRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupMeetMeConferencingGetInstanceResponse;
        }

        /// <summary>
        /// Request to get all the information of a Meet-Me Conferencing bridge.
        /// The response is either GroupMeetMeConferencingGetInstanceResponse or ErrorResponse.
        /// </summary>
        public static async Task<GroupMeetMeConferencingGetInstanceResponse> GroupMeetMeConferencingGetInstanceRequest17sp3Async(this OcipClient client, GroupMeetMeConferencingGetInstanceRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupMeetMeConferencingGetInstanceResponse;
        }
        /// <summary>
        /// Request to get all the information of a Meet-Me Conferencing bridge.
        /// The response is either GroupMeetMeConferencingGetInstanceResponse17sp4 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupMeetMeConferencingGetInstanceRequest17sp4Async instead.")]
        public static async Task<GroupMeetMeConferencingGetInstanceResponse17sp4> GroupMeetMeConferencingGetInstanceRequest17sp4(this OcipClient client, GroupMeetMeConferencingGetInstanceRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupMeetMeConferencingGetInstanceResponse17sp4;
        }

        /// <summary>
        /// Request to get all the information of a Meet-Me Conferencing bridge.
        /// The response is either GroupMeetMeConferencingGetInstanceResponse17sp4 or ErrorResponse.
        /// </summary>
        public static async Task<GroupMeetMeConferencingGetInstanceResponse17sp4> GroupMeetMeConferencingGetInstanceRequest17sp4Async(this OcipClient client, GroupMeetMeConferencingGetInstanceRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupMeetMeConferencingGetInstanceResponse17sp4;
        }
        /// <summary>
        /// Request to get all the information of a Meet-Me Conferencing bridge.
        /// The response is either GroupMeetMeConferencingGetInstanceResponse18 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupMeetMeConferencingGetInstanceRequest18Async instead.")]
        public static async Task<GroupMeetMeConferencingGetInstanceResponse18> GroupMeetMeConferencingGetInstanceRequest18(this OcipClient client, GroupMeetMeConferencingGetInstanceRequest18 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupMeetMeConferencingGetInstanceResponse18;
        }

        /// <summary>
        /// Request to get all the information of a Meet-Me Conferencing bridge.
        /// The response is either GroupMeetMeConferencingGetInstanceResponse18 or ErrorResponse.
        /// </summary>
        public static async Task<GroupMeetMeConferencingGetInstanceResponse18> GroupMeetMeConferencingGetInstanceRequest18Async(this OcipClient client, GroupMeetMeConferencingGetInstanceRequest18 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupMeetMeConferencingGetInstanceResponse18;
        }
        /// <summary>
        /// Request to get all the information of a Meet-Me Conferencing bridge.
        /// The response is either GroupMeetMeConferencingGetInstanceResponse19 or ErrorResponse.
        /// 
        /// Replaced by: GroupMeetMeConferencingGetInstanceRequest19sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupMeetMeConferencingGetInstanceRequest19Async instead.")]
        public static async Task<GroupMeetMeConferencingGetInstanceResponse19> GroupMeetMeConferencingGetInstanceRequest19(this OcipClient client, GroupMeetMeConferencingGetInstanceRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupMeetMeConferencingGetInstanceResponse19;
        }

        /// <summary>
        /// Request to get all the information of a Meet-Me Conferencing bridge.
        /// The response is either GroupMeetMeConferencingGetInstanceResponse19 or ErrorResponse.
        /// 
        /// Replaced by: GroupMeetMeConferencingGetInstanceRequest19sp1
        /// </summary>
        public static async Task<GroupMeetMeConferencingGetInstanceResponse19> GroupMeetMeConferencingGetInstanceRequest19Async(this OcipClient client, GroupMeetMeConferencingGetInstanceRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupMeetMeConferencingGetInstanceResponse19;
        }
        /// <summary>
        /// Add a Music On Hold Instance to a department.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: GroupMusicOnHoldAddInstanceRequest14Sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupMusicOnHoldAddInstanceRequest14Async instead.")]
        public static async Task<SuccessResponse> GroupMusicOnHoldAddInstanceRequest14(this OcipClient client, GroupMusicOnHoldAddInstanceRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Music On Hold Instance to a department.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: GroupMusicOnHoldAddInstanceRequest14Sp4
        /// </summary>
        public static async Task<SuccessResponse> GroupMusicOnHoldAddInstanceRequest14Async(this OcipClient client, GroupMusicOnHoldAddInstanceRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Music On Hold Instance to a department.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupMusicOnHoldAddInstanceRequest14sp4Async instead.")]
        public static async Task<SuccessResponse> GroupMusicOnHoldAddInstanceRequest14sp4(this OcipClient client, GroupMusicOnHoldAddInstanceRequest14sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Music On Hold Instance to a department.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupMusicOnHoldAddInstanceRequest14sp4Async(this OcipClient client, GroupMusicOnHoldAddInstanceRequest14sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Music on Hold Instance to a department.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: GroupMusicOnHoldAddInstanceRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupMusicOnHoldAddInstanceRequest14sp6Async instead.")]
        public static async Task<SuccessResponse> GroupMusicOnHoldAddInstanceRequest14sp6(this OcipClient client, GroupMusicOnHoldAddInstanceRequest14sp6 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Music on Hold Instance to a department.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: GroupMusicOnHoldAddInstanceRequest16
        /// </summary>
        public static async Task<SuccessResponse> GroupMusicOnHoldAddInstanceRequest14sp6Async(this OcipClient client, GroupMusicOnHoldAddInstanceRequest14sp6 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Music on Hold Instance to a department.
        /// The response is either SuccessResponse or
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupMusicOnHoldAddInstanceRequest16Async instead.")]
        public static async Task<SuccessResponse> GroupMusicOnHoldAddInstanceRequest16(this OcipClient client, GroupMusicOnHoldAddInstanceRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Music on Hold Instance to a department.
        /// The response is either SuccessResponse or
        /// ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupMusicOnHoldAddInstanceRequest16Async(this OcipClient client, GroupMusicOnHoldAddInstanceRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a Music On Hold data for a group or department instance.
        /// The response is either GroupMusicOnHoldGetInstanceResponse14 or ErrorResponse.
        /// Replaced By: GroupMusicOnHoldGetInstanceRequest14Sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupMusicOnHoldGetInstanceRequest14Async instead.")]
        public static async Task<GroupMusicOnHoldGetInstanceResponse14> GroupMusicOnHoldGetInstanceRequest14(this OcipClient client, GroupMusicOnHoldGetInstanceRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupMusicOnHoldGetInstanceResponse14;
        }

        /// <summary>
        /// Get a Music On Hold data for a group or department instance.
        /// The response is either GroupMusicOnHoldGetInstanceResponse14 or ErrorResponse.
        /// Replaced By: GroupMusicOnHoldGetInstanceRequest14Sp4
        /// </summary>
        public static async Task<GroupMusicOnHoldGetInstanceResponse14> GroupMusicOnHoldGetInstanceRequest14Async(this OcipClient client, GroupMusicOnHoldGetInstanceRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupMusicOnHoldGetInstanceResponse14;
        }
        /// <summary>
        /// Get a Music On Hold data for a group or department instance.
        /// The response is either GroupMusicOnHoldGetInstanceResponse14sp4 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupMusicOnHoldGetInstanceRequest14sp4Async instead.")]
        public static async Task<GroupMusicOnHoldGetInstanceResponse14sp4> GroupMusicOnHoldGetInstanceRequest14sp4(this OcipClient client, GroupMusicOnHoldGetInstanceRequest14sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupMusicOnHoldGetInstanceResponse14sp4;
        }

        /// <summary>
        /// Get a Music On Hold data for a group or department instance.
        /// The response is either GroupMusicOnHoldGetInstanceResponse14sp4 or ErrorResponse.
        /// </summary>
        public static async Task<GroupMusicOnHoldGetInstanceResponse14sp4> GroupMusicOnHoldGetInstanceRequest14sp4Async(this OcipClient client, GroupMusicOnHoldGetInstanceRequest14sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupMusicOnHoldGetInstanceResponse14sp4;
        }
        /// <summary>
        /// Get a Music On Hold data for a group or department instance.
        /// The response is either GroupMusicOnHoldGetInstanceResponse14sp6 or ErrorResponse.
        /// Replaced By: GroupMusicOnHoldGetInstanceRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupMusicOnHoldGetInstanceRequest14sp6Async instead.")]
        public static async Task<GroupMusicOnHoldGetInstanceResponse14sp6> GroupMusicOnHoldGetInstanceRequest14sp6(this OcipClient client, GroupMusicOnHoldGetInstanceRequest14sp6 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupMusicOnHoldGetInstanceResponse14sp6;
        }

        /// <summary>
        /// Get a Music On Hold data for a group or department instance.
        /// The response is either GroupMusicOnHoldGetInstanceResponse14sp6 or ErrorResponse.
        /// Replaced By: GroupMusicOnHoldGetInstanceRequest16
        /// </summary>
        public static async Task<GroupMusicOnHoldGetInstanceResponse14sp6> GroupMusicOnHoldGetInstanceRequest14sp6Async(this OcipClient client, GroupMusicOnHoldGetInstanceRequest14sp6 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupMusicOnHoldGetInstanceResponse14sp6;
        }
        /// <summary>
        /// Get a Music On Hold data for a group or department instance.
        /// The response is either GroupMusicOnHoldGetInstanceResponse16 or ErrorResponse.
        /// 
        /// Replaced by: GroupMusicOnHoldGetInstanceRequest19.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupMusicOnHoldGetInstanceRequest16Async instead.")]
        public static async Task<GroupMusicOnHoldGetInstanceResponse16> GroupMusicOnHoldGetInstanceRequest16(this OcipClient client, GroupMusicOnHoldGetInstanceRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupMusicOnHoldGetInstanceResponse16;
        }

        /// <summary>
        /// Get a Music On Hold data for a group or department instance.
        /// The response is either GroupMusicOnHoldGetInstanceResponse16 or ErrorResponse.
        /// 
        /// Replaced by: GroupMusicOnHoldGetInstanceRequest19.
        /// </summary>
        public static async Task<GroupMusicOnHoldGetInstanceResponse16> GroupMusicOnHoldGetInstanceRequest16Async(this OcipClient client, GroupMusicOnHoldGetInstanceRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupMusicOnHoldGetInstanceResponse16;
        }
        /// <summary>
        /// Modify data for a group or department Music On Hold Instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupMusicOnHoldModifyInstanceRequest14Async instead.")]
        public static async Task<SuccessResponse> GroupMusicOnHoldModifyInstanceRequest14(this OcipClient client, GroupMusicOnHoldModifyInstanceRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify data for a group or department Music On Hold Instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupMusicOnHoldModifyInstanceRequest14Async(this OcipClient client, GroupMusicOnHoldModifyInstanceRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify data for a group or department Music On Hold Instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: GroupMusicOnHoldModifyInstanceRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupMusicOnHoldModifyInstanceRequest14sp6Async instead.")]
        public static async Task<SuccessResponse> GroupMusicOnHoldModifyInstanceRequest14sp6(this OcipClient client, GroupMusicOnHoldModifyInstanceRequest14sp6 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify data for a group or department Music On Hold Instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: GroupMusicOnHoldModifyInstanceRequest16
        /// </summary>
        public static async Task<SuccessResponse> GroupMusicOnHoldModifyInstanceRequest14sp6Async(this OcipClient client, GroupMusicOnHoldModifyInstanceRequest14sp6 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify data for a group or department Music On
        /// Hold Instance. The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupMusicOnHoldModifyInstanceRequest16Async instead.")]
        public static async Task<SuccessResponse> GroupMusicOnHoldModifyInstanceRequest16(this OcipClient client, GroupMusicOnHoldModifyInstanceRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify data for a group or department Music On
        /// Hold Instance. The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupMusicOnHoldModifyInstanceRequest16Async(this OcipClient client, GroupMusicOnHoldModifyInstanceRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Requests the group's password rules setting that is applicable to
        /// users within the group.
        /// The response is either GroupPasswordRulesGetResponse or ErrorResponse.
        /// Replaced by: GroupPasswordRulesGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupPasswordRulesGetRequestAsync instead.")]
        public static async Task<GroupPasswordRulesGetResponse> GroupPasswordRulesGetRequest(this OcipClient client, GroupPasswordRulesGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupPasswordRulesGetResponse;
        }

        /// <summary>
        /// Requests the group's password rules setting that is applicable to
        /// users within the group.
        /// The response is either GroupPasswordRulesGetResponse or ErrorResponse.
        /// Replaced by: GroupPasswordRulesGetRequest16
        /// </summary>
        public static async Task<GroupPasswordRulesGetResponse> GroupPasswordRulesGetRequestAsync(this OcipClient client, GroupPasswordRulesGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupPasswordRulesGetResponse;
        }
        /// <summary>
        /// Request a table containing the phone directory for a group.
        /// If the specified group is part of an enterprise, the directory includes all users in the enterprise
        /// and all entries in the enterprise common phone list and the common phone list of the specified group.
        /// If the specified group is part of a service provider, the directory includes all users in the group
        /// and all entries in the common phone list of the specified group.
        /// It is possible to search by various criteria to restrict the number of rows returned.
        /// Multiple search criteria are logically ANDed together.
        /// The response is either GroupPhoneDirectoryGetListResponse or ErrorResponse.
        /// 
        /// Replace by: GroupPhoneDirectoryGetListRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupPhoneDirectoryGetListRequestAsync instead.")]
        public static async Task<GroupPhoneDirectoryGetListResponse> GroupPhoneDirectoryGetListRequest(this OcipClient client, GroupPhoneDirectoryGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupPhoneDirectoryGetListResponse;
        }

        /// <summary>
        /// Request a table containing the phone directory for a group.
        /// If the specified group is part of an enterprise, the directory includes all users in the enterprise
        /// and all entries in the enterprise common phone list and the common phone list of the specified group.
        /// If the specified group is part of a service provider, the directory includes all users in the group
        /// and all entries in the common phone list of the specified group.
        /// It is possible to search by various criteria to restrict the number of rows returned.
        /// Multiple search criteria are logically ANDed together.
        /// The response is either GroupPhoneDirectoryGetListResponse or ErrorResponse.
        /// 
        /// Replace by: GroupPhoneDirectoryGetListRequest17
        /// </summary>
        public static async Task<GroupPhoneDirectoryGetListResponse> GroupPhoneDirectoryGetListRequestAsync(this OcipClient client, GroupPhoneDirectoryGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupPhoneDirectoryGetListResponse;
        }
        /// <summary>
        /// Request a table containing the phone directory for a group.
        /// If the specified group is part of an enterprise, the directory
        /// includes all users in the enterprise and all entries in the enterprise
        /// common phone list and the common phone list of the specified group.
        /// If the specified group is part of a service provider, the directory
        /// includes all users in the group and all entries in the common phone
        /// list of the specified group.
        /// It is possible to search by various criteria to restrict the number of
        /// rows returned.
        /// Multiple search criteria are logically ANDed together.
        /// The response is either GroupPhoneDirectoryGetListResponse17 or ErrorResponse.
        /// 
        /// Replaced by: GroupPhoneDirectoryGetListRequest18
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupPhoneDirectoryGetListRequest17Async instead.")]
        public static async Task<GroupPhoneDirectoryGetListResponse17> GroupPhoneDirectoryGetListRequest17(this OcipClient client, GroupPhoneDirectoryGetListRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupPhoneDirectoryGetListResponse17;
        }

        /// <summary>
        /// Request a table containing the phone directory for a group.
        /// If the specified group is part of an enterprise, the directory
        /// includes all users in the enterprise and all entries in the enterprise
        /// common phone list and the common phone list of the specified group.
        /// If the specified group is part of a service provider, the directory
        /// includes all users in the group and all entries in the common phone
        /// list of the specified group.
        /// It is possible to search by various criteria to restrict the number of
        /// rows returned.
        /// Multiple search criteria are logically ANDed together.
        /// The response is either GroupPhoneDirectoryGetListResponse17 or ErrorResponse.
        /// 
        /// Replaced by: GroupPhoneDirectoryGetListRequest18
        /// </summary>
        public static async Task<GroupPhoneDirectoryGetListResponse17> GroupPhoneDirectoryGetListRequest17Async(this OcipClient client, GroupPhoneDirectoryGetListRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupPhoneDirectoryGetListResponse17;
        }
        /// <summary>
        /// Request a table containing the phone directory for a group.
        /// If the specified group is part of an enterprise, the directory
        /// includes all users in the enterprise and all entries in the enterprise
        /// common phone list and the common phone list of the specified group.
        /// If the specified group is part of a service provider, the directory
        /// includes all users in the group and all entries in the common phone
        /// list of the specified group.
        /// It is possible to search by various criteria to restrict the number of
        /// rows returned.
        /// Multiple search criteria are logically ANDed together.
        /// The response is either GroupPhoneDirectoryGetListResponse17sp3 or
        /// ErrorResponse.
        /// 
        /// Replaced by: GroupPhoneDirectoryGetListRequest18
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupPhoneDirectoryGetListRequest17sp3Async instead.")]
        public static async Task<GroupPhoneDirectoryGetListResponse17sp3> GroupPhoneDirectoryGetListRequest17sp3(this OcipClient client, GroupPhoneDirectoryGetListRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupPhoneDirectoryGetListResponse17sp3;
        }

        /// <summary>
        /// Request a table containing the phone directory for a group.
        /// If the specified group is part of an enterprise, the directory
        /// includes all users in the enterprise and all entries in the enterprise
        /// common phone list and the common phone list of the specified group.
        /// If the specified group is part of a service provider, the directory
        /// includes all users in the group and all entries in the common phone
        /// list of the specified group.
        /// It is possible to search by various criteria to restrict the number of
        /// rows returned.
        /// Multiple search criteria are logically ANDed together.
        /// The response is either GroupPhoneDirectoryGetListResponse17sp3 or
        /// ErrorResponse.
        /// 
        /// Replaced by: GroupPhoneDirectoryGetListRequest18
        /// </summary>
        public static async Task<GroupPhoneDirectoryGetListResponse17sp3> GroupPhoneDirectoryGetListRequest17sp3Async(this OcipClient client, GroupPhoneDirectoryGetListRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupPhoneDirectoryGetListResponse17sp3;
        }
        /// <summary>
        /// Request a table containing the phone directory for a group.
        /// If the specified group is part of an enterprise, the directory
        /// includes all users in the enterprise and all entries in the enterprise
        /// common phone list and the common phone list of the specified group.
        /// 
        /// If the specified group is part of a service provider, the directory
        /// includes all users in the group and all entries in the common phone
        /// list of the specified group.
        /// 
        /// It is possible to search by various criteria to restrict the number of
        /// rows returned.
        /// 
        /// Multiple search criteria are logically ANDed together.
        /// The response is either GroupPhoneDirectoryGetPagedListResponse or
        /// ErrorResponse.
        /// 
        /// Replaced By: GroupPhoneDirectoryGetPagedSortedListRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupPhoneDirectoryGetPagedListRequestAsync instead.")]
        public static async Task<GroupPhoneDirectoryGetPagedListResponse> GroupPhoneDirectoryGetPagedListRequest(this OcipClient client, GroupPhoneDirectoryGetPagedListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupPhoneDirectoryGetPagedListResponse;
        }

        /// <summary>
        /// Request a table containing the phone directory for a group.
        /// If the specified group is part of an enterprise, the directory
        /// includes all users in the enterprise and all entries in the enterprise
        /// common phone list and the common phone list of the specified group.
        /// 
        /// If the specified group is part of a service provider, the directory
        /// includes all users in the group and all entries in the common phone
        /// list of the specified group.
        /// 
        /// It is possible to search by various criteria to restrict the number of
        /// rows returned.
        /// 
        /// Multiple search criteria are logically ANDed together.
        /// The response is either GroupPhoneDirectoryGetPagedListResponse or
        /// ErrorResponse.
        /// 
        /// Replaced By: GroupPhoneDirectoryGetPagedSortedListRequest
        /// </summary>
        public static async Task<GroupPhoneDirectoryGetPagedListResponse> GroupPhoneDirectoryGetPagedListRequestAsync(this OcipClient client, GroupPhoneDirectoryGetPagedListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupPhoneDirectoryGetPagedListResponse;
        }
        /// <summary>
        /// Requests the Group's policy settings.
        /// The response is either GroupPolicyGetResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupPolicyGetRequestAsync instead.")]
        public static async Task<GroupPolicyGetResponse> GroupPolicyGetRequest(this OcipClient client, GroupPolicyGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupPolicyGetResponse;
        }

        /// <summary>
        /// Requests the Group's policy settings.
        /// The response is either GroupPolicyGetResponse or ErrorResponse.
        /// </summary>
        public static async Task<GroupPolicyGetResponse> GroupPolicyGetRequestAsync(this OcipClient client, GroupPolicyGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupPolicyGetResponse;
        }
        /// <summary>
        /// Requests the Group's policy settings.
        /// The response is either GroupPolicyGetResponse14sp1 or ErrorResponse.
        /// Replaced By : GroupPolicyGetRequest14sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupPolicyGetRequest14sp1Async instead.")]
        public static async Task<GroupPolicyGetResponse14sp1> GroupPolicyGetRequest14sp1(this OcipClient client, GroupPolicyGetRequest14sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupPolicyGetResponse14sp1;
        }

        /// <summary>
        /// Requests the Group's policy settings.
        /// The response is either GroupPolicyGetResponse14sp1 or ErrorResponse.
        /// Replaced By : GroupPolicyGetRequest14sp4
        /// </summary>
        public static async Task<GroupPolicyGetResponse14sp1> GroupPolicyGetRequest14sp1Async(this OcipClient client, GroupPolicyGetRequest14sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupPolicyGetResponse14sp1;
        }
        /// <summary>
        /// Requests the Group's policy settings.
        /// The response is either GroupPolicyGetResponse14sp4 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupPolicyGetRequest14sp4Async instead.")]
        public static async Task<GroupPolicyGetResponse14sp4> GroupPolicyGetRequest14sp4(this OcipClient client, GroupPolicyGetRequest14sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupPolicyGetResponse14sp4;
        }

        /// <summary>
        /// Requests the Group's policy settings.
        /// The response is either GroupPolicyGetResponse14sp4 or ErrorResponse.
        /// </summary>
        public static async Task<GroupPolicyGetResponse14sp4> GroupPolicyGetRequest14sp4Async(this OcipClient client, GroupPolicyGetRequest14sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupPolicyGetResponse14sp4;
        }
        /// <summary>
        /// Requests the group's passcode rules setting.
        /// The response is either GroupPortalPasscodeRulesGetResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupPortalPasscodeRulesGetRequestAsync instead.")]
        public static async Task<GroupPortalPasscodeRulesGetResponse> GroupPortalPasscodeRulesGetRequest(this OcipClient client, GroupPortalPasscodeRulesGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupPortalPasscodeRulesGetResponse;
        }

        /// <summary>
        /// Requests the group's passcode rules setting.
        /// The response is either GroupPortalPasscodeRulesGetResponse or ErrorResponse.
        /// </summary>
        public static async Task<GroupPortalPasscodeRulesGetResponse> GroupPortalPasscodeRulesGetRequestAsync(this OcipClient client, GroupPortalPasscodeRulesGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupPortalPasscodeRulesGetResponse;
        }
        /// <summary>
        /// Get a route point's forced forwarding settings.
        /// The response is either a GroupRoutePointForcedForwardingGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointForcedForwardingGetRequestAsync instead.")]
        public static async Task<GroupRoutePointForcedForwardingGetResponse> GroupRoutePointForcedForwardingGetRequest(this OcipClient client, GroupRoutePointForcedForwardingGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupRoutePointForcedForwardingGetResponse;
        }

        /// <summary>
        /// Get a route point's forced forwarding settings.
        /// The response is either a GroupRoutePointForcedForwardingGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupRoutePointForcedForwardingGetResponse> GroupRoutePointForcedForwardingGetRequestAsync(this OcipClient client, GroupRoutePointForcedForwardingGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupRoutePointForcedForwardingGetResponse;
        }
        /// <summary>
        /// Modify a route point's forced forwarding
        /// settings.
        /// The response is either a SuccessResponse or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointForcedForwardingModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupRoutePointForcedForwardingModifyRequest(this OcipClient client, GroupRoutePointForcedForwardingModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a route point's forced forwarding
        /// settings.
        /// The response is either a SuccessResponse or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupRoutePointForcedForwardingModifyRequestAsync(this OcipClient client, GroupRoutePointForcedForwardingModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a route point's announcement settings.
        /// The response is either a GroupRoutePointGetAnnouncementResponse or an ErrorResponse.
        /// 
        /// Replaced by: GroupRoutePointGetAnnouncementRequest19.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointGetAnnouncementRequestAsync instead.")]
        public static async Task<GroupRoutePointGetAnnouncementResponse> GroupRoutePointGetAnnouncementRequest(this OcipClient client, GroupRoutePointGetAnnouncementRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupRoutePointGetAnnouncementResponse;
        }

        /// <summary>
        /// Get a route point's announcement settings.
        /// The response is either a GroupRoutePointGetAnnouncementResponse or an ErrorResponse.
        /// 
        /// Replaced by: GroupRoutePointGetAnnouncementRequest19.
        /// </summary>
        public static async Task<GroupRoutePointGetAnnouncementResponse> GroupRoutePointGetAnnouncementRequestAsync(this OcipClient client, GroupRoutePointGetAnnouncementRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupRoutePointGetAnnouncementResponse;
        }
        /// <summary>
        /// Get a route point's announcement settings.
        /// The response is either a GroupRoutePointGetAnnouncementResponse19 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointGetAnnouncementRequest19Async instead.")]
        public static async Task<GroupRoutePointGetAnnouncementResponse19> GroupRoutePointGetAnnouncementRequest19(this OcipClient client, GroupRoutePointGetAnnouncementRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupRoutePointGetAnnouncementResponse19;
        }

        /// <summary>
        /// Get a route point's announcement settings.
        /// The response is either a GroupRoutePointGetAnnouncementResponse19 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupRoutePointGetAnnouncementResponse19> GroupRoutePointGetAnnouncementRequest19Async(this OcipClient client, GroupRoutePointGetAnnouncementRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupRoutePointGetAnnouncementResponse19;
        }
        /// <summary>
        /// Get a route point's announcement settings.
        /// The response is either a GroupRoutePointGetAnnouncementResponse20 or an ErrorResponse.
        /// Replaced by: GroupRoutePointGetAnnouncementRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointGetAnnouncementRequest20Async instead.")]
        public static async Task<GroupRoutePointGetAnnouncementResponse20> GroupRoutePointGetAnnouncementRequest20(this OcipClient client, GroupRoutePointGetAnnouncementRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupRoutePointGetAnnouncementResponse20;
        }

        /// <summary>
        /// Get a route point's announcement settings.
        /// The response is either a GroupRoutePointGetAnnouncementResponse20 or an ErrorResponse.
        /// Replaced by: GroupRoutePointGetAnnouncementRequest22
        /// </summary>
        public static async Task<GroupRoutePointGetAnnouncementResponse20> GroupRoutePointGetAnnouncementRequest20Async(this OcipClient client, GroupRoutePointGetAnnouncementRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupRoutePointGetAnnouncementResponse20;
        }
        /// <summary>
        /// Get a route point's DNIS Announcements
        /// The response is either a GroupRoutePointGetDNISAnnouncementResponse or an ErrorResponse.
        /// 
        /// Replaced by: GroupRoutePointGetDNISAnnouncementRequest19.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointGetDNISAnnouncementRequestAsync instead.")]
        public static async Task<GroupRoutePointGetDNISAnnouncementResponse> GroupRoutePointGetDNISAnnouncementRequest(this OcipClient client, GroupRoutePointGetDNISAnnouncementRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupRoutePointGetDNISAnnouncementResponse;
        }

        /// <summary>
        /// Get a route point's DNIS Announcements
        /// The response is either a GroupRoutePointGetDNISAnnouncementResponse or an ErrorResponse.
        /// 
        /// Replaced by: GroupRoutePointGetDNISAnnouncementRequest19.
        /// </summary>
        public static async Task<GroupRoutePointGetDNISAnnouncementResponse> GroupRoutePointGetDNISAnnouncementRequestAsync(this OcipClient client, GroupRoutePointGetDNISAnnouncementRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupRoutePointGetDNISAnnouncementResponse;
        }
        /// <summary>
        /// Get a route point's DNIS Announcements
        /// The response is either a GroupRoutePointGetDNISAnnouncementResponse19 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointGetDNISAnnouncementRequest19Async instead.")]
        public static async Task<GroupRoutePointGetDNISAnnouncementResponse19> GroupRoutePointGetDNISAnnouncementRequest19(this OcipClient client, GroupRoutePointGetDNISAnnouncementRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupRoutePointGetDNISAnnouncementResponse19;
        }

        /// <summary>
        /// Get a route point's DNIS Announcements
        /// The response is either a GroupRoutePointGetDNISAnnouncementResponse19 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupRoutePointGetDNISAnnouncementResponse19> GroupRoutePointGetDNISAnnouncementRequest19Async(this OcipClient client, GroupRoutePointGetDNISAnnouncementRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupRoutePointGetDNISAnnouncementResponse19;
        }
        /// <summary>
        /// Get a route point's DNIS Announcements
        /// The response is either a GroupRoutePointGetDNISAnnouncementResponse20 or an ErrorResponse.
        /// 
        /// Replaced by: GroupRoutePointGetDNISAnnouncementRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointGetDNISAnnouncementRequest20Async instead.")]
        public static async Task<GroupRoutePointGetDNISAnnouncementResponse20> GroupRoutePointGetDNISAnnouncementRequest20(this OcipClient client, GroupRoutePointGetDNISAnnouncementRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupRoutePointGetDNISAnnouncementResponse20;
        }

        /// <summary>
        /// Get a route point's DNIS Announcements
        /// The response is either a GroupRoutePointGetDNISAnnouncementResponse20 or an ErrorResponse.
        /// 
        /// Replaced by: GroupRoutePointGetDNISAnnouncementRequest22
        /// </summary>
        public static async Task<GroupRoutePointGetDNISAnnouncementResponse20> GroupRoutePointGetDNISAnnouncementRequest20Async(this OcipClient client, GroupRoutePointGetDNISAnnouncementRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupRoutePointGetDNISAnnouncementResponse20;
        }
        /// <summary>
        /// Request to get all the information of a Route Point instance.
        /// The response is either GroupRoutePointGetInstanceResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupRoutePointGetInstanceRequest19sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointGetInstanceRequestAsync instead.")]
        public static async Task<GroupRoutePointGetInstanceResponse> GroupRoutePointGetInstanceRequest(this OcipClient client, GroupRoutePointGetInstanceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupRoutePointGetInstanceResponse;
        }

        /// <summary>
        /// Request to get all the information of a Route Point instance.
        /// The response is either GroupRoutePointGetInstanceResponse or ErrorResponse.
        /// 
        /// Replaced by: GroupRoutePointGetInstanceRequest19sp1
        /// </summary>
        public static async Task<GroupRoutePointGetInstanceResponse> GroupRoutePointGetInstanceRequestAsync(this OcipClient client, GroupRoutePointGetInstanceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupRoutePointGetInstanceResponse;
        }
        /// <summary>
        /// Get a route point's holiday service settings.
        /// The response is either a GroupRoutePointHolidayServiceGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointHolidayServiceGetRequestAsync instead.")]
        public static async Task<GroupRoutePointHolidayServiceGetResponse> GroupRoutePointHolidayServiceGetRequest(this OcipClient client, GroupRoutePointHolidayServiceGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupRoutePointHolidayServiceGetResponse;
        }

        /// <summary>
        /// Get a route point's holiday service settings.
        /// The response is either a GroupRoutePointHolidayServiceGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupRoutePointHolidayServiceGetResponse> GroupRoutePointHolidayServiceGetRequestAsync(this OcipClient client, GroupRoutePointHolidayServiceGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupRoutePointHolidayServiceGetResponse;
        }
        /// <summary>
        /// Get a route point's holiday service settings.
        /// The response is either a GroupRoutePointHolidayServiceGetResponse17sp1 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointHolidayServiceGetRequest17sp1Async instead.")]
        public static async Task<GroupRoutePointHolidayServiceGetResponse17sp1> GroupRoutePointHolidayServiceGetRequest17sp1(this OcipClient client, GroupRoutePointHolidayServiceGetRequest17sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupRoutePointHolidayServiceGetResponse17sp1;
        }

        /// <summary>
        /// Get a route point's holiday service settings.
        /// The response is either a GroupRoutePointHolidayServiceGetResponse17sp1 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupRoutePointHolidayServiceGetResponse17sp1> GroupRoutePointHolidayServiceGetRequest17sp1Async(this OcipClient client, GroupRoutePointHolidayServiceGetRequest17sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupRoutePointHolidayServiceGetResponse17sp1;
        }
        /// <summary>
        /// Modify a route point's holiday service settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointHolidayServiceModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupRoutePointHolidayServiceModifyRequest(this OcipClient client, GroupRoutePointHolidayServiceModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a route point's holiday service settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupRoutePointHolidayServiceModifyRequestAsync(this OcipClient client, GroupRoutePointHolidayServiceModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify a route point's holiday service settings.
        /// Only Group and Enterprise level schedules are accepted.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointHolidayServiceModifyRequest17sp1Async instead.")]
        public static async Task<SuccessResponse> GroupRoutePointHolidayServiceModifyRequest17sp1(this OcipClient client, GroupRoutePointHolidayServiceModifyRequest17sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a route point's holiday service settings.
        /// Only Group and Enterprise level schedules are accepted.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupRoutePointHolidayServiceModifyRequest17sp1Async(this OcipClient client, GroupRoutePointHolidayServiceModifyRequest17sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify a route point's announcement settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointModifyAnnouncementRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupRoutePointModifyAnnouncementRequest(this OcipClient client, GroupRoutePointModifyAnnouncementRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a route point's announcement settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupRoutePointModifyAnnouncementRequestAsync(this OcipClient client, GroupRoutePointModifyAnnouncementRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify a route point DNIS announcement settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointModifyDNISAnnouncementRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupRoutePointModifyDNISAnnouncementRequest(this OcipClient client, GroupRoutePointModifyDNISAnnouncementRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a route point DNIS announcement settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupRoutePointModifyDNISAnnouncementRequestAsync(this OcipClient client, GroupRoutePointModifyDNISAnnouncementRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a route point's night service settings.
        /// The response is either a GroupRoutePointNightServiceGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointNightServiceGetRequestAsync instead.")]
        public static async Task<GroupRoutePointNightServiceGetResponse> GroupRoutePointNightServiceGetRequest(this OcipClient client, GroupRoutePointNightServiceGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupRoutePointNightServiceGetResponse;
        }

        /// <summary>
        /// Get a route point's night service settings.
        /// The response is either a GroupRoutePointNightServiceGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupRoutePointNightServiceGetResponse> GroupRoutePointNightServiceGetRequestAsync(this OcipClient client, GroupRoutePointNightServiceGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupRoutePointNightServiceGetResponse;
        }
        /// <summary>
        /// Get a route point's night service settings.
        /// The response is either a GroupRoutePointNightServiceGetResponse17sp1 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointNightServiceGetRequest17sp1Async instead.")]
        public static async Task<GroupRoutePointNightServiceGetResponse17sp1> GroupRoutePointNightServiceGetRequest17sp1(this OcipClient client, GroupRoutePointNightServiceGetRequest17sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupRoutePointNightServiceGetResponse17sp1;
        }

        /// <summary>
        /// Get a route point's night service settings.
        /// The response is either a GroupRoutePointNightServiceGetResponse17sp1 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupRoutePointNightServiceGetResponse17sp1> GroupRoutePointNightServiceGetRequest17sp1Async(this OcipClient client, GroupRoutePointNightServiceGetRequest17sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupRoutePointNightServiceGetResponse17sp1;
        }
        /// <summary>
        /// Modify a route point's night service settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointNightServiceModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupRoutePointNightServiceModifyRequest(this OcipClient client, GroupRoutePointNightServiceModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a route point's night service settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupRoutePointNightServiceModifyRequestAsync(this OcipClient client, GroupRoutePointNightServiceModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify a route point's night service settings.
        /// Only Group and Enterprise level schedules are accepted.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointNightServiceModifyRequest17sp1Async instead.")]
        public static async Task<SuccessResponse> GroupRoutePointNightServiceModifyRequest17sp1(this OcipClient client, GroupRoutePointNightServiceModifyRequest17sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a route point's night service settings.
        /// Only Group and Enterprise level schedules are accepted.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupRoutePointNightServiceModifyRequest17sp1Async(this OcipClient client, GroupRoutePointNightServiceModifyRequest17sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a route point's overflow settings.
        /// The response is either a GroupRoutePointOverflowGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointOverflowGetRequestAsync instead.")]
        public static async Task<GroupRoutePointOverflowGetResponse> GroupRoutePointOverflowGetRequest(this OcipClient client, GroupRoutePointOverflowGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupRoutePointOverflowGetResponse;
        }

        /// <summary>
        /// Get a route point's overflow settings.
        /// The response is either a GroupRoutePointOverflowGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupRoutePointOverflowGetResponse> GroupRoutePointOverflowGetRequestAsync(this OcipClient client, GroupRoutePointOverflowGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupRoutePointOverflowGetResponse;
        }
        /// <summary>
        /// Modify a route point's overflow settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupRoutePointOverflowModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupRoutePointOverflowModifyRequest(this OcipClient client, GroupRoutePointOverflowModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a route point's overflow settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupRoutePointOverflowModifyRequestAsync(this OcipClient client, GroupRoutePointOverflowModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the list of a group schedules. The list can be filtered by schedule type.
        /// The response is either a GroupScheduleGetListResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupScheduleGetListRequestAsync instead.")]
        public static async Task<GroupScheduleGetListResponse> GroupScheduleGetListRequest(this OcipClient client, GroupScheduleGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupScheduleGetListResponse;
        }

        /// <summary>
        /// Get the list of a group schedules. The list can be filtered by schedule type.
        /// The response is either a GroupScheduleGetListResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupScheduleGetListResponse> GroupScheduleGetListRequestAsync(this OcipClient client, GroupScheduleGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupScheduleGetListResponse;
        }
        /// <summary>
        /// Request the data associated with Privacy for a service instance.
        /// The response is either a GroupServiceInstancePrivacyGetResponse.
        /// Replaced by: GroupServiceInstancePrivacyGetRequest17sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupServiceInstancePrivacyGetRequestAsync instead.")]
        public static async Task<GroupServiceInstancePrivacyGetResponse> GroupServiceInstancePrivacyGetRequest(this OcipClient client, GroupServiceInstancePrivacyGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupServiceInstancePrivacyGetResponse;
        }

        /// <summary>
        /// Request the data associated with Privacy for a service instance.
        /// The response is either a GroupServiceInstancePrivacyGetResponse.
        /// Replaced by: GroupServiceInstancePrivacyGetRequest17sp4
        /// </summary>
        public static async Task<GroupServiceInstancePrivacyGetResponse> GroupServiceInstancePrivacyGetRequestAsync(this OcipClient client, GroupServiceInstancePrivacyGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupServiceInstancePrivacyGetResponse;
        }
        /// <summary>
        /// Request to add a session admission control group for the group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupSessionAdmissionControlGroupAddRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupSessionAdmissionControlGroupAddRequest(this OcipClient client, GroupSessionAdmissionControlGroupAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a session admission control group for the group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupSessionAdmissionControlGroupAddRequestAsync(this OcipClient client, GroupSessionAdmissionControlGroupAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get a session admission control group for the group.
        /// The response is either a GroupSessionAdmissionControlGroupGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupSessionAdmissionControlGroupGetRequestAsync instead.")]
        public static async Task<GroupSessionAdmissionControlGroupGetResponse> GroupSessionAdmissionControlGroupGetRequest(this OcipClient client, GroupSessionAdmissionControlGroupGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupSessionAdmissionControlGroupGetResponse;
        }

        /// <summary>
        /// Request to get a session admission control group for the group.
        /// The response is either a GroupSessionAdmissionControlGroupGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupSessionAdmissionControlGroupGetResponse> GroupSessionAdmissionControlGroupGetRequestAsync(this OcipClient client, GroupSessionAdmissionControlGroupGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupSessionAdmissionControlGroupGetResponse;
        }
        /// <summary>
        /// Request to get a session admission control group for the group.
        /// The response is either a GroupSessionAdmissionControlGroupGetResponse19sp1 or an ErrorResponse.
        /// 
        /// Replaced by: GroupSessionAdmissionControlGroupGetRequest21sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupSessionAdmissionControlGroupGetRequest19sp1Async instead.")]
        public static async Task<GroupSessionAdmissionControlGroupGetResponse19sp1> GroupSessionAdmissionControlGroupGetRequest19sp1(this OcipClient client, GroupSessionAdmissionControlGroupGetRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupSessionAdmissionControlGroupGetResponse19sp1;
        }

        /// <summary>
        /// Request to get a session admission control group for the group.
        /// The response is either a GroupSessionAdmissionControlGroupGetResponse19sp1 or an ErrorResponse.
        /// 
        /// Replaced by: GroupSessionAdmissionControlGroupGetRequest21sp1
        /// </summary>
        public static async Task<GroupSessionAdmissionControlGroupGetResponse19sp1> GroupSessionAdmissionControlGroupGetRequest19sp1Async(this OcipClient client, GroupSessionAdmissionControlGroupGetRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupSessionAdmissionControlGroupGetResponse19sp1;
        }
        /// <summary>
        /// Request to get a session admission control group for the group.
        /// The response is either a GroupSessionAdmissionControlGroupGetResponse21sp1 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupSessionAdmissionControlGroupGetRequest21sp1Async instead.")]
        public static async Task<GroupSessionAdmissionControlGroupGetResponse21sp1> GroupSessionAdmissionControlGroupGetRequest21sp1(this OcipClient client, GroupSessionAdmissionControlGroupGetRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupSessionAdmissionControlGroupGetResponse21sp1;
        }

        /// <summary>
        /// Request to get a session admission control group for the group.
        /// The response is either a GroupSessionAdmissionControlGroupGetResponse21sp1 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupSessionAdmissionControlGroupGetResponse21sp1> GroupSessionAdmissionControlGroupGetRequest21sp1Async(this OcipClient client, GroupSessionAdmissionControlGroupGetRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupSessionAdmissionControlGroupGetResponse21sp1;
        }
        /// <summary>
        /// Get the speed dial 100 service settings for a group.
        /// The response is either a GroupSpeedDial100GetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupSpeedDial100GetRequestAsync instead.")]
        public static async Task<GroupSpeedDial100GetResponse> GroupSpeedDial100GetRequest(this OcipClient client, GroupSpeedDial100GetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupSpeedDial100GetResponse;
        }

        /// <summary>
        /// Get the speed dial 100 service settings for a group.
        /// The response is either a GroupSpeedDial100GetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupSpeedDial100GetResponse> GroupSpeedDial100GetRequestAsync(this OcipClient client, GroupSpeedDial100GetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupSpeedDial100GetResponse;
        }
        /// <summary>
        /// Add a time schedule to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTimeScheduleAddRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupTimeScheduleAddRequest(this OcipClient client, GroupTimeScheduleAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a time schedule to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTimeScheduleAddRequestAsync(this OcipClient client, GroupTimeScheduleAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Delete a time schedule from a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTimeScheduleDeleteRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupTimeScheduleDeleteRequest(this OcipClient client, GroupTimeScheduleDeleteRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Delete a time schedule from a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTimeScheduleDeleteRequestAsync(this OcipClient client, GroupTimeScheduleDeleteRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request a list of all time schedules in a group.
        /// The response is either a GroupTimeScheduleGetListResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTimeScheduleGetListRequestAsync instead.")]
        public static async Task<GroupTimeScheduleGetListResponse> GroupTimeScheduleGetListRequest(this OcipClient client, GroupTimeScheduleGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTimeScheduleGetListResponse;
        }

        /// <summary>
        /// Request a list of all time schedules in a group.
        /// The response is either a GroupTimeScheduleGetListResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupTimeScheduleGetListResponse> GroupTimeScheduleGetListRequestAsync(this OcipClient client, GroupTimeScheduleGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTimeScheduleGetListResponse;
        }
        /// <summary>
        /// Request to get a group time schedule.
        /// The response is either a GroupTimeScheduleGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTimeScheduleGetRequestAsync instead.")]
        public static async Task<GroupTimeScheduleGetResponse> GroupTimeScheduleGetRequest(this OcipClient client, GroupTimeScheduleGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTimeScheduleGetResponse;
        }

        /// <summary>
        /// Request to get a group time schedule.
        /// The response is either a GroupTimeScheduleGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupTimeScheduleGetResponse> GroupTimeScheduleGetRequestAsync(this OcipClient client, GroupTimeScheduleGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTimeScheduleGetResponse;
        }
        /// <summary>
        /// Modify a specified time schedule in a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTimeScheduleModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupTimeScheduleModifyRequest(this OcipClient client, GroupTimeScheduleModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a specified time schedule in a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTimeScheduleModifyRequestAsync(this OcipClient client, GroupTimeScheduleModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The domain is required in the serviceUserId.
        /// The publicUserIdentity in the ServiceInstanceAddProfile is not allowed for trunk groups.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupAddInstanceRequest14Async instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest14(this OcipClient client, GroupTrunkGroupAddInstanceRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The domain is required in the serviceUserId.
        /// The publicUserIdentity in the ServiceInstanceAddProfile is not allowed for trunk groups.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest14Async(this OcipClient client, GroupTrunkGroupAddInstanceRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The domain is required in the serviceUserId.
        /// The publicUserIdentity in the ServiceInstanceAddProfile is not allowed for trunk groups.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupAddInstanceRequest14sp1Async instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest14sp1(this OcipClient client, GroupTrunkGroupAddInstanceRequest14sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The domain is required in the serviceUserId.
        /// The publicUserIdentity in the ServiceInstanceAddProfile is not allowed for trunk groups.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest14sp1Async(this OcipClient client, GroupTrunkGroupAddInstanceRequest14sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupAddInstanceRequest14sp4Async instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest14sp4(this OcipClient client, GroupTrunkGroupAddInstanceRequest14sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest14sp4Async(this OcipClient client, GroupTrunkGroupAddInstanceRequest14sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupAddInstanceRequest14sp9Async instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest14sp9(this OcipClient client, GroupTrunkGroupAddInstanceRequest14sp9 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest14sp9Async(this OcipClient client, GroupTrunkGroupAddInstanceRequest14sp9 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupAddInstanceRequest14sp9AAsync instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest14sp9A(this OcipClient client, GroupTrunkGroupAddInstanceRequest14sp9A request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest14sp9AAsync(this OcipClient client, GroupTrunkGroupAddInstanceRequest14sp9A request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupAddInstanceRequest15Async instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest15(this OcipClient client, GroupTrunkGroupAddInstanceRequest15 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest15Async(this OcipClient client, GroupTrunkGroupAddInstanceRequest15 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupAddInstanceRequest15sp2Async instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest15sp2(this OcipClient client, GroupTrunkGroupAddInstanceRequest15sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest15sp2Async(this OcipClient client, GroupTrunkGroupAddInstanceRequest15sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Replaced by: GroupTrunkGroupAddInstanceRequest17sp4
        /// 
        /// Add a Trunk Group instance to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupAddInstanceRequest17Async instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest17(this OcipClient client, GroupTrunkGroupAddInstanceRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Replaced by: GroupTrunkGroupAddInstanceRequest17sp4
        /// 
        /// Add a Trunk Group instance to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest17Async(this OcipClient client, GroupTrunkGroupAddInstanceRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: GroupTrunkGroupAddInstanceRequest17sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupAddInstanceRequest17sp3Async instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest17sp3(this OcipClient client, GroupTrunkGroupAddInstanceRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: GroupTrunkGroupAddInstanceRequest17sp4
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest17sp3Async(this OcipClient client, GroupTrunkGroupAddInstanceRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupAddInstanceRequest17sp4Async instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest17sp4(this OcipClient client, GroupTrunkGroupAddInstanceRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest17sp4Async(this OcipClient client, GroupTrunkGroupAddInstanceRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The command will fail if enableNetworkAddressIdentity is set to
        /// true and administrator is not System/Provisioning level administrator.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by GroupTrunkGroupAddInstanceRequest19sp1.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupAddInstanceRequest19Async instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest19(this OcipClient client, GroupTrunkGroupAddInstanceRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The command will fail if enableNetworkAddressIdentity is set to
        /// true and administrator is not System/Provisioning level administrator.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by GroupTrunkGroupAddInstanceRequest19sp1.
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest19Async(this OcipClient client, GroupTrunkGroupAddInstanceRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The command will fail if enableNetworkAddressIdentity is set to
        /// true and administrator is not System/Provisioning level administrator.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: GroupTrunkGroupAddInstanceRequest20sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupAddInstanceRequest19sp1Async instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest19sp1(this OcipClient client, GroupTrunkGroupAddInstanceRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The command will fail if enableNetworkAddressIdentity is set to
        /// true and administrator is not System/Provisioning level administrator.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: GroupTrunkGroupAddInstanceRequest20sp1
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest19sp1Async(this OcipClient client, GroupTrunkGroupAddInstanceRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The command will fail if enableNetworkAddressIdentity is set to
        /// true and administrator is not System/Provisioning level administrator.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: GroupTrunkGroupAddInstanceRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupAddInstanceRequest20sp1Async instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest20sp1(this OcipClient client, GroupTrunkGroupAddInstanceRequest20sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The command will fail if enableNetworkAddressIdentity is set to
        /// true and administrator is not System/Provisioning level administrator.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: GroupTrunkGroupAddInstanceRequest21
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest20sp1Async(this OcipClient client, GroupTrunkGroupAddInstanceRequest20sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The command will fail if enableNetworkAddressIdentity is set to
        /// true and administrator is not System/Provisioning level administrator.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Following attributes are only used in IMS mode:
        /// implicitRegistrationSetSupportPolicy
        /// useSystemImplicitRegistrationSetSupportPolicy
        /// sipIdentityForPilotAndProxyTrunkModesPolicy
        /// useSystemSIPIdentityForPilotAndProxyTrunkModesPolicy
        /// 
        /// Replaced by: GroupTrunkGroupAddInstanceRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupAddInstanceRequest21Async instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest21(this OcipClient client, GroupTrunkGroupAddInstanceRequest21 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Trunk Group instance to a group.
        /// The command will fail if enableNetworkAddressIdentity is set to
        /// true and administrator is not System/Provisioning level administrator.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Following attributes are only used in IMS mode:
        /// implicitRegistrationSetSupportPolicy
        /// useSystemImplicitRegistrationSetSupportPolicy
        /// sipIdentityForPilotAndProxyTrunkModesPolicy
        /// useSystemSIPIdentityForPilotAndProxyTrunkModesPolicy
        /// 
        /// Replaced by: GroupTrunkGroupAddInstanceRequest22
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupAddInstanceRequest21Async(this OcipClient client, GroupTrunkGroupAddInstanceRequest21 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Delete a Trunk Group Instance from a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupDeleteInstanceRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupDeleteInstanceRequest(this OcipClient client, GroupTrunkGroupDeleteInstanceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Delete a Trunk Group Instance from a group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupDeleteInstanceRequestAsync(this OcipClient client, GroupTrunkGroupDeleteInstanceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a list of Trunk Groups for the group or enterprise.
        /// It is possible to restrict the results to a particular department, or expand the list to the entire enterprise.
        /// The response is either a GroupTrunkGroupGetInstanceListResponse14 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceListRequest14Async instead.")]
        public static async Task<GroupTrunkGroupGetInstanceListResponse14> GroupTrunkGroupGetInstanceListRequest14(this OcipClient client, GroupTrunkGroupGetInstanceListRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceListResponse14;
        }

        /// <summary>
        /// Get a list of Trunk Groups for the group or enterprise.
        /// It is possible to restrict the results to a particular department, or expand the list to the entire enterprise.
        /// The response is either a GroupTrunkGroupGetInstanceListResponse14 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceListResponse14> GroupTrunkGroupGetInstanceListRequest14Async(this OcipClient client, GroupTrunkGroupGetInstanceListRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceListResponse14;
        }
        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse14 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceRequest14Async instead.")]
        public static async Task<GroupTrunkGroupGetInstanceResponse14> GroupTrunkGroupGetInstanceRequest14(this OcipClient client, GroupTrunkGroupGetInstanceRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse14;
        }

        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse14 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceResponse14> GroupTrunkGroupGetInstanceRequest14Async(this OcipClient client, GroupTrunkGroupGetInstanceRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse14;
        }
        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse14sp1 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceRequest14sp1Async instead.")]
        public static async Task<GroupTrunkGroupGetInstanceResponse14sp1> GroupTrunkGroupGetInstanceRequest14sp1(this OcipClient client, GroupTrunkGroupGetInstanceRequest14sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse14sp1;
        }

        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse14sp1 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceResponse14sp1> GroupTrunkGroupGetInstanceRequest14sp1Async(this OcipClient client, GroupTrunkGroupGetInstanceRequest14sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse14sp1;
        }
        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse14sp4 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceRequest14sp4Async instead.")]
        public static async Task<GroupTrunkGroupGetInstanceResponse14sp4> GroupTrunkGroupGetInstanceRequest14sp4(this OcipClient client, GroupTrunkGroupGetInstanceRequest14sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse14sp4;
        }

        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse14sp4 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceResponse14sp4> GroupTrunkGroupGetInstanceRequest14sp4Async(this OcipClient client, GroupTrunkGroupGetInstanceRequest14sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse14sp4;
        }
        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse14sp5 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name".
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceRequest14sp5Async instead.")]
        public static async Task<GroupTrunkGroupGetInstanceResponse14sp5> GroupTrunkGroupGetInstanceRequest14sp5(this OcipClient client, GroupTrunkGroupGetInstanceRequest14sp5 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse14sp5;
        }

        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse14sp5 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name".
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceResponse14sp5> GroupTrunkGroupGetInstanceRequest14sp5Async(this OcipClient client, GroupTrunkGroupGetInstanceRequest14sp5 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse14sp5;
        }
        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse14sp9 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name".
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceRequest14sp9Async instead.")]
        public static async Task<GroupTrunkGroupGetInstanceResponse14sp9> GroupTrunkGroupGetInstanceRequest14sp9(this OcipClient client, GroupTrunkGroupGetInstanceRequest14sp9 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse14sp9;
        }

        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse14sp9 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name".
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceResponse14sp9> GroupTrunkGroupGetInstanceRequest14sp9Async(this OcipClient client, GroupTrunkGroupGetInstanceRequest14sp9 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse14sp9;
        }
        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse14sp9A or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name".
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceRequest14sp9AAsync instead.")]
        public static async Task<GroupTrunkGroupGetInstanceResponse14sp9> GroupTrunkGroupGetInstanceRequest14sp9A(this OcipClient client, GroupTrunkGroupGetInstanceRequest14sp9A request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse14sp9;
        }

        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse14sp9A or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name".
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceResponse14sp9> GroupTrunkGroupGetInstanceRequest14sp9AAsync(this OcipClient client, GroupTrunkGroupGetInstanceRequest14sp9A request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse14sp9;
        }
        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse15 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name".
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceRequest15Async instead.")]
        public static async Task<GroupTrunkGroupGetInstanceResponse15> GroupTrunkGroupGetInstanceRequest15(this OcipClient client, GroupTrunkGroupGetInstanceRequest15 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse15;
        }

        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse15 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name".
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceResponse15> GroupTrunkGroupGetInstanceRequest15Async(this OcipClient client, GroupTrunkGroupGetInstanceRequest15 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse15;
        }
        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse15sp2 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name".
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceRequest15sp2Async instead.")]
        public static async Task<GroupTrunkGroupGetInstanceResponse15sp2> GroupTrunkGroupGetInstanceRequest15sp2(this OcipClient client, GroupTrunkGroupGetInstanceRequest15sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse15sp2;
        }

        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse15sp2 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name".
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceResponse15sp2> GroupTrunkGroupGetInstanceRequest15sp2Async(this OcipClient client, GroupTrunkGroupGetInstanceRequest15sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse15sp2;
        }
        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse17 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name".
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceRequest17Async instead.")]
        public static async Task<GroupTrunkGroupGetInstanceResponse17> GroupTrunkGroupGetInstanceRequest17(this OcipClient client, GroupTrunkGroupGetInstanceRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse17;
        }

        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse17 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name".
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceResponse17> GroupTrunkGroupGetInstanceRequest17Async(this OcipClient client, GroupTrunkGroupGetInstanceRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse17;
        }
        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse17sp3 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name".
        /// 
        /// Replaced by: GroupTrunkGroupGetInstanceRequest17sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceRequest17sp3Async instead.")]
        public static async Task<GroupTrunkGroupGetInstanceResponse17sp3> GroupTrunkGroupGetInstanceRequest17sp3(this OcipClient client, GroupTrunkGroupGetInstanceRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse17sp3;
        }

        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse17sp3 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name".
        /// 
        /// Replaced by: GroupTrunkGroupGetInstanceRequest17sp4
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceResponse17sp3> GroupTrunkGroupGetInstanceRequest17sp3Async(this OcipClient client, GroupTrunkGroupGetInstanceRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse17sp3;
        }
        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse17sp4 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name", "Phone Number", "Extension",
        /// "Department", "Email Address".
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceRequest17sp4Async instead.")]
        public static async Task<GroupTrunkGroupGetInstanceResponse17sp4> GroupTrunkGroupGetInstanceRequest17sp4(this OcipClient client, GroupTrunkGroupGetInstanceRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse17sp4;
        }

        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse17sp4 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name", "Phone Number", "Extension",
        /// "Department", "Email Address".
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceResponse17sp4> GroupTrunkGroupGetInstanceRequest17sp4Async(this OcipClient client, GroupTrunkGroupGetInstanceRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse17sp4;
        }
        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse17sp4V2 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name".
        /// 
        /// Replaced by: GroupTrunkGroupGetInstanceRequest19V2
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceRequest17sp4V2Async instead.")]
        public static async Task<GroupTrunkGroupGetInstanceResponse17sp4V2> GroupTrunkGroupGetInstanceRequest17sp4V2(this OcipClient client, GroupTrunkGroupGetInstanceRequest17sp4V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse17sp4V2;
        }

        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse17sp4V2 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name".
        /// 
        /// Replaced by: GroupTrunkGroupGetInstanceRequest19V2
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceResponse17sp4V2> GroupTrunkGroupGetInstanceRequest17sp4V2Async(this OcipClient client, GroupTrunkGroupGetInstanceRequest17sp4V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse17sp4V2;
        }
        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse19 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name", "Phone Number", "Extension",
        /// "Department", "Email Address".
        /// 
        /// Replaced by GroupTrunkGroupGetInstanceRequest19sp1.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceRequest19Async instead.")]
        public static async Task<GroupTrunkGroupGetInstanceResponse19> GroupTrunkGroupGetInstanceRequest19(this OcipClient client, GroupTrunkGroupGetInstanceRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse19;
        }

        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse19 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name", "Phone Number", "Extension",
        /// "Department", "Email Address".
        /// 
        /// Replaced by GroupTrunkGroupGetInstanceRequest19sp1.
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceResponse19> GroupTrunkGroupGetInstanceRequest19Async(this OcipClient client, GroupTrunkGroupGetInstanceRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse19;
        }
        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse19sp1 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name", "Phone Number", "Extension",
        /// "Department", "Email Address".
        /// 
        /// Replaced by GroupTrunkGroupGetInstanceRequest19sp1V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceRequest19sp1Async instead.")]
        public static async Task<GroupTrunkGroupGetInstanceResponse19sp1> GroupTrunkGroupGetInstanceRequest19sp1(this OcipClient client, GroupTrunkGroupGetInstanceRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse19sp1;
        }

        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse19sp1 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name", "Phone Number", "Extension",
        /// "Department", "Email Address".
        /// 
        /// Replaced by GroupTrunkGroupGetInstanceRequest19sp1V2.
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceResponse19sp1> GroupTrunkGroupGetInstanceRequest19sp1Async(this OcipClient client, GroupTrunkGroupGetInstanceRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse19sp1;
        }
        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse19sp1V2 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name", "Phone Number", "Extension",
        /// "Department", "Email Address".
        /// Replaced by: GroupTrunkGroupGetInstanceRequest20sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceRequest19sp1V2Async instead.")]
        public static async Task<GroupTrunkGroupGetInstanceResponse19sp1V2> GroupTrunkGroupGetInstanceRequest19sp1V2(this OcipClient client, GroupTrunkGroupGetInstanceRequest19sp1V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse19sp1V2;
        }

        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse19sp1V2 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name", "Phone Number", "Extension",
        /// "Department", "Email Address".
        /// Replaced by: GroupTrunkGroupGetInstanceRequest20sp1
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceResponse19sp1V2> GroupTrunkGroupGetInstanceRequest19sp1V2Async(this OcipClient client, GroupTrunkGroupGetInstanceRequest19sp1V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse19sp1V2;
        }
        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse19V2 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name", "Phone Number", "Extension",
        /// "Department", "Email Address".
        /// 
        /// Replaced by GroupTrunkGroupGetInstanceRequest19sp1V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceRequest19V2Async instead.")]
        public static async Task<GroupTrunkGroupGetInstanceResponse19V2> GroupTrunkGroupGetInstanceRequest19V2(this OcipClient client, GroupTrunkGroupGetInstanceRequest19V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse19V2;
        }

        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse19V2 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name", "Phone Number", "Extension",
        /// "Department", "Email Address".
        /// 
        /// Replaced by GroupTrunkGroupGetInstanceRequest19sp1V2.
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceResponse19V2> GroupTrunkGroupGetInstanceRequest19V2Async(this OcipClient client, GroupTrunkGroupGetInstanceRequest19V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse19V2;
        }
        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse20sp1 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name", "Phone Number", "Extension",
        /// "Department", "Email Address".
        /// 
        /// Replaced by: GroupTrunkGroupGetInstanceRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceRequest20sp1Async instead.")]
        public static async Task<GroupTrunkGroupGetInstanceResponse20sp1> GroupTrunkGroupGetInstanceRequest20sp1(this OcipClient client, GroupTrunkGroupGetInstanceRequest20sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse20sp1;
        }

        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse20sp1 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name", "Phone Number", "Extension",
        /// "Department", "Email Address".
        /// 
        /// Replaced by: GroupTrunkGroupGetInstanceRequest21
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceResponse20sp1> GroupTrunkGroupGetInstanceRequest20sp1Async(this OcipClient client, GroupTrunkGroupGetInstanceRequest20sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse20sp1;
        }
        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse21 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name", "Phone Number", "Extension",
        /// "Department", "Email Address".
        /// Replaced by: GroupTrunkGroupGetInstanceResponse23
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceRequest21Async instead.")]
        public static async Task<GroupTrunkGroupGetInstanceResponse21> GroupTrunkGroupGetInstanceRequest21(this OcipClient client, GroupTrunkGroupGetInstanceRequest21 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse21;
        }

        /// <summary>
        /// Get a Trunk Group Instance's profile.
        /// The response is either a GroupTrunkGroupGetInstanceResponse21 or an ErrorResponse.
        /// The response contains a hosted user table with column headings: "User Id", "Last Name",
        /// "First Name", "Hiragana Last Name", "Hiragana First Name", "Phone Number", "Extension",
        /// "Department", "Email Address".
        /// Replaced by: GroupTrunkGroupGetInstanceResponse23
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceResponse21> GroupTrunkGroupGetInstanceRequest21Async(this OcipClient client, GroupTrunkGroupGetInstanceRequest21 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceResponse21;
        }
        /// <summary>
        /// Get a list of user's on a Trunk Group Instance.
        /// The response is either a GroupTrunkGroupGetInstanceUserListResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetInstanceUserListRequestAsync instead.")]
        public static async Task<GroupTrunkGroupGetInstanceUserListResponse> GroupTrunkGroupGetInstanceUserListRequest(this OcipClient client, GroupTrunkGroupGetInstanceUserListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetInstanceUserListResponse;
        }

        /// <summary>
        /// Get a list of user's on a Trunk Group Instance.
        /// The response is either a GroupTrunkGroupGetInstanceUserListResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupTrunkGroupGetInstanceUserListResponse> GroupTrunkGroupGetInstanceUserListRequestAsync(this OcipClient client, GroupTrunkGroupGetInstanceUserListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetInstanceUserListResponse;
        }
        /// <summary>
        /// Get the maximum permissible active trunk group calls for the group.
        /// The response is either a GroupTrunkGroupGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetRequestAsync instead.")]
        public static async Task<GroupTrunkGroupGetResponse> GroupTrunkGroupGetRequest(this OcipClient client, GroupTrunkGroupGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetResponse;
        }

        /// <summary>
        /// Get the maximum permissible active trunk group calls for the group.
        /// The response is either a GroupTrunkGroupGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<GroupTrunkGroupGetResponse> GroupTrunkGroupGetRequestAsync(this OcipClient client, GroupTrunkGroupGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetResponse;
        }
        /// <summary>
        /// Get the maximum and bursting maximum permissible active trunk group calls for the group.
        /// The response is either a GroupTrunkGroupGetResponse14sp1 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetRequest14sp1Async instead.")]
        public static async Task<GroupTrunkGroupGetResponse14sp1> GroupTrunkGroupGetRequest14sp1(this OcipClient client, GroupTrunkGroupGetRequest14sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetResponse14sp1;
        }

        /// <summary>
        /// Get the maximum and bursting maximum permissible active trunk group calls for the group.
        /// The response is either a GroupTrunkGroupGetResponse14sp1 or an ErrorResponse.
        /// </summary>
        public static async Task<GroupTrunkGroupGetResponse14sp1> GroupTrunkGroupGetRequest14sp1Async(this OcipClient client, GroupTrunkGroupGetRequest14sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetResponse14sp1;
        }
        /// <summary>
        /// Get the maximum and bursting maximum permissible active trunk group calls for the group.
        /// The response is either a GroupTrunkGroupGetResponse14sp9 or an ErrorResponse.
        /// 
        /// Deprecated by GroupTrunkGroupGetRequest23
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupGetRequest14sp9Async instead.")]
        public static async Task<GroupTrunkGroupGetResponse14sp9> GroupTrunkGroupGetRequest14sp9(this OcipClient client, GroupTrunkGroupGetRequest14sp9 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupGetResponse14sp9;
        }

        /// <summary>
        /// Get the maximum and bursting maximum permissible active trunk group calls for the group.
        /// The response is either a GroupTrunkGroupGetResponse14sp9 or an ErrorResponse.
        /// 
        /// Deprecated by GroupTrunkGroupGetRequest23
        /// </summary>
        public static async Task<GroupTrunkGroupGetResponse14sp9> GroupTrunkGroupGetRequest14sp9Async(this OcipClient client, GroupTrunkGroupGetRequest14sp9 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupGetResponse14sp9;
        }
        /// <summary>
        /// Modify a Trunk Group Instance in a group.
        /// The publicUserIdentity in the ServiceInstanceModifyProfile is not allowed for trunk groups.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupModifyInstanceRequest14Async instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupModifyInstanceRequest14(this OcipClient client, GroupTrunkGroupModifyInstanceRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a Trunk Group Instance in a group.
        /// The publicUserIdentity in the ServiceInstanceModifyProfile is not allowed for trunk groups.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupModifyInstanceRequest14Async(this OcipClient client, GroupTrunkGroupModifyInstanceRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify a Trunk Group Instance in a group.
        /// The access device cannot be modified or cleared if there are any users assigned to the Trunk Group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupModifyInstanceRequest14sp4Async instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupModifyInstanceRequest14sp4(this OcipClient client, GroupTrunkGroupModifyInstanceRequest14sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a Trunk Group Instance in a group.
        /// The access device cannot be modified or cleared if there are any users assigned to the Trunk Group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupModifyInstanceRequest14sp4Async(this OcipClient client, GroupTrunkGroupModifyInstanceRequest14sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify a Trunk Group Instance in a group.
        /// The access device cannot be modified or cleared if there are any users assigned to the Trunk Group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupModifyInstanceRequest14sp9AAsync instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupModifyInstanceRequest14sp9A(this OcipClient client, GroupTrunkGroupModifyInstanceRequest14sp9A request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a Trunk Group Instance in a group.
        /// The access device cannot be modified or cleared if there are any users assigned to the Trunk Group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupModifyInstanceRequest14sp9AAsync(this OcipClient client, GroupTrunkGroupModifyInstanceRequest14sp9A request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify a Trunk Group Instance in a group.
        /// The access device cannot be modified or cleared if there are any users assigned to the Trunk Group.
        /// The command will fail if enableNetworkAddressIdentity is set and
        /// administrator is not System/Provisioning level administrator.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by GroupTrunkGroupModifyInstanceRequest19sp1.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupModifyInstanceRequest15Async instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupModifyInstanceRequest15(this OcipClient client, GroupTrunkGroupModifyInstanceRequest15 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a Trunk Group Instance in a group.
        /// The access device cannot be modified or cleared if there are any users assigned to the Trunk Group.
        /// The command will fail if enableNetworkAddressIdentity is set and
        /// administrator is not System/Provisioning level administrator.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by GroupTrunkGroupModifyInstanceRequest19sp1.
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupModifyInstanceRequest15Async(this OcipClient client, GroupTrunkGroupModifyInstanceRequest15 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify a Trunk Group Instance in a group.
        /// The access device cannot be modified or cleared if there are any users assigned to the Trunk Group.
        /// The command will fail if enableNetworkAddressIdentity is set and
        /// administrator is not System/Provisioning level administrator.
        /// Following attributes are only used in IMS mode:
        /// implicitRegistrationSetSupportPolicy
        /// useSystemImplicitRegistrationSetSupportPolicy
        /// sipIdentityForPilotAndProxyTrunkModesPolicy
        /// useSystemSIPIdentityForPilotAndProxyTrunkModesPolicy
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: GroupTrunkGroupModifyInstanceRequest20sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupModifyInstanceRequest19sp1Async instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupModifyInstanceRequest19sp1(this OcipClient client, GroupTrunkGroupModifyInstanceRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a Trunk Group Instance in a group.
        /// The access device cannot be modified or cleared if there are any users assigned to the Trunk Group.
        /// The command will fail if enableNetworkAddressIdentity is set and
        /// administrator is not System/Provisioning level administrator.
        /// Following attributes are only used in IMS mode:
        /// implicitRegistrationSetSupportPolicy
        /// useSystemImplicitRegistrationSetSupportPolicy
        /// sipIdentityForPilotAndProxyTrunkModesPolicy
        /// useSystemSIPIdentityForPilotAndProxyTrunkModesPolicy
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: GroupTrunkGroupModifyInstanceRequest20sp1
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupModifyInstanceRequest19sp1Async(this OcipClient client, GroupTrunkGroupModifyInstanceRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify the maximum and bursting maximum permissible active Trunk Group calls for the group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupModifyRequest(this OcipClient client, GroupTrunkGroupModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the maximum and bursting maximum permissible active Trunk Group calls for the group.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupModifyRequestAsync(this OcipClient client, GroupTrunkGroupModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a user creation task for a trunk group.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupUserCreationTaskAddRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupUserCreationTaskAddRequest(this OcipClient client, GroupTrunkGroupUserCreationTaskAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a user creation task for a trunk group.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupUserCreationTaskAddRequestAsync(this OcipClient client, GroupTrunkGroupUserCreationTaskAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Delete a user creation task for a trunk group.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupUserCreationTaskDeleteRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupTrunkGroupUserCreationTaskDeleteRequest(this OcipClient client, GroupTrunkGroupUserCreationTaskDeleteRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Delete a user creation task for a trunk group.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> GroupTrunkGroupUserCreationTaskDeleteRequestAsync(this OcipClient client, GroupTrunkGroupUserCreationTaskDeleteRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the list of user creation tasks for a trunk group.
        /// The response is either GroupTrunkGroupUserCreationTaskGetListResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupUserCreationTaskGetListRequestAsync instead.")]
        public static async Task<GroupTrunkGroupUserCreationTaskGetListResponse> GroupTrunkGroupUserCreationTaskGetListRequest(this OcipClient client, GroupTrunkGroupUserCreationTaskGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupUserCreationTaskGetListResponse;
        }

        /// <summary>
        /// Get the list of user creation tasks for a trunk group.
        /// The response is either GroupTrunkGroupUserCreationTaskGetListResponse or ErrorResponse.
        /// </summary>
        public static async Task<GroupTrunkGroupUserCreationTaskGetListResponse> GroupTrunkGroupUserCreationTaskGetListRequestAsync(this OcipClient client, GroupTrunkGroupUserCreationTaskGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupUserCreationTaskGetListResponse;
        }
        /// <summary>
        /// Request the details of a specified user creation task for a trunk group.
        /// The response is either GroupTrunkGroupUserCreationTaskGetResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupTrunkGroupUserCreationTaskGetRequestAsync instead.")]
        public static async Task<GroupTrunkGroupUserCreationTaskGetResponse> GroupTrunkGroupUserCreationTaskGetRequest(this OcipClient client, GroupTrunkGroupUserCreationTaskGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupTrunkGroupUserCreationTaskGetResponse;
        }

        /// <summary>
        /// Request the details of a specified user creation task for a trunk group.
        /// The response is either GroupTrunkGroupUserCreationTaskGetResponse or ErrorResponse.
        /// </summary>
        public static async Task<GroupTrunkGroupUserCreationTaskGetResponse> GroupTrunkGroupUserCreationTaskGetRequestAsync(this OcipClient client, GroupTrunkGroupUserCreationTaskGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupTrunkGroupUserCreationTaskGetResponse;
        }
        /// <summary>
        /// Requests the group's voice portal passcode rules setting.
        /// The response is either GroupVoiceMessagingGroupGetPasscodeRulesResponse or ErrorResponse.
        /// Replaced By: GroupPortalPasscodeRulesGetRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupVoiceMessagingGroupGetPasscodeRulesRequestAsync instead.")]
        public static async Task<GroupVoiceMessagingGroupGetPasscodeRulesResponse> GroupVoiceMessagingGroupGetPasscodeRulesRequest(this OcipClient client, GroupVoiceMessagingGroupGetPasscodeRulesRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupVoiceMessagingGroupGetPasscodeRulesResponse;
        }

        /// <summary>
        /// Requests the group's voice portal passcode rules setting.
        /// The response is either GroupVoiceMessagingGroupGetPasscodeRulesResponse or ErrorResponse.
        /// Replaced By: GroupPortalPasscodeRulesGetRequest
        /// </summary>
        public static async Task<GroupVoiceMessagingGroupGetPasscodeRulesResponse> GroupVoiceMessagingGroupGetPasscodeRulesRequestAsync(this OcipClient client, GroupVoiceMessagingGroupGetPasscodeRulesRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupVoiceMessagingGroupGetPasscodeRulesResponse;
        }
        /// <summary>
        /// Get the group's voice portal branding settings.
        /// The response is either a GroupVoiceMessagingGroupGetVoicePortalBrandingResponse or an ErrorResponse.
        /// Replaced By: GroupVoiceMessagingGroupGetVoicePortalBrandingRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupVoiceMessagingGroupGetVoicePortalBrandingRequestAsync instead.")]
        public static async Task<GroupVoiceMessagingGroupGetVoicePortalBrandingResponse> GroupVoiceMessagingGroupGetVoicePortalBrandingRequest(this OcipClient client, GroupVoiceMessagingGroupGetVoicePortalBrandingRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupVoiceMessagingGroupGetVoicePortalBrandingResponse;
        }

        /// <summary>
        /// Get the group's voice portal branding settings.
        /// The response is either a GroupVoiceMessagingGroupGetVoicePortalBrandingResponse or an ErrorResponse.
        /// Replaced By: GroupVoiceMessagingGroupGetVoicePortalBrandingRequest16
        /// </summary>
        public static async Task<GroupVoiceMessagingGroupGetVoicePortalBrandingResponse> GroupVoiceMessagingGroupGetVoicePortalBrandingRequestAsync(this OcipClient client, GroupVoiceMessagingGroupGetVoicePortalBrandingRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupVoiceMessagingGroupGetVoicePortalBrandingResponse;
        }
        /// <summary>
        /// Requests the group's voice messaging settings
        /// The response is either GroupVoiceMessagingGroupGetVoicePortalResponse14 or ErrorResponse.
        /// Replaced by GroupVoiceMessagingGroupGetVoicePortalRequest15
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupVoiceMessagingGroupGetVoicePortalRequest14Async instead.")]
        public static async Task<GroupVoiceMessagingGroupGetVoicePortalResponse14> GroupVoiceMessagingGroupGetVoicePortalRequest14(this OcipClient client, GroupVoiceMessagingGroupGetVoicePortalRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupVoiceMessagingGroupGetVoicePortalResponse14;
        }

        /// <summary>
        /// Requests the group's voice messaging settings
        /// The response is either GroupVoiceMessagingGroupGetVoicePortalResponse14 or ErrorResponse.
        /// Replaced by GroupVoiceMessagingGroupGetVoicePortalRequest15
        /// </summary>
        public static async Task<GroupVoiceMessagingGroupGetVoicePortalResponse14> GroupVoiceMessagingGroupGetVoicePortalRequest14Async(this OcipClient client, GroupVoiceMessagingGroupGetVoicePortalRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupVoiceMessagingGroupGetVoicePortalResponse14;
        }
        /// <summary>
        /// Request to get the group voice portal information for a voice messaging group.
        /// The response is either GroupVoiceMessagingGroupGetVoicePortalResponse15 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupVoiceMessagingGroupGetVoicePortalRequest15Async instead.")]
        public static async Task<GroupVoiceMessagingGroupGetVoicePortalResponse15> GroupVoiceMessagingGroupGetVoicePortalRequest15(this OcipClient client, GroupVoiceMessagingGroupGetVoicePortalRequest15 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupVoiceMessagingGroupGetVoicePortalResponse15;
        }

        /// <summary>
        /// Request to get the group voice portal information for a voice messaging group.
        /// The response is either GroupVoiceMessagingGroupGetVoicePortalResponse15 or ErrorResponse.
        /// </summary>
        public static async Task<GroupVoiceMessagingGroupGetVoicePortalResponse15> GroupVoiceMessagingGroupGetVoicePortalRequest15Async(this OcipClient client, GroupVoiceMessagingGroupGetVoicePortalRequest15 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupVoiceMessagingGroupGetVoicePortalResponse15;
        }
        /// <summary>
        /// Request to get the group voice portal information for a voice messaging group.
        /// The response is either GroupVoiceMessagingGroupGetVoicePortalResponse17 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupVoiceMessagingGroupGetVoicePortalRequest17Async instead.")]
        public static async Task<GroupVoiceMessagingGroupGetVoicePortalResponse17> GroupVoiceMessagingGroupGetVoicePortalRequest17(this OcipClient client, GroupVoiceMessagingGroupGetVoicePortalRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as GroupVoiceMessagingGroupGetVoicePortalResponse17;
        }

        /// <summary>
        /// Request to get the group voice portal information for a voice messaging group.
        /// The response is either GroupVoiceMessagingGroupGetVoicePortalResponse17 or ErrorResponse.
        /// </summary>
        public static async Task<GroupVoiceMessagingGroupGetVoicePortalResponse17> GroupVoiceMessagingGroupGetVoicePortalRequest17Async(this OcipClient client, GroupVoiceMessagingGroupGetVoicePortalRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as GroupVoiceMessagingGroupGetVoicePortalResponse17;
        }
        /// <summary>
        /// Request to modify the group's voice portal passcode rules setting.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: GroupPortalPasscodeRulesModifyRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupVoiceMessagingGroupModifyPasscodeRulesRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupVoiceMessagingGroupModifyPasscodeRulesRequest(this OcipClient client, GroupVoiceMessagingGroupModifyPasscodeRulesRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify the group's voice portal passcode rules setting.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: GroupPortalPasscodeRulesModifyRequest
        /// </summary>
        public static async Task<SuccessResponse> GroupVoiceMessagingGroupModifyPasscodeRulesRequestAsync(this OcipClient client, GroupVoiceMessagingGroupModifyPasscodeRulesRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify the group's voice portal branding settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: GroupVoiceMessagingGroupModifyVoicePortalBrandingRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use GroupVoiceMessagingGroupModifyVoicePortalBrandingRequestAsync instead.")]
        public static async Task<SuccessResponse> GroupVoiceMessagingGroupModifyVoicePortalBrandingRequest(this OcipClient client, GroupVoiceMessagingGroupModifyVoicePortalBrandingRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the group's voice portal branding settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: GroupVoiceMessagingGroupModifyVoicePortalBrandingRequest16
        /// </summary>
        public static async Task<SuccessResponse> GroupVoiceMessagingGroupModifyVoicePortalBrandingRequestAsync(this OcipClient client, GroupVoiceMessagingGroupModifyVoicePortalBrandingRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// LoginRequest13mp10 is 2nd stage of the 2 stage OCI login process.
        /// The signedPassword is not required for external authentication login from a trusted host (ACL).
        /// 
        /// The response is either a LoginResponse13mp10 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use LoginRequest13mp10Async instead.")]
        public static async Task<LoginResponse13mp10> LoginRequest13mp10(this OcipClient client, LoginRequest13mp10 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as LoginResponse13mp10;
        }

        /// <summary>
        /// LoginRequest13mp10 is 2nd stage of the 2 stage OCI login process.
        /// The signedPassword is not required for external authentication login from a trusted host (ACL).
        /// 
        /// The response is either a LoginResponse13mp10 or an ErrorResponse.
        /// </summary>
        public static async Task<LoginResponse13mp10> LoginRequest13mp10Async(this OcipClient client, LoginRequest13mp10 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as LoginResponse13mp10;
        }
        /// <summary>
        /// LoginRequest14sp4 is 2nd stage of the 2 stage OCI login process.
        /// The signedPassword is not required for external authentication login from a trusted host (ACL).
        /// 
        /// The response is either a LoginResponse14sp4 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use LoginRequest14sp4Async instead.")]
        public static async Task<LoginResponse14sp4> LoginRequest14sp4(this OcipClient client, LoginRequest14sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as LoginResponse14sp4;
        }

        /// <summary>
        /// LoginRequest14sp4 is 2nd stage of the 2 stage OCI login process.
        /// The signedPassword is not required for external authentication login from a trusted host (ACL).
        /// 
        /// The response is either a LoginResponse14sp4 or an ErrorResponse.
        /// </summary>
        public static async Task<LoginResponse14sp4> LoginRequest14sp4Async(this OcipClient client, LoginRequest14sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as LoginResponse14sp4;
        }
        /// <summary>
        /// Request to login to OCI.
        /// password is not required for external authentication login from a trusted host (ACL).
        /// 
        /// The following data element is only used in XS data mode and will be ignored in AS data mode:
        /// signedPassword
        /// 
        /// Replaced by: LoginRequest22V5.
        /// 
        /// The response is either a LoginResponse22V4 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use LoginRequest22V4Async instead.")]
        public static async Task<LoginResponse22V4> LoginRequest22V4(this OcipClient client, LoginRequest22V4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as LoginResponse22V4;
        }

        /// <summary>
        /// Request to login to OCI.
        /// password is not required for external authentication login from a trusted host (ACL).
        /// 
        /// The following data element is only used in XS data mode and will be ignored in AS data mode:
        /// signedPassword
        /// 
        /// Replaced by: LoginRequest22V5.
        /// 
        /// The response is either a LoginResponse22V4 or an ErrorResponse.
        /// </summary>
        public static async Task<LoginResponse22V4> LoginRequest22V4Async(this OcipClient client, LoginRequest22V4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as LoginResponse22V4;
        }
        /// <summary>
        /// Get the profile for a reseller.
        /// The response is either ResellerGetResponse or ErrorResponse.
        /// 
        /// Replaced by: ResellerGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use ResellerGetRequestAsync instead.")]
        public static async Task<ResellerGetResponse> ResellerGetRequest(this OcipClient client, ResellerGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ResellerGetResponse;
        }

        /// <summary>
        /// Get the profile for a reseller.
        /// The response is either ResellerGetResponse or ErrorResponse.
        /// 
        /// Replaced by: ResellerGetRequest22
        /// </summary>
        public static async Task<ResellerGetResponse> ResellerGetRequestAsync(this OcipClient client, ResellerGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ResellerGetResponse;
        }
        /// <summary>
        /// Get the profile for a reseller.
        /// The response is either ResellerGetResponse22 or ErrorResponse.
        /// 
        /// Replaced by: ResellerGetRequest22V2
        /// </summary>
        [Obsolete("This method is deprecated. Use ResellerGetRequest22Async instead.")]
        public static async Task<ResellerGetResponse22> ResellerGetRequest22(this OcipClient client, ResellerGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ResellerGetResponse22;
        }

        /// <summary>
        /// Get the profile for a reseller.
        /// The response is either ResellerGetResponse22 or ErrorResponse.
        /// 
        /// Replaced by: ResellerGetRequest22V2
        /// </summary>
        public static async Task<ResellerGetResponse22> ResellerGetRequest22Async(this OcipClient client, ResellerGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ResellerGetResponse22;
        }
        /// <summary>
        /// Request to get the list of device files managed by the Device Management System, on a per-device profile basis.
        /// The response is either ServiceProviderAccessDeviceFileGetListResponse or ErrorResponse.
        /// Replaced By: ServiceProviderAccessDeviceFileGetListRequest14sp8
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderAccessDeviceFileGetListRequestAsync instead.")]
        public static async Task<ServiceProviderAccessDeviceFileGetListResponse> ServiceProviderAccessDeviceFileGetListRequest(this OcipClient client, ServiceProviderAccessDeviceFileGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderAccessDeviceFileGetListResponse;
        }

        /// <summary>
        /// Request to get the list of device files managed by the Device Management System, on a per-device profile basis.
        /// The response is either ServiceProviderAccessDeviceFileGetListResponse or ErrorResponse.
        /// Replaced By: ServiceProviderAccessDeviceFileGetListRequest14sp8
        /// </summary>
        public static async Task<ServiceProviderAccessDeviceFileGetListResponse> ServiceProviderAccessDeviceFileGetListRequestAsync(this OcipClient client, ServiceProviderAccessDeviceFileGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderAccessDeviceFileGetListResponse;
        }
        /// <summary>
        /// Request to get a service provider device profile file.
        /// The response is either ServiceProviderAccessDeviceFileGetResponse or ErrorResponse.
        /// Replaced By: ServiceProviderAccessDeviceFileGetRequest14sp8
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderAccessDeviceFileGetRequestAsync instead.")]
        public static async Task<ServiceProviderAccessDeviceFileGetResponse> ServiceProviderAccessDeviceFileGetRequest(this OcipClient client, ServiceProviderAccessDeviceFileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderAccessDeviceFileGetResponse;
        }

        /// <summary>
        /// Request to get a service provider device profile file.
        /// The response is either ServiceProviderAccessDeviceFileGetResponse or ErrorResponse.
        /// Replaced By: ServiceProviderAccessDeviceFileGetRequest14sp8
        /// </summary>
        public static async Task<ServiceProviderAccessDeviceFileGetResponse> ServiceProviderAccessDeviceFileGetRequestAsync(this OcipClient client, ServiceProviderAccessDeviceFileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderAccessDeviceFileGetResponse;
        }
        /// <summary>
        /// Request to get a service provider device profile file.
        /// The response is either ServiceProviderAccessDeviceFileGetResponse14sp8 or ErrorResponse.
        /// Replaced by: ServiceProviderAccessDeviceFileGetRequest16sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderAccessDeviceFileGetRequest14sp8Async instead.")]
        public static async Task<ServiceProviderAccessDeviceFileGetResponse14sp8> ServiceProviderAccessDeviceFileGetRequest14sp8(this OcipClient client, ServiceProviderAccessDeviceFileGetRequest14sp8 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderAccessDeviceFileGetResponse14sp8;
        }

        /// <summary>
        /// Request to get a service provider device profile file.
        /// The response is either ServiceProviderAccessDeviceFileGetResponse14sp8 or ErrorResponse.
        /// Replaced by: ServiceProviderAccessDeviceFileGetRequest16sp1
        /// </summary>
        public static async Task<ServiceProviderAccessDeviceFileGetResponse14sp8> ServiceProviderAccessDeviceFileGetRequest14sp8Async(this OcipClient client, ServiceProviderAccessDeviceFileGetRequest14sp8 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderAccessDeviceFileGetResponse14sp8;
        }
        /// <summary>
        /// Request to get a service provider device profile file.
        /// The response is either ServiceProviderAccessDeviceFileGetResponse16sp1 or ErrorResponse.
        /// 
        /// Replaced by: ServiceProviderAccessDeviceFileGetRequest20
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderAccessDeviceFileGetRequest16sp1Async instead.")]
        public static async Task<ServiceProviderAccessDeviceFileGetResponse16sp1> ServiceProviderAccessDeviceFileGetRequest16sp1(this OcipClient client, ServiceProviderAccessDeviceFileGetRequest16sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderAccessDeviceFileGetResponse16sp1;
        }

        /// <summary>
        /// Request to get a service provider device profile file.
        /// The response is either ServiceProviderAccessDeviceFileGetResponse16sp1 or ErrorResponse.
        /// 
        /// Replaced by: ServiceProviderAccessDeviceFileGetRequest20
        /// </summary>
        public static async Task<ServiceProviderAccessDeviceFileGetResponse16sp1> ServiceProviderAccessDeviceFileGetRequest16sp1Async(this OcipClient client, ServiceProviderAccessDeviceFileGetRequest16sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderAccessDeviceFileGetResponse16sp1;
        }
        /// <summary>
        /// Request to modify a specified service provider/enterprise access device file.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: ServiceProviderAccessDeviceFileModifyRequest14sp8
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderAccessDeviceFileModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> ServiceProviderAccessDeviceFileModifyRequest(this OcipClient client, ServiceProviderAccessDeviceFileModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a specified service provider/enterprise access device file.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: ServiceProviderAccessDeviceFileModifyRequest14sp8
        /// </summary>
        public static async Task<SuccessResponse> ServiceProviderAccessDeviceFileModifyRequestAsync(this OcipClient client, ServiceProviderAccessDeviceFileModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Requests the configuration of a specified service provider access device.
        /// The response is either ServiceProviderAccessDeviceGetResponse14 or ErrorResponse.
        /// Replaced By: ServiceProviderAccessDeviceGetRequest14sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderAccessDeviceGetRequest14Async instead.")]
        public static async Task<ServiceProviderAccessDeviceGetResponse14> ServiceProviderAccessDeviceGetRequest14(this OcipClient client, ServiceProviderAccessDeviceGetRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderAccessDeviceGetResponse14;
        }

        /// <summary>
        /// Requests the configuration of a specified service provider access device.
        /// The response is either ServiceProviderAccessDeviceGetResponse14 or ErrorResponse.
        /// Replaced By: ServiceProviderAccessDeviceGetRequest14sp3
        /// </summary>
        public static async Task<ServiceProviderAccessDeviceGetResponse14> ServiceProviderAccessDeviceGetRequest14Async(this OcipClient client, ServiceProviderAccessDeviceGetRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderAccessDeviceGetResponse14;
        }
        /// <summary>
        /// Requests the configuration of a specified service provider access device.
        /// The response is either ServiceProviderAccessDeviceGetResponse14sp3 or ErrorResponse.
        /// Replaced By: ServiceProviderAccessDeviceGetRequest14sp6
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderAccessDeviceGetRequest14sp3Async instead.")]
        public static async Task<ServiceProviderAccessDeviceGetResponse14sp3> ServiceProviderAccessDeviceGetRequest14sp3(this OcipClient client, ServiceProviderAccessDeviceGetRequest14sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderAccessDeviceGetResponse14sp3;
        }

        /// <summary>
        /// Requests the configuration of a specified service provider access device.
        /// The response is either ServiceProviderAccessDeviceGetResponse14sp3 or ErrorResponse.
        /// Replaced By: ServiceProviderAccessDeviceGetRequest14sp6
        /// </summary>
        public static async Task<ServiceProviderAccessDeviceGetResponse14sp3> ServiceProviderAccessDeviceGetRequest14sp3Async(this OcipClient client, ServiceProviderAccessDeviceGetRequest14sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderAccessDeviceGetResponse14sp3;
        }
        /// <summary>
        /// Requests the configuration of a specified service provider access device.
        /// The response is either ServiceProviderAccessDeviceGetResponse14sp6 or ErrorResponse.
        /// Replaced by: ServiceProviderAccessDeviceGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderAccessDeviceGetRequest14sp6Async instead.")]
        public static async Task<ServiceProviderAccessDeviceGetResponse14sp6> ServiceProviderAccessDeviceGetRequest14sp6(this OcipClient client, ServiceProviderAccessDeviceGetRequest14sp6 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderAccessDeviceGetResponse14sp6;
        }

        /// <summary>
        /// Requests the configuration of a specified service provider access device.
        /// The response is either ServiceProviderAccessDeviceGetResponse14sp6 or ErrorResponse.
        /// Replaced by: ServiceProviderAccessDeviceGetRequest16
        /// </summary>
        public static async Task<ServiceProviderAccessDeviceGetResponse14sp6> ServiceProviderAccessDeviceGetRequest14sp6Async(this OcipClient client, ServiceProviderAccessDeviceGetRequest14sp6 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderAccessDeviceGetResponse14sp6;
        }
        /// <summary>
        /// Requests the configuration of a specified service provider access device.
        /// The response is either ServiceProviderAccessDeviceGetResponse16 or ErrorResponse.
        /// 
        /// Replaced by: ServiceProviderAccessDeviceGetRequest19
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderAccessDeviceGetRequest16Async instead.")]
        public static async Task<ServiceProviderAccessDeviceGetResponse16> ServiceProviderAccessDeviceGetRequest16(this OcipClient client, ServiceProviderAccessDeviceGetRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderAccessDeviceGetResponse16;
        }

        /// <summary>
        /// Requests the configuration of a specified service provider access device.
        /// The response is either ServiceProviderAccessDeviceGetResponse16 or ErrorResponse.
        /// 
        /// Replaced by: ServiceProviderAccessDeviceGetRequest19
        /// </summary>
        public static async Task<ServiceProviderAccessDeviceGetResponse16> ServiceProviderAccessDeviceGetRequest16Async(this OcipClient client, ServiceProviderAccessDeviceGetRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderAccessDeviceGetResponse16;
        }
        /// <summary>
        /// Requests the service provider administrator's policy settings.
        /// The response is either ServiceProviderAdminGetPolicyResponse14 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderAdminGetPolicyRequest14Async instead.")]
        public static async Task<ServiceProviderAdminGetPolicyResponse14> ServiceProviderAdminGetPolicyRequest14(this OcipClient client, ServiceProviderAdminGetPolicyRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderAdminGetPolicyResponse14;
        }

        /// <summary>
        /// Requests the service provider administrator's policy settings.
        /// The response is either ServiceProviderAdminGetPolicyResponse14 or ErrorResponse.
        /// </summary>
        public static async Task<ServiceProviderAdminGetPolicyResponse14> ServiceProviderAdminGetPolicyRequest14Async(this OcipClient client, ServiceProviderAdminGetPolicyRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderAdminGetPolicyResponse14;
        }
        /// <summary>
        /// Requests the service provider administrator's policy settings.
        /// The response is either ServiceProviderAdminGetPolicyResponse16sp1 or ErrorResponse.
        /// Replaced by: ServiceProviderAdminGetPolicyRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderAdminGetPolicyRequest16sp1Async instead.")]
        public static async Task<ServiceProviderAdminGetPolicyResponse16sp1> ServiceProviderAdminGetPolicyRequest16sp1(this OcipClient client, ServiceProviderAdminGetPolicyRequest16sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderAdminGetPolicyResponse16sp1;
        }

        /// <summary>
        /// Requests the service provider administrator's policy settings.
        /// The response is either ServiceProviderAdminGetPolicyResponse16sp1 or ErrorResponse.
        /// Replaced by: ServiceProviderAdminGetPolicyRequest17
        /// </summary>
        public static async Task<ServiceProviderAdminGetPolicyResponse16sp1> ServiceProviderAdminGetPolicyRequest16sp1Async(this OcipClient client, ServiceProviderAdminGetPolicyRequest16sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderAdminGetPolicyResponse16sp1;
        }
        /// <summary>
        /// Requests the service provider administrator's policy settings.
        /// The response is either ServiceProviderAdminGetPolicyResponse16sp2 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderAdminGetPolicyRequest16sp2Async instead.")]
        public static async Task<ServiceProviderAdminGetPolicyResponse16sp2> ServiceProviderAdminGetPolicyRequest16sp2(this OcipClient client, ServiceProviderAdminGetPolicyRequest16sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderAdminGetPolicyResponse16sp2;
        }

        /// <summary>
        /// Requests the service provider administrator's policy settings.
        /// The response is either ServiceProviderAdminGetPolicyResponse16sp2 or ErrorResponse.
        /// </summary>
        public static async Task<ServiceProviderAdminGetPolicyResponse16sp2> ServiceProviderAdminGetPolicyRequest16sp2Async(this OcipClient client, ServiceProviderAdminGetPolicyRequest16sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderAdminGetPolicyResponse16sp2;
        }
        /// <summary>
        /// Requests the service provider administrator's policy settings.
        /// The response is either ServiceProviderAdminGetPolicyResponse17 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderAdminGetPolicyRequest17Async instead.")]
        public static async Task<ServiceProviderAdminGetPolicyResponse17> ServiceProviderAdminGetPolicyRequest17(this OcipClient client, ServiceProviderAdminGetPolicyRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderAdminGetPolicyResponse17;
        }

        /// <summary>
        /// Requests the service provider administrator's policy settings.
        /// The response is either ServiceProviderAdminGetPolicyResponse17 or ErrorResponse.
        /// </summary>
        public static async Task<ServiceProviderAdminGetPolicyResponse17> ServiceProviderAdminGetPolicyRequest17Async(this OcipClient client, ServiceProviderAdminGetPolicyRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderAdminGetPolicyResponse17;
        }
        /// <summary>
        /// Requests the service provider administrator's policy settings.
        /// The response is either ServiceProviderAdminGetPolicyResponse17sp1 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderAdminGetPolicyRequest17sp1Async instead.")]
        public static async Task<ServiceProviderAdminGetPolicyResponse17sp1> ServiceProviderAdminGetPolicyRequest17sp1(this OcipClient client, ServiceProviderAdminGetPolicyRequest17sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderAdminGetPolicyResponse17sp1;
        }

        /// <summary>
        /// Requests the service provider administrator's policy settings.
        /// The response is either ServiceProviderAdminGetPolicyResponse17sp1 or ErrorResponse.
        /// </summary>
        public static async Task<ServiceProviderAdminGetPolicyResponse17sp1> ServiceProviderAdminGetPolicyRequest17sp1Async(this OcipClient client, ServiceProviderAdminGetPolicyRequest17sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderAdminGetPolicyResponse17sp1;
        }
        /// <summary>
        /// Requests the service provider administrator's policy settings.
        /// The response is either ServiceProviderAdminGetPolicyResponse17sp3 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderAdminGetPolicyRequest17sp3Async instead.")]
        public static async Task<ServiceProviderAdminGetPolicyResponse17sp3> ServiceProviderAdminGetPolicyRequest17sp3(this OcipClient client, ServiceProviderAdminGetPolicyRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderAdminGetPolicyResponse17sp3;
        }

        /// <summary>
        /// Requests the service provider administrator's policy settings.
        /// The response is either ServiceProviderAdminGetPolicyResponse17sp3 or ErrorResponse.
        /// </summary>
        public static async Task<ServiceProviderAdminGetPolicyResponse17sp3> ServiceProviderAdminGetPolicyRequest17sp3Async(this OcipClient client, ServiceProviderAdminGetPolicyRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderAdminGetPolicyResponse17sp3;
        }
        /// <summary>
        /// Get a service provider or enterprise's answer confirmation settings.
        /// The response is either a ServiceProviderAnswerConfirmationGetResponse or an ErrorResponse.
        /// Replaced By: ServiceProviderAnswerConfirmationGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderAnswerConfirmationGetRequestAsync instead.")]
        public static async Task<ServiceProviderAnswerConfirmationGetResponse> ServiceProviderAnswerConfirmationGetRequest(this OcipClient client, ServiceProviderAnswerConfirmationGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderAnswerConfirmationGetResponse;
        }

        /// <summary>
        /// Get a service provider or enterprise's answer confirmation settings.
        /// The response is either a ServiceProviderAnswerConfirmationGetResponse or an ErrorResponse.
        /// Replaced By: ServiceProviderAnswerConfirmationGetRequest16
        /// </summary>
        public static async Task<ServiceProviderAnswerConfirmationGetResponse> ServiceProviderAnswerConfirmationGetRequestAsync(this OcipClient client, ServiceProviderAnswerConfirmationGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderAnswerConfirmationGetResponse;
        }
        /// <summary>
        /// Modify a service provider or enterprise's answer confirmation settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: ServiceProviderAnswerConfirmationModifyRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderAnswerConfirmationModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> ServiceProviderAnswerConfirmationModifyRequest(this OcipClient client, ServiceProviderAnswerConfirmationModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a service provider or enterprise's answer confirmation settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: ServiceProviderAnswerConfirmationModifyRequest16
        /// </summary>
        public static async Task<SuccessResponse> ServiceProviderAnswerConfirmationModifyRequestAsync(this OcipClient client, ServiceProviderAnswerConfirmationModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the service provider BroadWorks Mobility service settings.
        /// The response is either a ServiceProviderBroadWorksMobilityGetResponse or an ErrorResponse.
        /// Replaced by: ServiceProviderBroadWorksMobilityGetRequest19sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderBroadWorksMobilityGetRequestAsync instead.")]
        public static async Task<ServiceProviderBroadWorksMobilityGetResponse> ServiceProviderBroadWorksMobilityGetRequest(this OcipClient client, ServiceProviderBroadWorksMobilityGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderBroadWorksMobilityGetResponse;
        }

        /// <summary>
        /// Get the service provider BroadWorks Mobility service settings.
        /// The response is either a ServiceProviderBroadWorksMobilityGetResponse or an ErrorResponse.
        /// Replaced by: ServiceProviderBroadWorksMobilityGetRequest19sp1
        /// </summary>
        public static async Task<ServiceProviderBroadWorksMobilityGetResponse> ServiceProviderBroadWorksMobilityGetRequestAsync(this OcipClient client, ServiceProviderBroadWorksMobilityGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderBroadWorksMobilityGetResponse;
        }
        /// <summary>
        /// Get the service provider BroadWorks Mobility service settings.
        /// The response is either a ServiceProviderBroadWorksMobilityGetResponse19sp1 or an ErrorResponse.
        /// 
        /// Replaced by: ServiceProviderBroadWorksMobilityGetRequest22 in AS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderBroadWorksMobilityGetRequest19sp1Async instead.")]
        public static async Task<ServiceProviderBroadWorksMobilityGetResponse19sp1> ServiceProviderBroadWorksMobilityGetRequest19sp1(this OcipClient client, ServiceProviderBroadWorksMobilityGetRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderBroadWorksMobilityGetResponse19sp1;
        }

        /// <summary>
        /// Get the service provider BroadWorks Mobility service settings.
        /// The response is either a ServiceProviderBroadWorksMobilityGetResponse19sp1 or an ErrorResponse.
        /// 
        /// Replaced by: ServiceProviderBroadWorksMobilityGetRequest22 in AS data mode
        /// </summary>
        public static async Task<ServiceProviderBroadWorksMobilityGetResponse19sp1> ServiceProviderBroadWorksMobilityGetRequest19sp1Async(this OcipClient client, ServiceProviderBroadWorksMobilityGetRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderBroadWorksMobilityGetResponse19sp1;
        }
        /// <summary>
        /// Get the service provider BroadWorks Mobility service settings.
        /// The response is either a ServiceProviderBroadWorksMobilityGetResponse21sp1 or an ErrorResponse.
        /// 
        /// Replaced by ServiceProviderBroadWorksMobilityGetRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderBroadWorksMobilityGetRequest21sp1Async instead.")]
        public static async Task<ServiceProviderBroadWorksMobilityGetResponse21sp1> ServiceProviderBroadWorksMobilityGetRequest21sp1(this OcipClient client, ServiceProviderBroadWorksMobilityGetRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderBroadWorksMobilityGetResponse21sp1;
        }

        /// <summary>
        /// Get the service provider BroadWorks Mobility service settings.
        /// The response is either a ServiceProviderBroadWorksMobilityGetResponse21sp1 or an ErrorResponse.
        /// 
        /// Replaced by ServiceProviderBroadWorksMobilityGetRequest22V2.
        /// </summary>
        public static async Task<ServiceProviderBroadWorksMobilityGetResponse21sp1> ServiceProviderBroadWorksMobilityGetRequest21sp1Async(this OcipClient client, ServiceProviderBroadWorksMobilityGetRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderBroadWorksMobilityGetResponse21sp1;
        }
        /// <summary>
        /// Get the service provider BroadWorks Mobility service settings.
        /// The response is either a ServiceProviderBroadWorksMobilityGetResponse21sp1V2 or an ErrorResponse.
        /// 
        /// Replaced by ServiceProviderBroadWorksMobilityGetRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderBroadWorksMobilityGetRequest21sp1V2Async instead.")]
        public static async Task<ServiceProviderBroadWorksMobilityGetResponse21sp1V2> ServiceProviderBroadWorksMobilityGetRequest21sp1V2(this OcipClient client, ServiceProviderBroadWorksMobilityGetRequest21sp1V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderBroadWorksMobilityGetResponse21sp1V2;
        }

        /// <summary>
        /// Get the service provider BroadWorks Mobility service settings.
        /// The response is either a ServiceProviderBroadWorksMobilityGetResponse21sp1V2 or an ErrorResponse.
        /// 
        /// Replaced by ServiceProviderBroadWorksMobilityGetRequest22V2.
        /// </summary>
        public static async Task<ServiceProviderBroadWorksMobilityGetResponse21sp1V2> ServiceProviderBroadWorksMobilityGetRequest21sp1V2Async(this OcipClient client, ServiceProviderBroadWorksMobilityGetRequest21sp1V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderBroadWorksMobilityGetResponse21sp1V2;
        }
        /// <summary>
        /// Get the service provider BroadWorks Mobility service settings.
        /// The response is either a ServiceProviderBroadWorksMobilityGetResponse22 or an ErrorResponse.
        /// 
        /// Replaced by ServiceProviderBroadWorksMobilityGetRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderBroadWorksMobilityGetRequest22Async instead.")]
        public static async Task<ServiceProviderBroadWorksMobilityGetResponse22> ServiceProviderBroadWorksMobilityGetRequest22(this OcipClient client, ServiceProviderBroadWorksMobilityGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderBroadWorksMobilityGetResponse22;
        }

        /// <summary>
        /// Get the service provider BroadWorks Mobility service settings.
        /// The response is either a ServiceProviderBroadWorksMobilityGetResponse22 or an ErrorResponse.
        /// 
        /// Replaced by ServiceProviderBroadWorksMobilityGetRequest22V2.
        /// </summary>
        public static async Task<ServiceProviderBroadWorksMobilityGetResponse22> ServiceProviderBroadWorksMobilityGetRequest22Async(this OcipClient client, ServiceProviderBroadWorksMobilityGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderBroadWorksMobilityGetResponse22;
        }
        /// <summary>
        /// Get the service provider BroadWorks Mobility service settings.
        /// The response is either a ServiceProviderBroadWorksMobilityGetResponse22V2 or an ErrorResponse.
        /// Replaced by ServiceProviderBroadWorksMobilityGetRequest22V3.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderBroadWorksMobilityGetRequest22V2Async instead.")]
        public static async Task<ServiceProviderBroadWorksMobilityGetResponse22V2> ServiceProviderBroadWorksMobilityGetRequest22V2(this OcipClient client, ServiceProviderBroadWorksMobilityGetRequest22V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderBroadWorksMobilityGetResponse22V2;
        }

        /// <summary>
        /// Get the service provider BroadWorks Mobility service settings.
        /// The response is either a ServiceProviderBroadWorksMobilityGetResponse22V2 or an ErrorResponse.
        /// Replaced by ServiceProviderBroadWorksMobilityGetRequest22V3.
        /// </summary>
        public static async Task<ServiceProviderBroadWorksMobilityGetResponse22V2> ServiceProviderBroadWorksMobilityGetRequest22V2Async(this OcipClient client, ServiceProviderBroadWorksMobilityGetRequest22V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderBroadWorksMobilityGetResponse22V2;
        }
        /// <summary>
        /// Adds Mobile Subscriber Directory Numbers to a service provider. It is possible to add a single DN,
        /// or a list of DNs.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by ServiceProviderBroadWorksMobilityMobileSubscriberDirectoryNumberAddListRequest21.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderBroadWorksMobilityMobileSubscriberDirectoryNumberAddListRequestAsync instead.")]
        public static async Task<SuccessResponse> ServiceProviderBroadWorksMobilityMobileSubscriberDirectoryNumberAddListRequest(this OcipClient client, ServiceProviderBroadWorksMobilityMobileSubscriberDirectoryNumberAddListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Adds Mobile Subscriber Directory Numbers to a service provider. It is possible to add a single DN,
        /// or a list of DNs.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by ServiceProviderBroadWorksMobilityMobileSubscriberDirectoryNumberAddListRequest21.
        /// </summary>
        public static async Task<SuccessResponse> ServiceProviderBroadWorksMobilityMobileSubscriberDirectoryNumberAddListRequestAsync(this OcipClient client, ServiceProviderBroadWorksMobilityMobileSubscriberDirectoryNumberAddListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse14 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderCallProcessingGetPolicyRequest14Async instead.")]
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse14> ServiceProviderCallProcessingGetPolicyRequest14(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse14;
        }

        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse14 or an ErrorResponse.
        /// </summary>
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse14> ServiceProviderCallProcessingGetPolicyRequest14Async(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse14;
        }
        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse14sp1 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderCallProcessingGetPolicyRequest14sp1Async instead.")]
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse14sp1> ServiceProviderCallProcessingGetPolicyRequest14sp1(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest14sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse14sp1;
        }

        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse14sp1 or an ErrorResponse.
        /// </summary>
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse14sp1> ServiceProviderCallProcessingGetPolicyRequest14sp1Async(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest14sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse14sp1;
        }
        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse14sp4 or an ErrorResponse.
        /// Replaced By : ServiceProviderCallProcessingGetPolicyRequest15
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderCallProcessingGetPolicyRequest14sp4Async instead.")]
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse14sp4> ServiceProviderCallProcessingGetPolicyRequest14sp4(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest14sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse14sp4;
        }

        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse14sp4 or an ErrorResponse.
        /// Replaced By : ServiceProviderCallProcessingGetPolicyRequest15
        /// </summary>
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse14sp4> ServiceProviderCallProcessingGetPolicyRequest14sp4Async(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest14sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse14sp4;
        }
        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse14sp7 or an ErrorResponse.
        /// Replaced By: ServiceProviderCallProcessingGetPolicyRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderCallProcessingGetPolicyRequest14sp7Async instead.")]
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse14sp7> ServiceProviderCallProcessingGetPolicyRequest14sp7(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest14sp7 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse14sp7;
        }

        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse14sp7 or an ErrorResponse.
        /// Replaced By: ServiceProviderCallProcessingGetPolicyRequest16
        /// </summary>
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse14sp7> ServiceProviderCallProcessingGetPolicyRequest14sp7Async(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest14sp7 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse14sp7;
        }
        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse15 or an ErrorResponse.
        /// Replaced By: ServiceProviderCallProcessingGetPolicyRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderCallProcessingGetPolicyRequest15Async instead.")]
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse15> ServiceProviderCallProcessingGetPolicyRequest15(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest15 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse15;
        }

        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse15 or an ErrorResponse.
        /// Replaced By: ServiceProviderCallProcessingGetPolicyRequest16
        /// </summary>
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse15> ServiceProviderCallProcessingGetPolicyRequest15Async(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest15 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse15;
        }
        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse15sp2 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderCallProcessingGetPolicyRequest15sp2Async instead.")]
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse15sp2> ServiceProviderCallProcessingGetPolicyRequest15sp2(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest15sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse15sp2;
        }

        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse15sp2 or an ErrorResponse.
        /// </summary>
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse15sp2> ServiceProviderCallProcessingGetPolicyRequest15sp2Async(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest15sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse15sp2;
        }
        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse16 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderCallProcessingGetPolicyRequest16Async instead.")]
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse16> ServiceProviderCallProcessingGetPolicyRequest16(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse16;
        }

        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse16 or an ErrorResponse.
        /// </summary>
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse16> ServiceProviderCallProcessingGetPolicyRequest16Async(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse16;
        }
        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse16sp2 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderCallProcessingGetPolicyRequest16sp2Async instead.")]
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse16sp2> ServiceProviderCallProcessingGetPolicyRequest16sp2(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest16sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse16sp2;
        }

        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse16sp2 or an ErrorResponse.
        /// </summary>
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse16sp2> ServiceProviderCallProcessingGetPolicyRequest16sp2Async(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest16sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse16sp2;
        }
        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse17 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderCallProcessingGetPolicyRequest17Async instead.")]
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse17> ServiceProviderCallProcessingGetPolicyRequest17(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse17;
        }

        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse17 or an ErrorResponse.
        /// </summary>
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse17> ServiceProviderCallProcessingGetPolicyRequest17Async(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse17;
        }
        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse17sp3 or an ErrorResponse.
        /// 
        /// Replaced by ServiceProviderCallProcessingGetPolicyResponse17sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderCallProcessingGetPolicyRequest17sp3Async instead.")]
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse17sp3> ServiceProviderCallProcessingGetPolicyRequest17sp3(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse17sp3;
        }

        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse17sp3 or an ErrorResponse.
        /// 
        /// Replaced by ServiceProviderCallProcessingGetPolicyResponse17sp4
        /// </summary>
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse17sp3> ServiceProviderCallProcessingGetPolicyRequest17sp3Async(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse17sp3;
        }
        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse17sp4 or an ErrorResponse.
        /// 
        /// Replaced By : ServiceProviderCallProcessingGetPolicyRequest18sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderCallProcessingGetPolicyRequest17sp4Async instead.")]
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse17sp4> ServiceProviderCallProcessingGetPolicyRequest17sp4(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse17sp4;
        }

        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse17sp4 or an ErrorResponse.
        /// 
        /// Replaced By : ServiceProviderCallProcessingGetPolicyRequest18sp1
        /// </summary>
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse17sp4> ServiceProviderCallProcessingGetPolicyRequest17sp4Async(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse17sp4;
        }
        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse18sp1 or an ErrorResponse.
        /// 
        /// Replaced by: ServiceProviderCallProcessingGetPolicyRequest19sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderCallProcessingGetPolicyRequest18sp1Async instead.")]
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse18sp1> ServiceProviderCallProcessingGetPolicyRequest18sp1(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest18sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse18sp1;
        }

        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse18sp1 or an ErrorResponse.
        /// 
        /// Replaced by: ServiceProviderCallProcessingGetPolicyRequest19sp1
        /// </summary>
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse18sp1> ServiceProviderCallProcessingGetPolicyRequest18sp1Async(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest18sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse18sp1;
        }
        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse19sp1 or an ErrorResponse.
        /// 
        /// Replaced by: ServiceProviderCallProcessingGetPolicyRequest21sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderCallProcessingGetPolicyRequest19sp1Async instead.")]
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse19sp1> ServiceProviderCallProcessingGetPolicyRequest19sp1(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse19sp1;
        }

        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse19sp1 or an ErrorResponse.
        /// 
        /// Replaced by: ServiceProviderCallProcessingGetPolicyRequest21sp1
        /// </summary>
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse19sp1> ServiceProviderCallProcessingGetPolicyRequest19sp1Async(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse19sp1;
        }
        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse21sp1 or an ErrorResponse.
        /// Replaced by: ServiceProviderCallProcessingGetPolicyRequest21sp2
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderCallProcessingGetPolicyRequest21sp1Async instead.")]
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse21sp1> ServiceProviderCallProcessingGetPolicyRequest21sp1(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse21sp1;
        }

        /// <summary>
        /// Request the service provider level data associated with Call Processing
        /// Policy. The response is either a ServiceProviderCallProcessingGetPolicyResponse21sp1 or an ErrorResponse.
        /// Replaced by: ServiceProviderCallProcessingGetPolicyRequest21sp2
        /// </summary>
        public static async Task<ServiceProviderCallProcessingGetPolicyResponse21sp1> ServiceProviderCallProcessingGetPolicyRequest21sp1Async(this OcipClient client, ServiceProviderCallProcessingGetPolicyRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderCallProcessingGetPolicyResponse21sp1;
        }
        /// <summary>
        /// Modify the service provider level data associated with Call Processing
        /// Policy. The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderCallProcessingModifyPolicyRequest14Async instead.")]
        public static async Task<SuccessResponse> ServiceProviderCallProcessingModifyPolicyRequest14(this OcipClient client, ServiceProviderCallProcessingModifyPolicyRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the service provider level data associated with Call Processing
        /// Policy. The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> ServiceProviderCallProcessingModifyPolicyRequest14Async(this OcipClient client, ServiceProviderCallProcessingModifyPolicyRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a new Communication Barring Profile.
        /// The priorities for OriginatingRules, RedirectingRules and IncomingRules are requantized to consecutive integers as part of the add.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderCommunicationBarringProfileAddRequestAsync instead.")]
        public static async Task<SuccessResponse> ServiceProviderCommunicationBarringProfileAddRequest(this OcipClient client, ServiceProviderCommunicationBarringProfileAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a new Communication Barring Profile.
        /// The priorities for OriginatingRules, RedirectingRules and IncomingRules are requantized to consecutive integers as part of the add.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> ServiceProviderCommunicationBarringProfileAddRequestAsync(this OcipClient client, ServiceProviderCommunicationBarringProfileAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get an existing Communication Barring Profile.
        /// The response is either a ServiceProviderCommunicationBarringProfileGetResponse
        /// or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderCommunicationBarringProfileGetRequestAsync instead.")]
        public static async Task<ServiceProviderCommunicationBarringProfileGetResponse> ServiceProviderCommunicationBarringProfileGetRequest(this OcipClient client, ServiceProviderCommunicationBarringProfileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderCommunicationBarringProfileGetResponse;
        }

        /// <summary>
        /// Get an existing Communication Barring Profile.
        /// The response is either a ServiceProviderCommunicationBarringProfileGetResponse
        /// or an ErrorResponse.
        /// </summary>
        public static async Task<ServiceProviderCommunicationBarringProfileGetResponse> ServiceProviderCommunicationBarringProfileGetRequestAsync(this OcipClient client, ServiceProviderCommunicationBarringProfileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderCommunicationBarringProfileGetResponse;
        }
        /// <summary>
        /// Request device management's events for a specific queue.
        /// It is possible to restrict the number of rows returned using
        /// responseSizeLimit.
        /// If eventQueueType is not specified, the events from all the
        /// event queues are returned.
        /// The response is either a ServiceProviderDeviceManagementEventGetListResponse or an ErrorResponse.
        /// 
        /// Deprecated by: ServiceProviderDeviceManagementEventGetListRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderDeviceManagementEventGetListRequestAsync instead.")]
        public static async Task<ServiceProviderDeviceManagementEventGetListResponse> ServiceProviderDeviceManagementEventGetListRequest(this OcipClient client, ServiceProviderDeviceManagementEventGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderDeviceManagementEventGetListResponse;
        }

        /// <summary>
        /// Request device management's events for a specific queue.
        /// It is possible to restrict the number of rows returned using
        /// responseSizeLimit.
        /// If eventQueueType is not specified, the events from all the
        /// event queues are returned.
        /// The response is either a ServiceProviderDeviceManagementEventGetListResponse or an ErrorResponse.
        /// 
        /// Deprecated by: ServiceProviderDeviceManagementEventGetListRequest22.
        /// </summary>
        public static async Task<ServiceProviderDeviceManagementEventGetListResponse> ServiceProviderDeviceManagementEventGetListRequestAsync(this OcipClient client, ServiceProviderDeviceManagementEventGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderDeviceManagementEventGetListResponse;
        }
        /// <summary>
        /// Request the Service Provider level data associated with Dial Plan Policy.
        /// The response is either a ServiceProviderDialPlanPolicyGetResponse
        /// or an ErrorResponse.
        /// 
        /// Replaced by: ServiceProviderDialPlanPolicyGetRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderDialPlanPolicyGetRequestAsync instead.")]
        public static async Task<ServiceProviderDialPlanPolicyGetResponse> ServiceProviderDialPlanPolicyGetRequest(this OcipClient client, ServiceProviderDialPlanPolicyGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderDialPlanPolicyGetResponse;
        }

        /// <summary>
        /// Request the Service Provider level data associated with Dial Plan Policy.
        /// The response is either a ServiceProviderDialPlanPolicyGetResponse
        /// or an ErrorResponse.
        /// 
        /// Replaced by: ServiceProviderDialPlanPolicyGetRequest17
        /// </summary>
        public static async Task<ServiceProviderDialPlanPolicyGetResponse> ServiceProviderDialPlanPolicyGetRequestAsync(this OcipClient client, ServiceProviderDialPlanPolicyGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderDialPlanPolicyGetResponse;
        }
        /// <summary>
        /// Get the service provider's enhanced call log settings.
        /// The response is either a ServiceProviderEnhancedCallLogsGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderEnhancedCallLogsGetRequestAsync instead.")]
        public static async Task<ServiceProviderEnhancedCallLogsGetResponse> ServiceProviderEnhancedCallLogsGetRequest(this OcipClient client, ServiceProviderEnhancedCallLogsGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderEnhancedCallLogsGetResponse;
        }

        /// <summary>
        /// Get the service provider's enhanced call log settings.
        /// The response is either a ServiceProviderEnhancedCallLogsGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<ServiceProviderEnhancedCallLogsGetResponse> ServiceProviderEnhancedCallLogsGetRequestAsync(this OcipClient client, ServiceProviderEnhancedCallLogsGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderEnhancedCallLogsGetResponse;
        }
        /// <summary>
        /// Get the list of feature access codes for a service provider or enterprise.
        /// The response is either a ServiceProviderFeatureAccessCodeGetListResponse20
        /// or an ErrorResponse.
        /// In release 20 the "Call Recording" FAC name is changed to
        /// "Call Recording - Start".
        /// Replaced by: ServiceProviderFeatureAccessCodeGetListRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderFeatureAccessCodeGetListRequest20Async instead.")]
        public static async Task<ServiceProviderFeatureAccessCodeGetListResponse20> ServiceProviderFeatureAccessCodeGetListRequest20(this OcipClient client, ServiceProviderFeatureAccessCodeGetListRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderFeatureAccessCodeGetListResponse20;
        }

        /// <summary>
        /// Get the list of feature access codes for a service provider or enterprise.
        /// The response is either a ServiceProviderFeatureAccessCodeGetListResponse20
        /// or an ErrorResponse.
        /// In release 20 the "Call Recording" FAC name is changed to
        /// "Call Recording - Start".
        /// Replaced by: ServiceProviderFeatureAccessCodeGetListRequest21
        /// </summary>
        public static async Task<ServiceProviderFeatureAccessCodeGetListResponse20> ServiceProviderFeatureAccessCodeGetListRequest20Async(this OcipClient client, ServiceProviderFeatureAccessCodeGetListRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderFeatureAccessCodeGetListResponse20;
        }
        /// <summary>
        /// Modify a list of feature access codes for a service provider or enterprise.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// In release 20 the "Call Recording" FAC name is changed to
        /// "Call Recording - Start".
        /// Replaced by: ServiceProviderFeatureAccessCodeModifyListRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderFeatureAccessCodeModifyListRequest20Async instead.")]
        public static async Task<SuccessResponse> ServiceProviderFeatureAccessCodeModifyListRequest20(this OcipClient client, ServiceProviderFeatureAccessCodeModifyListRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a list of feature access codes for a service provider or enterprise.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// In release 20 the "Call Recording" FAC name is changed to
        /// "Call Recording - Start".
        /// Replaced by: ServiceProviderFeatureAccessCodeModifyListRequest21
        /// </summary>
        public static async Task<SuccessResponse> ServiceProviderFeatureAccessCodeModifyListRequest20Async(this OcipClient client, ServiceProviderFeatureAccessCodeModifyListRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the profile for a service provider or enterprise.
        /// The response is either a ServiceProviderGetResponse13mp2 or an ErrorResponse.
        /// 
        /// Replaced by: ServiceProviderGetRequest17sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderGetRequest13mp2Async instead.")]
        public static async Task<ServiceProviderGetResponse13mp2> ServiceProviderGetRequest13mp2(this OcipClient client, ServiceProviderGetRequest13mp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderGetResponse13mp2;
        }

        /// <summary>
        /// Get the profile for a service provider or enterprise.
        /// The response is either a ServiceProviderGetResponse13mp2 or an ErrorResponse.
        /// 
        /// Replaced by: ServiceProviderGetRequest17sp1
        /// </summary>
        public static async Task<ServiceProviderGetResponse13mp2> ServiceProviderGetRequest13mp2Async(this OcipClient client, ServiceProviderGetRequest13mp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderGetResponse13mp2;
        }
        /// <summary>
        /// Get the profile for a service provider or enterprise.
        /// The response is either a ServiceProviderGetResponse17sp1 or an ErrorResponse.
        /// 
        /// Replaced by: ServiceProviderGetRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderGetRequest17sp1Async instead.")]
        public static async Task<ServiceProviderGetResponse17sp1> ServiceProviderGetRequest17sp1(this OcipClient client, ServiceProviderGetRequest17sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderGetResponse17sp1;
        }

        /// <summary>
        /// Get the profile for a service provider or enterprise.
        /// The response is either a ServiceProviderGetResponse17sp1 or an ErrorResponse.
        /// 
        /// Replaced by: ServiceProviderGetRequest22.
        /// </summary>
        public static async Task<ServiceProviderGetResponse17sp1> ServiceProviderGetRequest17sp1Async(this OcipClient client, ServiceProviderGetRequest17sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderGetResponse17sp1;
        }
        /// <summary>
        /// Get the profile for a service provider or enterprise.
        /// The response is either a ServiceProviderGetResponse22 or an ErrorResponse.
        /// 
        /// Replaced by ServiceProviderGetRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderGetRequest22Async instead.")]
        public static async Task<ServiceProviderGetResponse22> ServiceProviderGetRequest22(this OcipClient client, ServiceProviderGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderGetResponse22;
        }

        /// <summary>
        /// Get the profile for a service provider or enterprise.
        /// The response is either a ServiceProviderGetResponse22 or an ErrorResponse.
        /// 
        /// Replaced by ServiceProviderGetRequest22V2.
        /// </summary>
        public static async Task<ServiceProviderGetResponse22> ServiceProviderGetRequest22Async(this OcipClient client, ServiceProviderGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderGetResponse22;
        }
        /// <summary>
        /// Request the service provider's DTMF based in-call service activation trigger attributes.The response is either a ServiceProviderInCallServiceActivationGetResponse or an ErrorResponse.
        /// Replaced by: ServiceProviderInCallServiceActivationGetRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderInCallServiceActivationGetRequestAsync instead.")]
        public static async Task<ServiceProviderInCallServiceActivationGetResponse> ServiceProviderInCallServiceActivationGetRequest(this OcipClient client, ServiceProviderInCallServiceActivationGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderInCallServiceActivationGetResponse;
        }

        /// <summary>
        /// Request the service provider's DTMF based in-call service activation trigger attributes.The response is either a ServiceProviderInCallServiceActivationGetResponse or an ErrorResponse.
        /// Replaced by: ServiceProviderInCallServiceActivationGetRequest17
        /// </summary>
        public static async Task<ServiceProviderInCallServiceActivationGetResponse> ServiceProviderInCallServiceActivationGetRequestAsync(this OcipClient client, ServiceProviderInCallServiceActivationGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderInCallServiceActivationGetResponse;
        }
        /// <summary>
        /// Modifies the service provider's DTMF based in-call service activation trigger attributes.The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: ServiceProviderInCallServiceActivationModifyRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderInCallServiceActivationModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> ServiceProviderInCallServiceActivationModifyRequest(this OcipClient client, ServiceProviderInCallServiceActivationModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modifies the service provider's DTMF based in-call service activation trigger attributes.The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: ServiceProviderInCallServiceActivationModifyRequest17
        /// </summary>
        public static async Task<SuccessResponse> ServiceProviderInCallServiceActivationModifyRequestAsync(this OcipClient client, ServiceProviderInCallServiceActivationModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Requests the service provider's password rules setting applicable to
        /// Administrators (Group and Department) and Users.
        /// The response is either ServiceProviderPasswordRulesGetResponse13mp2 or ErrorResponse.
        /// Replaced By: ServiceProviderPasswordRulesGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderPasswordRulesGetRequest13mp2Async instead.")]
        public static async Task<ServiceProviderPasswordRulesGetResponse13mp2> ServiceProviderPasswordRulesGetRequest13mp2(this OcipClient client, ServiceProviderPasswordRulesGetRequest13mp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderPasswordRulesGetResponse13mp2;
        }

        /// <summary>
        /// Requests the service provider's password rules setting applicable to
        /// Administrators (Group and Department) and Users.
        /// The response is either ServiceProviderPasswordRulesGetResponse13mp2 or ErrorResponse.
        /// Replaced By: ServiceProviderPasswordRulesGetRequest16
        /// </summary>
        public static async Task<ServiceProviderPasswordRulesGetResponse13mp2> ServiceProviderPasswordRulesGetRequest13mp2Async(this OcipClient client, ServiceProviderPasswordRulesGetRequest13mp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderPasswordRulesGetResponse13mp2;
        }
        /// <summary>
        /// Request to modify the service provider's password rules settings
        /// setting applicable to Administrators (Group and Department) and Users.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: ServiceProviderPasswordRulesModifyRequest14sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderPasswordRulesModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> ServiceProviderPasswordRulesModifyRequest(this OcipClient client, ServiceProviderPasswordRulesModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify the service provider's password rules settings
        /// setting applicable to Administrators (Group and Department) and Users.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: ServiceProviderPasswordRulesModifyRequest14sp3
        /// </summary>
        public static async Task<SuccessResponse> ServiceProviderPasswordRulesModifyRequestAsync(this OcipClient client, ServiceProviderPasswordRulesModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Requests the service provider's passcode rules setting.
        /// The response is either ServiceProviderPortalPasscodeRulesGetResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderPortalPasscodeRulesGetRequestAsync instead.")]
        public static async Task<ServiceProviderPortalPasscodeRulesGetResponse> ServiceProviderPortalPasscodeRulesGetRequest(this OcipClient client, ServiceProviderPortalPasscodeRulesGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderPortalPasscodeRulesGetResponse;
        }

        /// <summary>
        /// Requests the service provider's passcode rules setting.
        /// The response is either ServiceProviderPortalPasscodeRulesGetResponse or ErrorResponse.
        /// </summary>
        public static async Task<ServiceProviderPortalPasscodeRulesGetResponse> ServiceProviderPortalPasscodeRulesGetRequestAsync(this OcipClient client, ServiceProviderPortalPasscodeRulesGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderPortalPasscodeRulesGetResponse;
        }
        /// <summary>
        /// Requests the details of a specified service pack migration task.
        /// The response is either ServiceProviderServicePackMigrationTaskGetResponse
        /// or ErrorResponse.
        /// Replaced By: ServiceProviderServicePackMigrationTaskGetRequest14sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderServicePackMigrationTaskGetRequestAsync instead.")]
        public static async Task<ServiceProviderServicePackMigrationTaskGetResponse> ServiceProviderServicePackMigrationTaskGetRequest(this OcipClient client, ServiceProviderServicePackMigrationTaskGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderServicePackMigrationTaskGetResponse;
        }

        /// <summary>
        /// Requests the details of a specified service pack migration task.
        /// The response is either ServiceProviderServicePackMigrationTaskGetResponse
        /// or ErrorResponse.
        /// Replaced By: ServiceProviderServicePackMigrationTaskGetRequest14sp4
        /// </summary>
        public static async Task<ServiceProviderServicePackMigrationTaskGetResponse> ServiceProviderServicePackMigrationTaskGetRequestAsync(this OcipClient client, ServiceProviderServicePackMigrationTaskGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderServicePackMigrationTaskGetResponse;
        }
        /// <summary>
        /// Get the maximum permissible active Trunk Group calls for the service provider.
        /// The response is either a ServiceProviderTrunkGroupGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderTrunkGroupGetRequestAsync instead.")]
        public static async Task<ServiceProviderTrunkGroupGetResponse> ServiceProviderTrunkGroupGetRequest(this OcipClient client, ServiceProviderTrunkGroupGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderTrunkGroupGetResponse;
        }

        /// <summary>
        /// Get the maximum permissible active Trunk Group calls for the service provider.
        /// The response is either a ServiceProviderTrunkGroupGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<ServiceProviderTrunkGroupGetResponse> ServiceProviderTrunkGroupGetRequestAsync(this OcipClient client, ServiceProviderTrunkGroupGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderTrunkGroupGetResponse;
        }
        /// <summary>
        /// Get the maximum and bursting maximum permissible active Trunk Group calls for the service provider.
        /// The response is either a ServiceProviderTrunkGroupGetResponse14sp1 or an ErrorResponse.
        /// 
        /// Deprecated by ServiceProviderTrunkGroupGetRequest23
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderTrunkGroupGetRequest14sp1Async instead.")]
        public static async Task<ServiceProviderTrunkGroupGetResponse14sp1> ServiceProviderTrunkGroupGetRequest14sp1(this OcipClient client, ServiceProviderTrunkGroupGetRequest14sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderTrunkGroupGetResponse14sp1;
        }

        /// <summary>
        /// Get the maximum and bursting maximum permissible active Trunk Group calls for the service provider.
        /// The response is either a ServiceProviderTrunkGroupGetResponse14sp1 or an ErrorResponse.
        /// 
        /// Deprecated by ServiceProviderTrunkGroupGetRequest23
        /// </summary>
        public static async Task<ServiceProviderTrunkGroupGetResponse14sp1> ServiceProviderTrunkGroupGetRequest14sp1Async(this OcipClient client, ServiceProviderTrunkGroupGetRequest14sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderTrunkGroupGetResponse14sp1;
        }
        /// <summary>
        /// Requests the service provider's voice portal passcode rules setting.
        /// The response is either ServiceProviderVoiceMessagingGroupGetPasscodeRulesResponse or ErrorResponse.
        /// Replaced By: ServiceProviderPortalPasscodeRulesGetRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderVoiceMessagingGroupGetPasscodeRulesRequestAsync instead.")]
        public static async Task<ServiceProviderVoiceMessagingGroupGetPasscodeRulesResponse> ServiceProviderVoiceMessagingGroupGetPasscodeRulesRequest(this OcipClient client, ServiceProviderVoiceMessagingGroupGetPasscodeRulesRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderVoiceMessagingGroupGetPasscodeRulesResponse;
        }

        /// <summary>
        /// Requests the service provider's voice portal passcode rules setting.
        /// The response is either ServiceProviderVoiceMessagingGroupGetPasscodeRulesResponse or ErrorResponse.
        /// Replaced By: ServiceProviderPortalPasscodeRulesGetRequest
        /// </summary>
        public static async Task<ServiceProviderVoiceMessagingGroupGetPasscodeRulesResponse> ServiceProviderVoiceMessagingGroupGetPasscodeRulesRequestAsync(this OcipClient client, ServiceProviderVoiceMessagingGroupGetPasscodeRulesRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderVoiceMessagingGroupGetPasscodeRulesResponse;
        }
        /// <summary>
        /// Get the service provider's voice portal branding settings.
        /// The response is either a ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingResponse or an ErrorResponse.
        /// Replaced By: ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingRequestAsync instead.")]
        public static async Task<ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingResponse> ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingRequest(this OcipClient client, ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingResponse;
        }

        /// <summary>
        /// Get the service provider's voice portal branding settings.
        /// The response is either a ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingResponse or an ErrorResponse.
        /// Replaced By: ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingRequest16
        /// </summary>
        public static async Task<ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingResponse> ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingRequestAsync(this OcipClient client, ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as ServiceProviderVoiceMessagingGroupGetVoicePortalBrandingResponse;
        }
        /// <summary>
        /// Request to modify the service provider's voice portal passcode rules setting.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: ServiceProviderPortalPasscodeRulesModifyRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderVoiceMessagingGroupModifyPasscodeRulesRequestAsync instead.")]
        public static async Task<SuccessResponse> ServiceProviderVoiceMessagingGroupModifyPasscodeRulesRequest(this OcipClient client, ServiceProviderVoiceMessagingGroupModifyPasscodeRulesRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify the service provider's voice portal passcode rules setting.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: ServiceProviderPortalPasscodeRulesModifyRequest
        /// </summary>
        public static async Task<SuccessResponse> ServiceProviderVoiceMessagingGroupModifyPasscodeRulesRequestAsync(this OcipClient client, ServiceProviderVoiceMessagingGroupModifyPasscodeRulesRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify the service provider's voice portal branding settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: ServiceProviderVoiceMessagingGroupModifyVoicePortalBrandingRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use ServiceProviderVoiceMessagingGroupModifyVoicePortalBrandingRequestAsync instead.")]
        public static async Task<SuccessResponse> ServiceProviderVoiceMessagingGroupModifyVoicePortalBrandingRequest(this OcipClient client, ServiceProviderVoiceMessagingGroupModifyVoicePortalBrandingRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the service provider's voice portal branding settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: ServiceProviderVoiceMessagingGroupModifyVoicePortalBrandingRequest16
        /// </summary>
        public static async Task<SuccessResponse> ServiceProviderVoiceMessagingGroupModifyVoicePortalBrandingRequestAsync(this OcipClient client, ServiceProviderVoiceMessagingGroupModifyVoicePortalBrandingRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get the list of device files managed by the Device Management System, on a per-device profile basis.
        /// The response is either SystemAccessDeviceFileGetListResponse or ErrorResponse.
        /// Replaced By: SystemAccessDeviceFileGetListRequest14sp8
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemAccessDeviceFileGetListRequestAsync instead.")]
        public static async Task<SystemAccessDeviceFileGetListResponse> SystemAccessDeviceFileGetListRequest(this OcipClient client, SystemAccessDeviceFileGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemAccessDeviceFileGetListResponse;
        }

        /// <summary>
        /// Request to get the list of device files managed by the Device Management System, on a per-device profile basis.
        /// The response is either SystemAccessDeviceFileGetListResponse or ErrorResponse.
        /// Replaced By: SystemAccessDeviceFileGetListRequest14sp8
        /// </summary>
        public static async Task<SystemAccessDeviceFileGetListResponse> SystemAccessDeviceFileGetListRequestAsync(this OcipClient client, SystemAccessDeviceFileGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemAccessDeviceFileGetListResponse;
        }
        /// <summary>
        /// Request to get a device profile file.
        /// The response is either SystemAccessDeviceFileGetResponse or ErrorResponse.
        /// Replaced By: SystemAccessDeviceFileGetRequest14sp8
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemAccessDeviceFileGetRequestAsync instead.")]
        public static async Task<SystemAccessDeviceFileGetResponse> SystemAccessDeviceFileGetRequest(this OcipClient client, SystemAccessDeviceFileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemAccessDeviceFileGetResponse;
        }

        /// <summary>
        /// Request to get a device profile file.
        /// The response is either SystemAccessDeviceFileGetResponse or ErrorResponse.
        /// Replaced By: SystemAccessDeviceFileGetRequest14sp8
        /// </summary>
        public static async Task<SystemAccessDeviceFileGetResponse> SystemAccessDeviceFileGetRequestAsync(this OcipClient client, SystemAccessDeviceFileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemAccessDeviceFileGetResponse;
        }
        /// <summary>
        /// Request to get a device profile file.
        /// The response is either SystemAccessDeviceFileGetResponse14sp8 or ErrorResponse.
        /// Replaced by: SystemAccessDeviceFileGetRequest16sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemAccessDeviceFileGetRequest14sp8Async instead.")]
        public static async Task<SystemAccessDeviceFileGetResponse14sp8> SystemAccessDeviceFileGetRequest14sp8(this OcipClient client, SystemAccessDeviceFileGetRequest14sp8 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemAccessDeviceFileGetResponse14sp8;
        }

        /// <summary>
        /// Request to get a device profile file.
        /// The response is either SystemAccessDeviceFileGetResponse14sp8 or ErrorResponse.
        /// Replaced by: SystemAccessDeviceFileGetRequest16sp1
        /// </summary>
        public static async Task<SystemAccessDeviceFileGetResponse14sp8> SystemAccessDeviceFileGetRequest14sp8Async(this OcipClient client, SystemAccessDeviceFileGetRequest14sp8 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemAccessDeviceFileGetResponse14sp8;
        }
        /// <summary>
        /// Request to get a device profile file.
        /// The response is either SystemAccessDeviceFileGetResponse16sp1 or ErrorResponse.
        /// 
        /// Replaced by: SystemAccessDeviceFileGetRequest20
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemAccessDeviceFileGetRequest16sp1Async instead.")]
        public static async Task<SystemAccessDeviceFileGetResponse16sp1> SystemAccessDeviceFileGetRequest16sp1(this OcipClient client, SystemAccessDeviceFileGetRequest16sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemAccessDeviceFileGetResponse16sp1;
        }

        /// <summary>
        /// Request to get a device profile file.
        /// The response is either SystemAccessDeviceFileGetResponse16sp1 or ErrorResponse.
        /// 
        /// Replaced by: SystemAccessDeviceFileGetRequest20
        /// </summary>
        public static async Task<SystemAccessDeviceFileGetResponse16sp1> SystemAccessDeviceFileGetRequest16sp1Async(this OcipClient client, SystemAccessDeviceFileGetRequest16sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemAccessDeviceFileGetResponse16sp1;
        }
        /// <summary>
        /// Request to modify a specified system access device file.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: SystemAccessDeviceFileModifyRequest14sp8
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemAccessDeviceFileModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemAccessDeviceFileModifyRequest(this OcipClient client, SystemAccessDeviceFileModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a specified system access device file.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: SystemAccessDeviceFileModifyRequest14sp8
        /// </summary>
        public static async Task<SuccessResponse> SystemAccessDeviceFileModifyRequestAsync(this OcipClient client, SystemAccessDeviceFileModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Requests the configuration of a specified system access device.
        /// The response is either SystemAccessDeviceGetResponse or ErrorResponse.
        /// Replaced By: SystemAccessDeviceGetRequest14sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemAccessDeviceGetRequestAsync instead.")]
        public static async Task<SystemAccessDeviceGetResponse> SystemAccessDeviceGetRequest(this OcipClient client, SystemAccessDeviceGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemAccessDeviceGetResponse;
        }

        /// <summary>
        /// Requests the configuration of a specified system access device.
        /// The response is either SystemAccessDeviceGetResponse or ErrorResponse.
        /// Replaced By: SystemAccessDeviceGetRequest14sp3
        /// </summary>
        public static async Task<SystemAccessDeviceGetResponse> SystemAccessDeviceGetRequestAsync(this OcipClient client, SystemAccessDeviceGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemAccessDeviceGetResponse;
        }
        /// <summary>
        /// Requests the configuration of a specified system access device.
        /// The response is either SystemAccessDeviceGetResponse14sp3 or ErrorResponse.
        /// Replaced By: SystemAccessDeviceGetRequest14sp6
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemAccessDeviceGetRequest14sp3Async instead.")]
        public static async Task<SystemAccessDeviceGetResponse14sp3> SystemAccessDeviceGetRequest14sp3(this OcipClient client, SystemAccessDeviceGetRequest14sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemAccessDeviceGetResponse14sp3;
        }

        /// <summary>
        /// Requests the configuration of a specified system access device.
        /// The response is either SystemAccessDeviceGetResponse14sp3 or ErrorResponse.
        /// Replaced By: SystemAccessDeviceGetRequest14sp6
        /// </summary>
        public static async Task<SystemAccessDeviceGetResponse14sp3> SystemAccessDeviceGetRequest14sp3Async(this OcipClient client, SystemAccessDeviceGetRequest14sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemAccessDeviceGetResponse14sp3;
        }
        /// <summary>
        /// Requests the configuration of a specified system access device.
        /// The response is either SystemAccessDeviceGetResponse14sp6 or ErrorResponse.
        /// Replaced by: SystemAccessDeviceGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemAccessDeviceGetRequest14sp6Async instead.")]
        public static async Task<SystemAccessDeviceGetResponse14sp6> SystemAccessDeviceGetRequest14sp6(this OcipClient client, SystemAccessDeviceGetRequest14sp6 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemAccessDeviceGetResponse14sp6;
        }

        /// <summary>
        /// Requests the configuration of a specified system access device.
        /// The response is either SystemAccessDeviceGetResponse14sp6 or ErrorResponse.
        /// Replaced by: SystemAccessDeviceGetRequest16
        /// </summary>
        public static async Task<SystemAccessDeviceGetResponse14sp6> SystemAccessDeviceGetRequest14sp6Async(this OcipClient client, SystemAccessDeviceGetRequest14sp6 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemAccessDeviceGetResponse14sp6;
        }
        /// <summary>
        /// Requests the configuration of a specified system access device.
        /// The response is either SystemAccessDeviceGetResponse16 or ErrorResponse.
        /// 
        /// Replaced by: SystemAccessDeviceGetRequest19
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemAccessDeviceGetRequest16Async instead.")]
        public static async Task<SystemAccessDeviceGetResponse16> SystemAccessDeviceGetRequest16(this OcipClient client, SystemAccessDeviceGetRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemAccessDeviceGetResponse16;
        }

        /// <summary>
        /// Requests the configuration of a specified system access device.
        /// The response is either SystemAccessDeviceGetResponse16 or ErrorResponse.
        /// 
        /// Replaced by: SystemAccessDeviceGetRequest19
        /// </summary>
        public static async Task<SystemAccessDeviceGetResponse16> SystemAccessDeviceGetRequest16Async(this OcipClient client, SystemAccessDeviceGetRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemAccessDeviceGetResponse16;
        }
        /// <summary>
        /// Request to get the list of Advice of Charge system parameters.
        /// The response is either SystemAdviceOfChargeGetResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemAdviceOfChargeGetRequest19sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemAdviceOfChargeGetRequestAsync instead.")]
        public static async Task<SystemAdviceOfChargeGetResponse> SystemAdviceOfChargeGetRequest(this OcipClient client, SystemAdviceOfChargeGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemAdviceOfChargeGetResponse;
        }

        /// <summary>
        /// Request to get the list of Advice of Charge system parameters.
        /// The response is either SystemAdviceOfChargeGetResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemAdviceOfChargeGetRequest19sp1
        /// </summary>
        public static async Task<SystemAdviceOfChargeGetResponse> SystemAdviceOfChargeGetRequestAsync(this OcipClient client, SystemAdviceOfChargeGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemAdviceOfChargeGetResponse;
        }
        /// <summary>
        /// Request to modify Advice of Charge system parameters.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemAdviceOfChargeModifyRequest19sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemAdviceOfChargeModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemAdviceOfChargeModifyRequest(this OcipClient client, SystemAdviceOfChargeModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify Advice of Charge system parameters.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemAdviceOfChargeModifyRequest19sp1
        /// </summary>
        public static async Task<SuccessResponse> SystemAdviceOfChargeModifyRequestAsync(this OcipClient client, SystemAdviceOfChargeModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get the list of Application Server Registration system parameters.
        /// The response is either SystemASRParametersGetResponse or ErrorResponse.
        /// Replaced By: SystemASRParametersGetRequest14sp5
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemASRParametersGetRequestAsync instead.")]
        public static async Task<SystemASRParametersGetResponse> SystemASRParametersGetRequest(this OcipClient client, SystemASRParametersGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemASRParametersGetResponse;
        }

        /// <summary>
        /// Request to get the list of Application Server Registration system parameters.
        /// The response is either SystemASRParametersGetResponse or ErrorResponse.
        /// Replaced By: SystemASRParametersGetRequest14sp5
        /// </summary>
        public static async Task<SystemASRParametersGetResponse> SystemASRParametersGetRequestAsync(this OcipClient client, SystemASRParametersGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemASRParametersGetResponse;
        }
        /// <summary>
        /// Request to get the list of Application Server Registration system parameters.
        /// The response is either SystemASRParametersGetResponse14sp5 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemASRParametersGetRequest14sp5Async instead.")]
        public static async Task<SystemASRParametersGetResponse14sp5> SystemASRParametersGetRequest14sp5(this OcipClient client, SystemASRParametersGetRequest14sp5 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemASRParametersGetResponse14sp5;
        }

        /// <summary>
        /// Request to get the list of Application Server Registration system parameters.
        /// The response is either SystemASRParametersGetResponse14sp5 or ErrorResponse.
        /// </summary>
        public static async Task<SystemASRParametersGetResponse14sp5> SystemASRParametersGetRequest14sp5Async(this OcipClient client, SystemASRParametersGetRequest14sp5 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemASRParametersGetResponse14sp5;
        }
        /// <summary>
        /// Request to modify Application Server Registration system parameters.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemASRParametersModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemASRParametersModifyRequest(this OcipClient client, SystemASRParametersModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify Application Server Registration system parameters.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemASRParametersModifyRequestAsync(this OcipClient client, SystemASRParametersModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request the system's automatic callback attributes.
        /// The response is either a SystemAutomaticCallbackGetResponse or an ErrorResponse.
        /// Replaced By: SystemAutomaticCallbackGetRequest15
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemAutomaticCallbackGetRequestAsync instead.")]
        public static async Task<SystemAutomaticCallbackGetResponse> SystemAutomaticCallbackGetRequest(this OcipClient client, SystemAutomaticCallbackGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemAutomaticCallbackGetResponse;
        }

        /// <summary>
        /// Request the system's automatic callback attributes.
        /// The response is either a SystemAutomaticCallbackGetResponse or an ErrorResponse.
        /// Replaced By: SystemAutomaticCallbackGetRequest15
        /// </summary>
        public static async Task<SystemAutomaticCallbackGetResponse> SystemAutomaticCallbackGetRequestAsync(this OcipClient client, SystemAutomaticCallbackGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemAutomaticCallbackGetResponse;
        }
        /// <summary>
        /// Request the system's automatic callback attributes.
        /// The response is either a SystemAutomaticCallbackGetResponse15 or an ErrorResponse.
        /// Replaced By: SystemAutomaticCallbackGetRequest15sp2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemAutomaticCallbackGetRequest15Async instead.")]
        public static async Task<SystemAutomaticCallbackGetResponse15> SystemAutomaticCallbackGetRequest15(this OcipClient client, SystemAutomaticCallbackGetRequest15 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemAutomaticCallbackGetResponse15;
        }

        /// <summary>
        /// Request the system's automatic callback attributes.
        /// The response is either a SystemAutomaticCallbackGetResponse15 or an ErrorResponse.
        /// Replaced By: SystemAutomaticCallbackGetRequest15sp2
        /// </summary>
        public static async Task<SystemAutomaticCallbackGetResponse15> SystemAutomaticCallbackGetRequest15Async(this OcipClient client, SystemAutomaticCallbackGetRequest15 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemAutomaticCallbackGetResponse15;
        }
        /// <summary>
        /// Request the system's automatic callback attributes.
        /// The response is either a SystemAutomaticCallbackGetResponse15sp2 or an ErrorResponse.
        /// Replaced by: SystemAutomaticCallbackGetRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemAutomaticCallbackGetRequest15sp2Async instead.")]
        public static async Task<SystemAutomaticCallbackGetResponse15sp2> SystemAutomaticCallbackGetRequest15sp2(this OcipClient client, SystemAutomaticCallbackGetRequest15sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemAutomaticCallbackGetResponse15sp2;
        }

        /// <summary>
        /// Request the system's automatic callback attributes.
        /// The response is either a SystemAutomaticCallbackGetResponse15sp2 or an ErrorResponse.
        /// Replaced by: SystemAutomaticCallbackGetRequest17
        /// </summary>
        public static async Task<SystemAutomaticCallbackGetResponse15sp2> SystemAutomaticCallbackGetRequest15sp2Async(this OcipClient client, SystemAutomaticCallbackGetRequest15sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemAutomaticCallbackGetResponse15sp2;
        }
        /// <summary>
        /// Modifies the system's automatic callback attributes.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: SystemAutomaticCallbackModifyRequest15
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemAutomaticCallbackModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemAutomaticCallbackModifyRequest(this OcipClient client, SystemAutomaticCallbackModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modifies the system's automatic callback attributes.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: SystemAutomaticCallbackModifyRequest15
        /// </summary>
        public static async Task<SuccessResponse> SystemAutomaticCallbackModifyRequestAsync(this OcipClient client, SystemAutomaticCallbackModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get system Automatic Collect Call service settings.
        /// The response is either SystemAutomaticCollectCallGetResponse or ErrorResponse.
        /// 
        /// Replaced by SystemAutomaticCollectCallGetRequest in AS mode.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemAutomaticCollectCallGetRequestAsync instead.")]
        public static async Task<SystemAutomaticCollectCallGetResponse> SystemAutomaticCollectCallGetRequest(this OcipClient client, SystemAutomaticCollectCallGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemAutomaticCollectCallGetResponse;
        }

        /// <summary>
        /// Get system Automatic Collect Call service settings.
        /// The response is either SystemAutomaticCollectCallGetResponse or ErrorResponse.
        /// 
        /// Replaced by SystemAutomaticCollectCallGetRequest in AS mode.
        /// </summary>
        public static async Task<SystemAutomaticCollectCallGetResponse> SystemAutomaticCollectCallGetRequestAsync(this OcipClient client, SystemAutomaticCollectCallGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemAutomaticCollectCallGetResponse;
        }
        /// <summary>
        /// Add an OCI entry to the Broadworks Common Communication Transport (BCCT) protocol to interface mapping table.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBCCTAddOCIInterfaceAddressRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemBCCTAddOCIInterfaceAddressRequest(this OcipClient client, SystemBCCTAddOCIInterfaceAddressRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add an OCI entry to the Broadworks Common Communication Transport (BCCT) protocol to interface mapping table.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemBCCTAddOCIInterfaceAddressRequestAsync(this OcipClient client, SystemBCCTAddOCIInterfaceAddressRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Delete an OCI entry in the Broadworks Common Communication Transport (BCCT) protocol to interface mapping table.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBCCTDeleteOCIInterfaceAddressRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemBCCTDeleteOCIInterfaceAddressRequest(this OcipClient client, SystemBCCTDeleteOCIInterfaceAddressRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Delete an OCI entry in the Broadworks Common Communication Transport (BCCT) protocol to interface mapping table.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemBCCTDeleteOCIInterfaceAddressRequestAsync(this OcipClient client, SystemBCCTDeleteOCIInterfaceAddressRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the OCI entries from the Broadworks Common Communication Transport (BCCT) protocol to interface mapping list.
        /// The response is SystemBCCTGetOCIInterfaceAddressListResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBCCTGetOCIInterfaceAddressListRequestAsync instead.")]
        public static async Task<SystemBCCTGetOCIInterfaceAddressListResponse> SystemBCCTGetOCIInterfaceAddressListRequest(this OcipClient client, SystemBCCTGetOCIInterfaceAddressListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemBCCTGetOCIInterfaceAddressListResponse;
        }

        /// <summary>
        /// Get the OCI entries from the Broadworks Common Communication Transport (BCCT) protocol to interface mapping list.
        /// The response is SystemBCCTGetOCIInterfaceAddressListResponse or ErrorResponse.
        /// </summary>
        public static async Task<SystemBCCTGetOCIInterfaceAddressListResponse> SystemBCCTGetOCIInterfaceAddressListRequestAsync(this OcipClient client, SystemBCCTGetOCIInterfaceAddressListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemBCCTGetOCIInterfaceAddressListResponse;
        }
        /// <summary>
        /// Get the broadworks mobility system parameters.
        /// The response is either a SystemBroadWorksMobilityGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemBroadWorksMobilityGetRequest17sp4.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBroadWorksMobilityGetRequestAsync instead.")]
        public static async Task<SystemBroadWorksMobilityGetResponse> SystemBroadWorksMobilityGetRequest(this OcipClient client, SystemBroadWorksMobilityGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemBroadWorksMobilityGetResponse;
        }

        /// <summary>
        /// Get the broadworks mobility system parameters.
        /// The response is either a SystemBroadWorksMobilityGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemBroadWorksMobilityGetRequest17sp4.
        /// </summary>
        public static async Task<SystemBroadWorksMobilityGetResponse> SystemBroadWorksMobilityGetRequestAsync(this OcipClient client, SystemBroadWorksMobilityGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemBroadWorksMobilityGetResponse;
        }
        /// <summary>
        /// Get the broadworks mobility system parameters.
        /// The response is either a SystemBroadWorksMobilityGetResponse17sp4 or an ErrorResponse.
        /// Replaced by: SystemBroadWorksMobilityGetRequest19sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBroadWorksMobilityGetRequest17sp4Async instead.")]
        public static async Task<SystemBroadWorksMobilityGetResponse17sp4> SystemBroadWorksMobilityGetRequest17sp4(this OcipClient client, SystemBroadWorksMobilityGetRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemBroadWorksMobilityGetResponse17sp4;
        }

        /// <summary>
        /// Get the broadworks mobility system parameters.
        /// The response is either a SystemBroadWorksMobilityGetResponse17sp4 or an ErrorResponse.
        /// Replaced by: SystemBroadWorksMobilityGetRequest19sp1
        /// </summary>
        public static async Task<SystemBroadWorksMobilityGetResponse17sp4> SystemBroadWorksMobilityGetRequest17sp4Async(this OcipClient client, SystemBroadWorksMobilityGetRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemBroadWorksMobilityGetResponse17sp4;
        }
        /// <summary>
        /// Get the broadworks mobility system parameters.
        /// The response is either a SystemBroadWorksMobilityGetResponse19sp1 or an ErrorResponse.
        /// Replaced by SystemBroadWorksMobilityGetRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBroadWorksMobilityGetRequest19sp1Async instead.")]
        public static async Task<SystemBroadWorksMobilityGetResponse19sp1> SystemBroadWorksMobilityGetRequest19sp1(this OcipClient client, SystemBroadWorksMobilityGetRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemBroadWorksMobilityGetResponse19sp1;
        }

        /// <summary>
        /// Get the broadworks mobility system parameters.
        /// The response is either a SystemBroadWorksMobilityGetResponse19sp1 or an ErrorResponse.
        /// Replaced by SystemBroadWorksMobilityGetRequest21
        /// </summary>
        public static async Task<SystemBroadWorksMobilityGetResponse19sp1> SystemBroadWorksMobilityGetRequest19sp1Async(this OcipClient client, SystemBroadWorksMobilityGetRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemBroadWorksMobilityGetResponse19sp1;
        }
        /// <summary>
        /// Get the broadworks mobility system parameters.
        /// The response is either a SystemBroadWorksMobilityGetResponse21 or an ErrorResponse.
        /// 
        /// Replaced by: SystemBroadWorksMobilityGetRequest22 in AS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBroadWorksMobilityGetRequest21Async instead.")]
        public static async Task<SystemBroadWorksMobilityGetResponse21> SystemBroadWorksMobilityGetRequest21(this OcipClient client, SystemBroadWorksMobilityGetRequest21 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemBroadWorksMobilityGetResponse21;
        }

        /// <summary>
        /// Get the broadworks mobility system parameters.
        /// The response is either a SystemBroadWorksMobilityGetResponse21 or an ErrorResponse.
        /// 
        /// Replaced by: SystemBroadWorksMobilityGetRequest22 in AS data mode
        /// </summary>
        public static async Task<SystemBroadWorksMobilityGetResponse21> SystemBroadWorksMobilityGetRequest21Async(this OcipClient client, SystemBroadWorksMobilityGetRequest21 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemBroadWorksMobilityGetResponse21;
        }
        /// <summary>
        /// Get the broadworks mobility system parameters.
        /// The response is either a SystemBroadWorksMobilityGetResponse21sp1 or an ErrorResponse.
        /// 
        /// Replaced by SystemBroadWorksMobilityGetRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBroadWorksMobilityGetRequest21sp1Async instead.")]
        public static async Task<SystemBroadWorksMobilityGetResponse21sp1> SystemBroadWorksMobilityGetRequest21sp1(this OcipClient client, SystemBroadWorksMobilityGetRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemBroadWorksMobilityGetResponse21sp1;
        }

        /// <summary>
        /// Get the broadworks mobility system parameters.
        /// The response is either a SystemBroadWorksMobilityGetResponse21sp1 or an ErrorResponse.
        /// 
        /// Replaced by SystemBroadWorksMobilityGetRequest22V2.
        /// </summary>
        public static async Task<SystemBroadWorksMobilityGetResponse21sp1> SystemBroadWorksMobilityGetRequest21sp1Async(this OcipClient client, SystemBroadWorksMobilityGetRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemBroadWorksMobilityGetResponse21sp1;
        }
        /// <summary>
        /// Get the broadworks mobility system parameters.
        /// The response is either a SystemBroadWorksMobilityGetResponse21sp1V2 or an ErrorResponse.
        /// 
        /// Replaced by SystemBroadWorksMobilityGetRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBroadWorksMobilityGetRequest21sp1V2Async instead.")]
        public static async Task<SystemBroadWorksMobilityGetResponse21sp1V2> SystemBroadWorksMobilityGetRequest21sp1V2(this OcipClient client, SystemBroadWorksMobilityGetRequest21sp1V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemBroadWorksMobilityGetResponse21sp1V2;
        }

        /// <summary>
        /// Get the broadworks mobility system parameters.
        /// The response is either a SystemBroadWorksMobilityGetResponse21sp1V2 or an ErrorResponse.
        /// 
        /// Replaced by SystemBroadWorksMobilityGetRequest22V2.
        /// </summary>
        public static async Task<SystemBroadWorksMobilityGetResponse21sp1V2> SystemBroadWorksMobilityGetRequest21sp1V2Async(this OcipClient client, SystemBroadWorksMobilityGetRequest21sp1V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemBroadWorksMobilityGetResponse21sp1V2;
        }
        /// <summary>
        /// Get the broadworks mobility system parameters.
        /// The response is either a SystemBroadWorksMobilityGetResponse22 or an ErrorResponse.
        /// 
        /// Replaced by SystemBroadWorksMobilityGetRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBroadWorksMobilityGetRequest22Async instead.")]
        public static async Task<SystemBroadWorksMobilityGetResponse22> SystemBroadWorksMobilityGetRequest22(this OcipClient client, SystemBroadWorksMobilityGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemBroadWorksMobilityGetResponse22;
        }

        /// <summary>
        /// Get the broadworks mobility system parameters.
        /// The response is either a SystemBroadWorksMobilityGetResponse22 or an ErrorResponse.
        /// 
        /// Replaced by SystemBroadWorksMobilityGetRequest22V2.
        /// </summary>
        public static async Task<SystemBroadWorksMobilityGetResponse22> SystemBroadWorksMobilityGetRequest22Async(this OcipClient client, SystemBroadWorksMobilityGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemBroadWorksMobilityGetResponse22;
        }
        /// <summary>
        /// Get the broadworks mobility system parameters.
        /// The response is either a SystemBroadWorksMobilityGetResponse22V2 or an ErrorResponse.
        /// 
        /// Replaced by SystemBroadWorksMobilityGetRequest22V3.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBroadWorksMobilityGetRequest22V2Async instead.")]
        public static async Task<SystemBroadWorksMobilityGetResponse22V2> SystemBroadWorksMobilityGetRequest22V2(this OcipClient client, SystemBroadWorksMobilityGetRequest22V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemBroadWorksMobilityGetResponse22V2;
        }

        /// <summary>
        /// Get the broadworks mobility system parameters.
        /// The response is either a SystemBroadWorksMobilityGetResponse22V2 or an ErrorResponse.
        /// 
        /// Replaced by SystemBroadWorksMobilityGetRequest22V3.
        /// </summary>
        public static async Task<SystemBroadWorksMobilityGetResponse22V2> SystemBroadWorksMobilityGetRequest22V2Async(this OcipClient client, SystemBroadWorksMobilityGetRequest22V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemBroadWorksMobilityGetResponse22V2;
        }
        /// <summary>
        /// Modify the BroadWorks Mobility system parameters.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemBroadWorksMobilityModifyRequest17sp4.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBroadWorksMobilityModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemBroadWorksMobilityModifyRequest(this OcipClient client, SystemBroadWorksMobilityModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the BroadWorks Mobility system parameters.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemBroadWorksMobilityModifyRequest17sp4.
        /// </summary>
        public static async Task<SuccessResponse> SystemBroadWorksMobilityModifyRequestAsync(this OcipClient client, SystemBroadWorksMobilityModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify the BroadWorks Mobility system parameters.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by SystemBroadWorksMobilityModifyRequest21.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBroadWorksMobilityModifyRequest17sp4Async instead.")]
        public static async Task<SuccessResponse> SystemBroadWorksMobilityModifyRequest17sp4(this OcipClient client, SystemBroadWorksMobilityModifyRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the BroadWorks Mobility system parameters.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by SystemBroadWorksMobilityModifyRequest21.
        /// </summary>
        public static async Task<SuccessResponse> SystemBroadWorksMobilityModifyRequest17sp4Async(this OcipClient client, SystemBroadWorksMobilityModifyRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a system service access code.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by SystemBroadWorksMobilityServiceAccessCodeAddRequest21.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBroadWorksMobilityServiceAccessCodeAddRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemBroadWorksMobilityServiceAccessCodeAddRequest(this OcipClient client, SystemBroadWorksMobilityServiceAccessCodeAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a system service access code.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by SystemBroadWorksMobilityServiceAccessCodeAddRequest21.
        /// </summary>
        public static async Task<SuccessResponse> SystemBroadWorksMobilityServiceAccessCodeAddRequestAsync(this OcipClient client, SystemBroadWorksMobilityServiceAccessCodeAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Delete a system service access code.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by SystemBroadWorksMobilityServiceAccessCodeDeleteRequest21.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBroadWorksMobilityServiceAccessCodeDeleteRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemBroadWorksMobilityServiceAccessCodeDeleteRequest(this OcipClient client, SystemBroadWorksMobilityServiceAccessCodeDeleteRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Delete a system service access code.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by SystemBroadWorksMobilityServiceAccessCodeDeleteRequest21.
        /// </summary>
        public static async Task<SuccessResponse> SystemBroadWorksMobilityServiceAccessCodeDeleteRequestAsync(this OcipClient client, SystemBroadWorksMobilityServiceAccessCodeDeleteRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a list of system service access codes.
        /// The response is either SystemBroadWorksMobilityServiceAccessCodeGetListResponse or ErrorResponse.
        /// Replaced by SystemBroadWorksMobilityServiceAccessCodeGetListRequest21.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBroadWorksMobilityServiceAccessCodeGetListRequestAsync instead.")]
        public static async Task<SystemBroadWorksMobilityServiceAccessCodeGetListResponse> SystemBroadWorksMobilityServiceAccessCodeGetListRequest(this OcipClient client, SystemBroadWorksMobilityServiceAccessCodeGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemBroadWorksMobilityServiceAccessCodeGetListResponse;
        }

        /// <summary>
        /// Get a list of system service access codes.
        /// The response is either SystemBroadWorksMobilityServiceAccessCodeGetListResponse or ErrorResponse.
        /// Replaced by SystemBroadWorksMobilityServiceAccessCodeGetListRequest21.
        /// </summary>
        public static async Task<SystemBroadWorksMobilityServiceAccessCodeGetListResponse> SystemBroadWorksMobilityServiceAccessCodeGetListRequestAsync(this OcipClient client, SystemBroadWorksMobilityServiceAccessCodeGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemBroadWorksMobilityServiceAccessCodeGetListResponse;
        }
        /// <summary>
        /// Modify a system service access code.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by SystemBroadWorksMobilityServiceAccessCodeModifyRequest21.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBroadWorksMobilityServiceAccessCodeModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemBroadWorksMobilityServiceAccessCodeModifyRequest(this OcipClient client, SystemBroadWorksMobilityServiceAccessCodeModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a system service access code.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by SystemBroadWorksMobilityServiceAccessCodeModifyRequest21.
        /// </summary>
        public static async Task<SuccessResponse> SystemBroadWorksMobilityServiceAccessCodeModifyRequestAsync(this OcipClient client, SystemBroadWorksMobilityServiceAccessCodeModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request the system level data associated with the Busy Lamp
        /// Field service. The response is either a SystemBusyLampFieldGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBusyLampFieldGetRequestAsync instead.")]
        public static async Task<SystemBusyLampFieldGetResponse> SystemBusyLampFieldGetRequest(this OcipClient client, SystemBusyLampFieldGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemBusyLampFieldGetResponse;
        }

        /// <summary>
        /// Request the system level data associated with the Busy Lamp
        /// Field service. The response is either a SystemBusyLampFieldGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SystemBusyLampFieldGetResponse> SystemBusyLampFieldGetRequestAsync(this OcipClient client, SystemBusyLampFieldGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemBusyLampFieldGetResponse;
        }
        /// <summary>
        /// Requests the list of System Diameter base parameters.
        /// The response is either SystemBwDiameterBaseDataGetResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBwDiameterBaseDataGetRequestAsync instead.")]
        public static async Task<SystemBwDiameterBaseDataGetResponse> SystemBwDiameterBaseDataGetRequest(this OcipClient client, SystemBwDiameterBaseDataGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemBwDiameterBaseDataGetResponse;
        }

        /// <summary>
        /// Requests the list of System Diameter base parameters.
        /// The response is either SystemBwDiameterBaseDataGetResponse or ErrorResponse.
        /// </summary>
        public static async Task<SystemBwDiameterBaseDataGetResponse> SystemBwDiameterBaseDataGetRequestAsync(this OcipClient client, SystemBwDiameterBaseDataGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemBwDiameterBaseDataGetResponse;
        }
        /// <summary>
        /// Requests the list of System Diameter base parameters.
        /// The response is either SystemBwDiameterBaseDataGetResponse17sp3 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBwDiameterBaseDataGetRequest17sp3Async instead.")]
        public static async Task<SystemBwDiameterBaseDataGetResponse17sp3> SystemBwDiameterBaseDataGetRequest17sp3(this OcipClient client, SystemBwDiameterBaseDataGetRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemBwDiameterBaseDataGetResponse17sp3;
        }

        /// <summary>
        /// Requests the list of System Diameter base parameters.
        /// The response is either SystemBwDiameterBaseDataGetResponse17sp3 or ErrorResponse.
        /// </summary>
        public static async Task<SystemBwDiameterBaseDataGetResponse17sp3> SystemBwDiameterBaseDataGetRequest17sp3Async(this OcipClient client, SystemBwDiameterBaseDataGetRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemBwDiameterBaseDataGetResponse17sp3;
        }
        /// <summary>
        /// Add a static entry in the Diameter Peer Table.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemBwDiameterPeerAddRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemBwDiameterPeerAddRequest(this OcipClient client, SystemBwDiameterPeerAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a static entry in the Diameter Peer Table.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemBwDiameterPeerAddRequestAsync(this OcipClient client, SystemBwDiameterPeerAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get the system settings for the call center enhanced reporting scheduling tasks.
        /// The response is either a SystemCallCenterEnhancedReportingScheduledTaskParametersGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallCenterEnhancedReportingScheduledTaskParametersGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallCenterEnhancedReportingScheduledTaskParametersGetRequestAsync instead.")]
        public static async Task<SystemCallCenterEnhancedReportingScheduledTaskParametersGetResponse> SystemCallCenterEnhancedReportingScheduledTaskParametersGetRequest(this OcipClient client, SystemCallCenterEnhancedReportingScheduledTaskParametersGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallCenterEnhancedReportingScheduledTaskParametersGetResponse;
        }

        /// <summary>
        /// Request to get the system settings for the call center enhanced reporting scheduling tasks.
        /// The response is either a SystemCallCenterEnhancedReportingScheduledTaskParametersGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallCenterEnhancedReportingScheduledTaskParametersGetRequest22
        /// </summary>
        public static async Task<SystemCallCenterEnhancedReportingScheduledTaskParametersGetResponse> SystemCallCenterEnhancedReportingScheduledTaskParametersGetRequestAsync(this OcipClient client, SystemCallCenterEnhancedReportingScheduledTaskParametersGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallCenterEnhancedReportingScheduledTaskParametersGetResponse;
        }
        /// <summary>
        /// Request the system level data associated with Call Center.
        /// The response is either a SystemCallCenterGetResponse or an
        /// ErrorResponse.
        /// Replaced By: SystemCallCenterGetRequest14sp9
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallCenterGetRequestAsync instead.")]
        public static async Task<SystemCallCenterGetResponse> SystemCallCenterGetRequest(this OcipClient client, SystemCallCenterGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallCenterGetResponse;
        }

        /// <summary>
        /// Request the system level data associated with Call Center.
        /// The response is either a SystemCallCenterGetResponse or an
        /// ErrorResponse.
        /// Replaced By: SystemCallCenterGetRequest14sp9
        /// </summary>
        public static async Task<SystemCallCenterGetResponse> SystemCallCenterGetRequestAsync(this OcipClient client, SystemCallCenterGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallCenterGetResponse;
        }
        /// <summary>
        /// Request the system level data associated with Call Center.
        /// The response is either a SystemCallCenterGetResponse14sp9 or an
        /// ErrorResponse.
        /// 
        /// Replaced By: SystemCallCenterGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallCenterGetRequest14sp9Async instead.")]
        public static async Task<SystemCallCenterGetResponse14sp9> SystemCallCenterGetRequest14sp9(this OcipClient client, SystemCallCenterGetRequest14sp9 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallCenterGetResponse14sp9;
        }

        /// <summary>
        /// Request the system level data associated with Call Center.
        /// The response is either a SystemCallCenterGetResponse14sp9 or an
        /// ErrorResponse.
        /// 
        /// Replaced By: SystemCallCenterGetRequest16
        /// </summary>
        public static async Task<SystemCallCenterGetResponse14sp9> SystemCallCenterGetRequest14sp9Async(this OcipClient client, SystemCallCenterGetRequest14sp9 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallCenterGetResponse14sp9;
        }
        /// <summary>
        /// Request the system level data associated with Call Center.
        /// The response is either a SystemCallCenterGetResponse16 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallCenterGetRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallCenterGetRequest16Async instead.")]
        public static async Task<SystemCallCenterGetResponse16> SystemCallCenterGetRequest16(this OcipClient client, SystemCallCenterGetRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallCenterGetResponse16;
        }

        /// <summary>
        /// Request the system level data associated with Call Center.
        /// The response is either a SystemCallCenterGetResponse16 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallCenterGetRequest17
        /// </summary>
        public static async Task<SystemCallCenterGetResponse16> SystemCallCenterGetRequest16Async(this OcipClient client, SystemCallCenterGetRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallCenterGetResponse16;
        }
        /// <summary>
        /// Request the system level data associated with Call Center.
        /// The response is either a SystemCallCenterGetResponse17 or an
        /// ErrorResponse.
        /// 
        /// Replaced by SystemCallCenterGetRequest17sp4.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallCenterGetRequest17Async instead.")]
        public static async Task<SystemCallCenterGetResponse17> SystemCallCenterGetRequest17(this OcipClient client, SystemCallCenterGetRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallCenterGetResponse17;
        }

        /// <summary>
        /// Request the system level data associated with Call Center.
        /// The response is either a SystemCallCenterGetResponse17 or an
        /// ErrorResponse.
        /// 
        /// Replaced by SystemCallCenterGetRequest17sp4.
        /// </summary>
        public static async Task<SystemCallCenterGetResponse17> SystemCallCenterGetRequest17Async(this OcipClient client, SystemCallCenterGetRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallCenterGetResponse17;
        }
        /// <summary>
        /// Request the system level data associated with Call Center.
        /// The response is either a SystemCallCenterGetResponse17sp4 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallCenterGetRequest19
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallCenterGetRequest17sp4Async instead.")]
        public static async Task<SystemCallCenterGetResponse17sp4> SystemCallCenterGetRequest17sp4(this OcipClient client, SystemCallCenterGetRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallCenterGetResponse17sp4;
        }

        /// <summary>
        /// Request the system level data associated with Call Center.
        /// The response is either a SystemCallCenterGetResponse17sp4 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallCenterGetRequest19
        /// </summary>
        public static async Task<SystemCallCenterGetResponse17sp4> SystemCallCenterGetRequest17sp4Async(this OcipClient client, SystemCallCenterGetRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallCenterGetResponse17sp4;
        }
        /// <summary>
        /// Request the system level data associated with Call Center.
        /// The response is either a SystemCallCenterGetResponse19 or an
        /// ErrorResponse.
        /// Replaced by SystemCallCenterGetRequest21.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallCenterGetRequest19Async instead.")]
        public static async Task<SystemCallCenterGetResponse19> SystemCallCenterGetRequest19(this OcipClient client, SystemCallCenterGetRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallCenterGetResponse19;
        }

        /// <summary>
        /// Request the system level data associated with Call Center.
        /// The response is either a SystemCallCenterGetResponse19 or an
        /// ErrorResponse.
        /// Replaced by SystemCallCenterGetRequest21.
        /// </summary>
        public static async Task<SystemCallCenterGetResponse19> SystemCallCenterGetRequest19Async(this OcipClient client, SystemCallCenterGetRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallCenterGetResponse19;
        }
        /// <summary>
        /// Request to get a list of Call Center Reporting Server.
        /// The response is either SystemCallCenterReportingServerGetListResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallCenterReportingServerGetListRequestAsync instead.")]
        public static async Task<SystemCallCenterReportingServerGetListResponse> SystemCallCenterReportingServerGetListRequest(this OcipClient client, SystemCallCenterReportingServerGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallCenterReportingServerGetListResponse;
        }

        /// <summary>
        /// Request to get a list of Call Center Reporting Server.
        /// The response is either SystemCallCenterReportingServerGetListResponse or ErrorResponse.
        /// </summary>
        public static async Task<SystemCallCenterReportingServerGetListResponse> SystemCallCenterReportingServerGetListRequestAsync(this OcipClient client, SystemCallCenterReportingServerGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallCenterReportingServerGetListResponse;
        }
        /// <summary>
        /// Request the system's calling name retrieval attributes.
        /// The response is either a SystemCallingNameRetrievalGetResponse14 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallingNameRetrievalGetRequest14Async instead.")]
        public static async Task<SystemCallingNameRetrievalGetResponse14> SystemCallingNameRetrievalGetRequest14(this OcipClient client, SystemCallingNameRetrievalGetRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallingNameRetrievalGetResponse14;
        }

        /// <summary>
        /// Request the system's calling name retrieval attributes.
        /// The response is either a SystemCallingNameRetrievalGetResponse14 or an ErrorResponse.
        /// </summary>
        public static async Task<SystemCallingNameRetrievalGetResponse14> SystemCallingNameRetrievalGetRequest14Async(this OcipClient client, SystemCallingNameRetrievalGetRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallingNameRetrievalGetResponse14;
        }
        /// <summary>
        /// Request the system's calling name retrieval attributes.
        /// The response is either a SystemCallingNameRetrievalGetResponse16sp1 or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallingNameRetrievalGetRequest17sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallingNameRetrievalGetRequest16sp1Async instead.")]
        public static async Task<SystemCallingNameRetrievalGetResponse16sp1> SystemCallingNameRetrievalGetRequest16sp1(this OcipClient client, SystemCallingNameRetrievalGetRequest16sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallingNameRetrievalGetResponse16sp1;
        }

        /// <summary>
        /// Request the system's calling name retrieval attributes.
        /// The response is either a SystemCallingNameRetrievalGetResponse16sp1 or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallingNameRetrievalGetRequest17sp4
        /// </summary>
        public static async Task<SystemCallingNameRetrievalGetResponse16sp1> SystemCallingNameRetrievalGetRequest16sp1Async(this OcipClient client, SystemCallingNameRetrievalGetRequest16sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallingNameRetrievalGetResponse16sp1;
        }
        /// <summary>
        /// Request the system's calling name retrieval attributes.
        /// The response is either a SystemCallingNameRetrievalGetResponse17sp4 or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallingNameRetrievalGetRequest24
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallingNameRetrievalGetRequest17sp4Async instead.")]
        public static async Task<SystemCallingNameRetrievalGetResponse17sp4> SystemCallingNameRetrievalGetRequest17sp4(this OcipClient client, SystemCallingNameRetrievalGetRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallingNameRetrievalGetResponse17sp4;
        }

        /// <summary>
        /// Request the system's calling name retrieval attributes.
        /// The response is either a SystemCallingNameRetrievalGetResponse17sp4 or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallingNameRetrievalGetRequest24
        /// </summary>
        public static async Task<SystemCallingNameRetrievalGetResponse17sp4> SystemCallingNameRetrievalGetRequest17sp4Async(this OcipClient client, SystemCallingNameRetrievalGetRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallingNameRetrievalGetResponse17sp4;
        }
        /// <summary>
        /// Request the system's calling name retrieval attributes.
        /// The response is either a SystemCallingNameRetrievalGetResponse20 or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallingNameRetrievalGetRequest24
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallingNameRetrievalGetRequest20Async instead.")]
        public static async Task<SystemCallingNameRetrievalGetResponse20> SystemCallingNameRetrievalGetRequest20(this OcipClient client, SystemCallingNameRetrievalGetRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallingNameRetrievalGetResponse20;
        }

        /// <summary>
        /// Request the system's calling name retrieval attributes.
        /// The response is either a SystemCallingNameRetrievalGetResponse20 or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallingNameRetrievalGetRequest24
        /// </summary>
        public static async Task<SystemCallingNameRetrievalGetResponse20> SystemCallingNameRetrievalGetRequest20Async(this OcipClient client, SystemCallingNameRetrievalGetRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallingNameRetrievalGetResponse20;
        }
        /// <summary>
        /// Modifies the system's calling name retrieval attributes.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallingNameRetrievalModifyRequest16sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallingNameRetrievalModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemCallingNameRetrievalModifyRequest(this OcipClient client, SystemCallingNameRetrievalModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modifies the system's calling name retrieval attributes.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallingNameRetrievalModifyRequest16sp1
        /// </summary>
        public static async Task<SuccessResponse> SystemCallingNameRetrievalModifyRequestAsync(this OcipClient client, SystemCallingNameRetrievalModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modifies the system's calling name retrieval attributes.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallingNameRetrievalModifyRequest20
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallingNameRetrievalModifyRequest16sp1Async instead.")]
        public static async Task<SuccessResponse> SystemCallingNameRetrievalModifyRequest16sp1(this OcipClient client, SystemCallingNameRetrievalModifyRequest16sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modifies the system's calling name retrieval attributes.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallingNameRetrievalModifyRequest20
        /// </summary>
        public static async Task<SuccessResponse> SystemCallingNameRetrievalModifyRequest16sp1Async(this OcipClient client, SystemCallingNameRetrievalModifyRequest16sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request the system level data associated with Call Processing Policy.
        /// The response is either a SystemCallProcessingGetPolicyResponse14 or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingGetPolicyRequest14Async instead.")]
        public static async Task<SystemCallProcessingGetPolicyResponse14> SystemCallProcessingGetPolicyRequest14(this OcipClient client, SystemCallProcessingGetPolicyRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse14;
        }

        /// <summary>
        /// Request the system level data associated with Call Processing Policy.
        /// The response is either a SystemCallProcessingGetPolicyResponse14 or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<SystemCallProcessingGetPolicyResponse14> SystemCallProcessingGetPolicyRequest14Async(this OcipClient client, SystemCallProcessingGetPolicyRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse14;
        }
        /// <summary>
        /// Request the system level data associated with Call Processing Policy.
        /// The response is either a SystemCallProcessingGetPolicyResponse14sp1 or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingGetPolicyRequest14sp1Async instead.")]
        public static async Task<SystemCallProcessingGetPolicyResponse14sp1> SystemCallProcessingGetPolicyRequest14sp1(this OcipClient client, SystemCallProcessingGetPolicyRequest14sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse14sp1;
        }

        /// <summary>
        /// Request the system level data associated with Call Processing Policy.
        /// The response is either a SystemCallProcessingGetPolicyResponse14sp1 or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<SystemCallProcessingGetPolicyResponse14sp1> SystemCallProcessingGetPolicyRequest14sp1Async(this OcipClient client, SystemCallProcessingGetPolicyRequest14sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse14sp1;
        }
        /// <summary>
        /// Request the system level data associated with Call Processing Policy.
        /// The response is either a SystemCallProcessingGetPolicyResponse14sp4 or an
        /// ErrorResponse.
        /// Replaced By : SystemCallProcessingGetPolicyRequest15
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingGetPolicyRequest14sp4Async instead.")]
        public static async Task<SystemCallProcessingGetPolicyResponse14sp4> SystemCallProcessingGetPolicyRequest14sp4(this OcipClient client, SystemCallProcessingGetPolicyRequest14sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse14sp4;
        }

        /// <summary>
        /// Request the system level data associated with Call Processing Policy.
        /// The response is either a SystemCallProcessingGetPolicyResponse14sp4 or an
        /// ErrorResponse.
        /// Replaced By : SystemCallProcessingGetPolicyRequest15
        /// </summary>
        public static async Task<SystemCallProcessingGetPolicyResponse14sp4> SystemCallProcessingGetPolicyRequest14sp4Async(this OcipClient client, SystemCallProcessingGetPolicyRequest14sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse14sp4;
        }
        /// <summary>
        /// Request the system level data associated with Call Processing Policy.
        /// The response is either a SystemCallProcessingGetPolicyResponse14sp7 or an
        /// ErrorResponse.
        /// Replaced By: SystemCallProcessingGetPolicyRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingGetPolicyRequest14sp7Async instead.")]
        public static async Task<SystemCallProcessingGetPolicyResponse14sp7> SystemCallProcessingGetPolicyRequest14sp7(this OcipClient client, SystemCallProcessingGetPolicyRequest14sp7 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse14sp7;
        }

        /// <summary>
        /// Request the system level data associated with Call Processing Policy.
        /// The response is either a SystemCallProcessingGetPolicyResponse14sp7 or an
        /// ErrorResponse.
        /// Replaced By: SystemCallProcessingGetPolicyRequest16
        /// </summary>
        public static async Task<SystemCallProcessingGetPolicyResponse14sp7> SystemCallProcessingGetPolicyRequest14sp7Async(this OcipClient client, SystemCallProcessingGetPolicyRequest14sp7 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse14sp7;
        }
        /// <summary>
        /// Request the system level data associated with Call Processing Policy.
        /// The response is either a SystemCallProcessingGetPolicyResponse15 or an
        /// ErrorResponse.
        /// Replaced By: SystemCallProcessingGetPolicyRequest15sp2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingGetPolicyRequest15Async instead.")]
        public static async Task<SystemCallProcessingGetPolicyResponse15> SystemCallProcessingGetPolicyRequest15(this OcipClient client, SystemCallProcessingGetPolicyRequest15 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse15;
        }

        /// <summary>
        /// Request the system level data associated with Call Processing Policy.
        /// The response is either a SystemCallProcessingGetPolicyResponse15 or an
        /// ErrorResponse.
        /// Replaced By: SystemCallProcessingGetPolicyRequest15sp2
        /// </summary>
        public static async Task<SystemCallProcessingGetPolicyResponse15> SystemCallProcessingGetPolicyRequest15Async(this OcipClient client, SystemCallProcessingGetPolicyRequest15 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse15;
        }
        /// <summary>
        /// Request the system level data associated with Call Processing Policy.
        /// The response is either a SystemCallProcessingGetPolicyResponse15sp2 or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingGetPolicyRequest15sp2Async instead.")]
        public static async Task<SystemCallProcessingGetPolicyResponse15sp2> SystemCallProcessingGetPolicyRequest15sp2(this OcipClient client, SystemCallProcessingGetPolicyRequest15sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse15sp2;
        }

        /// <summary>
        /// Request the system level data associated with Call Processing Policy.
        /// The response is either a SystemCallProcessingGetPolicyResponse15sp2 or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<SystemCallProcessingGetPolicyResponse15sp2> SystemCallProcessingGetPolicyRequest15sp2Async(this OcipClient client, SystemCallProcessingGetPolicyRequest15sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse15sp2;
        }
        /// <summary>
        /// Request the system level data associated with Call Processing Policy.
        /// The response is either a SystemCallProcessingGetPolicyResponse16 or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingGetPolicyRequest16Async instead.")]
        public static async Task<SystemCallProcessingGetPolicyResponse16> SystemCallProcessingGetPolicyRequest16(this OcipClient client, SystemCallProcessingGetPolicyRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse16;
        }

        /// <summary>
        /// Request the system level data associated with Call Processing Policy.
        /// The response is either a SystemCallProcessingGetPolicyResponse16 or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<SystemCallProcessingGetPolicyResponse16> SystemCallProcessingGetPolicyRequest16Async(this OcipClient client, SystemCallProcessingGetPolicyRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse16;
        }
        /// <summary>
        /// Request the system level data associated with Call Processing Policy.
        /// The response is either a SystemCallProcessingGetPolicyResponse16sp2 or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingGetPolicyRequest16sp2Async instead.")]
        public static async Task<SystemCallProcessingGetPolicyResponse16sp2> SystemCallProcessingGetPolicyRequest16sp2(this OcipClient client, SystemCallProcessingGetPolicyRequest16sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse16sp2;
        }

        /// <summary>
        /// Request the system level data associated with Call Processing Policy.
        /// The response is either a SystemCallProcessingGetPolicyResponse16sp2 or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<SystemCallProcessingGetPolicyResponse16sp2> SystemCallProcessingGetPolicyRequest16sp2Async(this OcipClient client, SystemCallProcessingGetPolicyRequest16sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse16sp2;
        }
        /// <summary>
        /// The response is either a SystemCallProcessingGetPolicyResponse17 or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingGetPolicyRequest17Async instead.")]
        public static async Task<SystemCallProcessingGetPolicyResponse17> SystemCallProcessingGetPolicyRequest17(this OcipClient client, SystemCallProcessingGetPolicyRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse17;
        }

        /// <summary>
        /// The response is either a SystemCallProcessingGetPolicyResponse17 or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<SystemCallProcessingGetPolicyResponse17> SystemCallProcessingGetPolicyRequest17Async(this OcipClient client, SystemCallProcessingGetPolicyRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse17;
        }
        /// <summary>
        /// Request the system level data associated with Call Processing Policy.
        /// The response is either a SystemCallProcessingGetPolicyResponse17sp3 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingGetPolicyRequest17sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingGetPolicyRequest17sp3Async instead.")]
        public static async Task<SystemCallProcessingGetPolicyResponse17sp3> SystemCallProcessingGetPolicyRequest17sp3(this OcipClient client, SystemCallProcessingGetPolicyRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse17sp3;
        }

        /// <summary>
        /// Request the system level data associated with Call Processing Policy.
        /// The response is either a SystemCallProcessingGetPolicyResponse17sp3 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingGetPolicyRequest17sp4
        /// </summary>
        public static async Task<SystemCallProcessingGetPolicyResponse17sp3> SystemCallProcessingGetPolicyRequest17sp3Async(this OcipClient client, SystemCallProcessingGetPolicyRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse17sp3;
        }
        /// <summary>
        /// The response is either a SystemCallProcessingGetPolicyResponse17sp4 or an
        /// ErrorResponse.
        /// Replaced By : SystemCallProcessingGetPolicyRequest18sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingGetPolicyRequest17sp4Async instead.")]
        public static async Task<SystemCallProcessingGetPolicyResponse17sp4> SystemCallProcessingGetPolicyRequest17sp4(this OcipClient client, SystemCallProcessingGetPolicyRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse17sp4;
        }

        /// <summary>
        /// The response is either a SystemCallProcessingGetPolicyResponse17sp4 or an
        /// ErrorResponse.
        /// Replaced By : SystemCallProcessingGetPolicyRequest18sp1
        /// </summary>
        public static async Task<SystemCallProcessingGetPolicyResponse17sp4> SystemCallProcessingGetPolicyRequest17sp4Async(this OcipClient client, SystemCallProcessingGetPolicyRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse17sp4;
        }
        /// <summary>
        /// The response is either a SystemCallProcessingGetPolicyResponse18sp1 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingGetPolicyRequest19sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingGetPolicyRequest18sp1Async instead.")]
        public static async Task<SystemCallProcessingGetPolicyResponse18sp1> SystemCallProcessingGetPolicyRequest18sp1(this OcipClient client, SystemCallProcessingGetPolicyRequest18sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse18sp1;
        }

        /// <summary>
        /// The response is either a SystemCallProcessingGetPolicyResponse18sp1 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingGetPolicyRequest19sp1
        /// </summary>
        public static async Task<SystemCallProcessingGetPolicyResponse18sp1> SystemCallProcessingGetPolicyRequest18sp1Async(this OcipClient client, SystemCallProcessingGetPolicyRequest18sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse18sp1;
        }
        /// <summary>
        /// The response is either a SystemCallProcessingGetPolicyResponse19sp1 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingGetPolicyRequest21sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingGetPolicyRequest19sp1Async instead.")]
        public static async Task<SystemCallProcessingGetPolicyResponse19sp1> SystemCallProcessingGetPolicyRequest19sp1(this OcipClient client, SystemCallProcessingGetPolicyRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse19sp1;
        }

        /// <summary>
        /// The response is either a SystemCallProcessingGetPolicyResponse19sp1 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingGetPolicyRequest21sp1
        /// </summary>
        public static async Task<SystemCallProcessingGetPolicyResponse19sp1> SystemCallProcessingGetPolicyRequest19sp1Async(this OcipClient client, SystemCallProcessingGetPolicyRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse19sp1;
        }
        /// <summary>
        /// The response is either a SystemCallProcessingGetPolicyResponse21sp1 or an
        /// ErrorResponse.
        /// Replaced by: SystemCallProcessingGetPolicyRequest1sp2.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingGetPolicyRequest21sp1Async instead.")]
        public static async Task<SystemCallProcessingGetPolicyResponse21sp1> SystemCallProcessingGetPolicyRequest21sp1(this OcipClient client, SystemCallProcessingGetPolicyRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse21sp1;
        }

        /// <summary>
        /// The response is either a SystemCallProcessingGetPolicyResponse21sp1 or an
        /// ErrorResponse.
        /// Replaced by: SystemCallProcessingGetPolicyRequest1sp2.
        /// </summary>
        public static async Task<SystemCallProcessingGetPolicyResponse21sp1> SystemCallProcessingGetPolicyRequest21sp1Async(this OcipClient client, SystemCallProcessingGetPolicyRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingGetPolicyResponse21sp1;
        }
        /// <summary>
        /// Modify the system level data associated with Call Processing Policy.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By : SystemCallProcessingModifyPolicyRequest15
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingModifyPolicyRequest14Async instead.")]
        public static async Task<SuccessResponse> SystemCallProcessingModifyPolicyRequest14(this OcipClient client, SystemCallProcessingModifyPolicyRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the system level data associated with Call Processing Policy.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By : SystemCallProcessingModifyPolicyRequest15
        /// </summary>
        public static async Task<SuccessResponse> SystemCallProcessingModifyPolicyRequest14Async(this OcipClient client, SystemCallProcessingModifyPolicyRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a call processing policy profile to system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by SystemCallProcessingPolicyProfileAddRequest20.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileAddRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemCallProcessingPolicyProfileAddRequest(this OcipClient client, SystemCallProcessingPolicyProfileAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a call processing policy profile to system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by SystemCallProcessingPolicyProfileAddRequest20.
        /// </summary>
        public static async Task<SuccessResponse> SystemCallProcessingPolicyProfileAddRequestAsync(this OcipClient client, SystemCallProcessingPolicyProfileAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a call processing policy profile to system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileAddRequest20Async instead.")]
        public static async Task<SuccessResponse> SystemCallProcessingPolicyProfileAddRequest20(this OcipClient client, SystemCallProcessingPolicyProfileAddRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a call processing policy profile to system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemCallProcessingPolicyProfileAddRequest20Async(this OcipClient client, SystemCallProcessingPolicyProfileAddRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Auto Attendant subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileAutoAttendantProfileGetResponse or an
        /// ErrorResponse.
        /// The response contains the call processing policy profile setting for Auto Attendant.
        /// 
        /// Replaced by:  SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequestAsync instead.")]
        public static async Task<SystemCallProcessingPolicyProfileAutoAttendantProfileGetResponse> SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest(this OcipClient client, SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileAutoAttendantProfileGetResponse;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Auto Attendant subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileAutoAttendantProfileGetResponse or an
        /// ErrorResponse.
        /// The response contains the call processing policy profile setting for Auto Attendant.
        /// 
        /// Replaced by:  SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest22
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileAutoAttendantProfileGetResponse> SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequestAsync(this OcipClient client, SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileAutoAttendantProfileGetResponse;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Auto Attendant subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileAutoAttendantProfileGetResponse22 or an ErrorResponse.
        /// The response contains the call processing policy profile setting for Auto Attendant.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest22V2 in AS data mode.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest22Async instead.")]
        public static async Task<SystemCallProcessingPolicyProfileAutoAttendantProfileGetResponse22> SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest22(this OcipClient client, SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileAutoAttendantProfileGetResponse22;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Auto Attendant subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileAutoAttendantProfileGetResponse22 or an ErrorResponse.
        /// The response contains the call processing policy profile setting for Auto Attendant.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest22V2 in AS data mode.
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileAutoAttendantProfileGetResponse22> SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest22Async(this OcipClient client, SystemCallProcessingPolicyProfileAutoAttendantProfileGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileAutoAttendantProfileGetResponse22;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile BroadWorks Anywhere subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequestAsync instead.")]
        public static async Task<SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetResponse> SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest(this OcipClient client, SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetResponse;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile BroadWorks Anywhere subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest22
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetResponse> SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequestAsync(this OcipClient client, SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetResponse;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile BroadWorks Anywhere subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetResponse22 or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest22 in AS data mode.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest22Async instead.")]
        public static async Task<SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetResponse22> SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest22(this OcipClient client, SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetResponse22;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile BroadWorks Anywhere subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetResponse22 or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest22 in AS data mode.
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetResponse22> SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest22Async(this OcipClient client, SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileBroadWorksAnywhereProfileGetResponse22;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Call Center subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileCallCenterProfileGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileCallCenterProfileGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileCallCenterProfileGetRequestAsync instead.")]
        public static async Task<SystemCallProcessingPolicyProfileCallCenterProfileGetResponse> SystemCallProcessingPolicyProfileCallCenterProfileGetRequest(this OcipClient client, SystemCallProcessingPolicyProfileCallCenterProfileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileCallCenterProfileGetResponse;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Call Center subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileCallCenterProfileGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileCallCenterProfileGetRequest22
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileCallCenterProfileGetResponse> SystemCallProcessingPolicyProfileCallCenterProfileGetRequestAsync(this OcipClient client, SystemCallProcessingPolicyProfileCallCenterProfileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileCallCenterProfileGetResponse;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Call Center subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileCallCenterProfileGetResponse22 or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileCallCenterProfileGetRequest22V2 in AS data mode.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileCallCenterProfileGetRequest22Async instead.")]
        public static async Task<SystemCallProcessingPolicyProfileCallCenterProfileGetResponse22> SystemCallProcessingPolicyProfileCallCenterProfileGetRequest22(this OcipClient client, SystemCallProcessingPolicyProfileCallCenterProfileGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileCallCenterProfileGetResponse22;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Call Center subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileCallCenterProfileGetResponse22 or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileCallCenterProfileGetRequest22V2 in AS data mode.
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileCallCenterProfileGetResponse22> SystemCallProcessingPolicyProfileCallCenterProfileGetRequest22Async(this OcipClient client, SystemCallProcessingPolicyProfileCallCenterProfileGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileCallCenterProfileGetResponse22;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Collaborate subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileCollaborateProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by:  SystemCallProcessingPolicyProfileCollaborateProfileGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileCollaborateProfileGetRequestAsync instead.")]
        public static async Task<SystemCallProcessingPolicyProfileCollaborateProfileGetResponse> SystemCallProcessingPolicyProfileCollaborateProfileGetRequest(this OcipClient client, SystemCallProcessingPolicyProfileCollaborateProfileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileCollaborateProfileGetResponse;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Collaborate subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileCollaborateProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by:  SystemCallProcessingPolicyProfileCollaborateProfileGetRequest22
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileCollaborateProfileGetResponse> SystemCallProcessingPolicyProfileCollaborateProfileGetRequestAsync(this OcipClient client, SystemCallProcessingPolicyProfileCollaborateProfileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileCollaborateProfileGetResponse;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Collaborate subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileCollaborateProfileGetResponse22 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileCollaborateProfileGetRequest22V2 in AS data mode.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileCollaborateProfileGetRequest22Async instead.")]
        public static async Task<SystemCallProcessingPolicyProfileCollaborateProfileGetResponse22> SystemCallProcessingPolicyProfileCollaborateProfileGetRequest22(this OcipClient client, SystemCallProcessingPolicyProfileCollaborateProfileGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileCollaborateProfileGetResponse22;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Collaborate subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileCollaborateProfileGetResponse22 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileCollaborateProfileGetRequest22V2 in AS data mode.
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileCollaborateProfileGetResponse22> SystemCallProcessingPolicyProfileCollaborateProfileGetRequest22Async(this OcipClient client, SystemCallProcessingPolicyProfileCollaborateProfileGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileCollaborateProfileGetResponse22;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Find-me/Follow-me subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequestAsync instead.")]
        public static async Task<SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetResponse> SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest(this OcipClient client, SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetResponse;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Find-me/Follow-me subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest22
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetResponse> SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequestAsync(this OcipClient client, SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetResponse;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Find-me/Follow-me subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetResponse22 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest22V2 in AS data mode.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest22Async instead.")]
        public static async Task<SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetResponse22> SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest22(this OcipClient client, SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetResponse22;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Find-me/Follow-me subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetResponse22 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest22V2 in AS data mode.
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetResponse22> SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest22Async(this OcipClient client, SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileFindMeFollowMeProfileGetResponse22;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Flexible Seating Host subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequestAsync instead.")]
        public static async Task<SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetResponse> SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest(this OcipClient client, SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetResponse;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Flexible Seating Host subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest22
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetResponse> SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequestAsync(this OcipClient client, SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetResponse;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Flexible Seating Host subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest22V2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest22Async instead.")]
        public static async Task<SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetResponse> SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest22(this OcipClient client, SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetResponse;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Flexible Seating Host subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest22V2
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetResponse> SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest22Async(this OcipClient client, SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileFlexibleSeatingHostProfileGetResponse;
        }
        /// <summary>
        /// Request to get a call processing policy profile in system.
        /// The response is either a SystemCallProcessingPolicyProfileGetResponse or an ErrorResponse.
        /// 
        /// Replaced by SystemCallProcessingPolicyProfileGetRequest20.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileGetRequestAsync instead.")]
        public static async Task<SystemCallProcessingPolicyProfileGetResponse> SystemCallProcessingPolicyProfileGetRequest(this OcipClient client, SystemCallProcessingPolicyProfileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileGetResponse;
        }

        /// <summary>
        /// Request to get a call processing policy profile in system.
        /// The response is either a SystemCallProcessingPolicyProfileGetResponse or an ErrorResponse.
        /// 
        /// Replaced by SystemCallProcessingPolicyProfileGetRequest20.
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileGetResponse> SystemCallProcessingPolicyProfileGetRequestAsync(this OcipClient client, SystemCallProcessingPolicyProfileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileGetResponse;
        }
        /// <summary>
        /// Request to get a call processing policy profile in system.
        /// The response is either a SystemCallProcessingPolicyProfileGetResponse20 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileGetRequest20Async instead.")]
        public static async Task<SystemCallProcessingPolicyProfileGetResponse20> SystemCallProcessingPolicyProfileGetRequest20(this OcipClient client, SystemCallProcessingPolicyProfileGetRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileGetResponse20;
        }

        /// <summary>
        /// Request to get a call processing policy profile in system.
        /// The response is either a SystemCallProcessingPolicyProfileGetResponse20 or an ErrorResponse.
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileGetResponse20> SystemCallProcessingPolicyProfileGetRequest20Async(this OcipClient client, SystemCallProcessingPolicyProfileGetRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileGetResponse20;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Group Paging subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileGroupPagingProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileGroupPagingProfileGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileGroupPagingProfileGetRequestAsync instead.")]
        public static async Task<SystemCallProcessingPolicyProfileGroupPagingProfileGetResponse> SystemCallProcessingPolicyProfileGroupPagingProfileGetRequest(this OcipClient client, SystemCallProcessingPolicyProfileGroupPagingProfileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileGroupPagingProfileGetResponse;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Group Paging subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileGroupPagingProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileGroupPagingProfileGetRequest22
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileGroupPagingProfileGetResponse> SystemCallProcessingPolicyProfileGroupPagingProfileGetRequestAsync(this OcipClient client, SystemCallProcessingPolicyProfileGroupPagingProfileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileGroupPagingProfileGetResponse;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Hunt Group subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileHuntGroupProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileHuntGroupProfileGetRequestAsync instead.")]
        public static async Task<SystemCallProcessingPolicyProfileHuntGroupProfileGetResponse> SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest(this OcipClient client, SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileHuntGroupProfileGetResponse;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Hunt Group subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileHuntGroupProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest22
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileHuntGroupProfileGetResponse> SystemCallProcessingPolicyProfileHuntGroupProfileGetRequestAsync(this OcipClient client, SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileHuntGroupProfileGetResponse;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Hunt Group subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileHuntGroupProfileGetResponse22 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest22Async instead.")]
        public static async Task<SystemCallProcessingPolicyProfileHuntGroupProfileGetResponse22> SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest22(this OcipClient client, SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileHuntGroupProfileGetResponse22;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Hunt Group subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileHuntGroupProfileGetResponse22 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest22V2.
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileHuntGroupProfileGetResponse22> SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest22Async(this OcipClient client, SystemCallProcessingPolicyProfileHuntGroupProfileGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileHuntGroupProfileGetResponse22;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Instant Group Call subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileInstantGroupCallProfileGetResponse22 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileInstantGroupCallProfileGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileInstantGroupCallProfileGetRequestAsync instead.")]
        public static async Task<SystemCallProcessingPolicyProfileInstantGroupCallProfileGetResponse22> SystemCallProcessingPolicyProfileInstantGroupCallProfileGetRequest(this OcipClient client, SystemCallProcessingPolicyProfileInstantGroupCallProfileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileInstantGroupCallProfileGetResponse22;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Instant Group Call subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileInstantGroupCallProfileGetResponse22 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileInstantGroupCallProfileGetRequest22
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileInstantGroupCallProfileGetResponse22> SystemCallProcessingPolicyProfileInstantGroupCallProfileGetRequestAsync(this OcipClient client, SystemCallProcessingPolicyProfileInstantGroupCallProfileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileInstantGroupCallProfileGetResponse22;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Meet-Me Conferencing subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequestAsync instead.")]
        public static async Task<SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetResponse> SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest(this OcipClient client, SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetResponse;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Meet-Me Conferencing subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest22
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetResponse> SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequestAsync(this OcipClient client, SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetResponse;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Meet-Me Conferencing subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetResponse22 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest22Async instead.")]
        public static async Task<SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetResponse22> SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest22(this OcipClient client, SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetResponse22;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Meet-Me Conferencing subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetResponse22 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest22V2.
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetResponse22> SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest22Async(this OcipClient client, SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileMeetMeConferencingProfileGetResponse22;
        }
        /// <summary>
        /// Modify a call processing policy profile in system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by SystemCallProcessingPolicyProfileModifyRequest20.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemCallProcessingPolicyProfileModifyRequest(this OcipClient client, SystemCallProcessingPolicyProfileModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a call processing policy profile in system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by SystemCallProcessingPolicyProfileModifyRequest20.
        /// </summary>
        public static async Task<SuccessResponse> SystemCallProcessingPolicyProfileModifyRequestAsync(this OcipClient client, SystemCallProcessingPolicyProfileModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify a call processing policy profile in system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileModifyRequest20Async instead.")]
        public static async Task<SuccessResponse> SystemCallProcessingPolicyProfileModifyRequest20(this OcipClient client, SystemCallProcessingPolicyProfileModifyRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a call processing policy profile in system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemCallProcessingPolicyProfileModifyRequest20Async(this OcipClient client, SystemCallProcessingPolicyProfileModifyRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Route Point subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileRoutePointProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileRoutePointProfileGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileRoutePointProfileGetRequestAsync instead.")]
        public static async Task<SystemCallProcessingPolicyProfileRoutePointProfileGetResponse> SystemCallProcessingPolicyProfileRoutePointProfileGetRequest(this OcipClient client, SystemCallProcessingPolicyProfileRoutePointProfileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileRoutePointProfileGetResponse;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Route Point subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileRoutePointProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileRoutePointProfileGetRequest22
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileRoutePointProfileGetResponse> SystemCallProcessingPolicyProfileRoutePointProfileGetRequestAsync(this OcipClient client, SystemCallProcessingPolicyProfileRoutePointProfileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileRoutePointProfileGetResponse;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Route Point subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileRoutePointProfileGetResponse22 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileRoutePointProfileGetRequest22V2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileRoutePointProfileGetRequest22Async instead.")]
        public static async Task<SystemCallProcessingPolicyProfileRoutePointProfileGetResponse22> SystemCallProcessingPolicyProfileRoutePointProfileGetRequest22(this OcipClient client, SystemCallProcessingPolicyProfileRoutePointProfileGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileRoutePointProfileGetResponse22;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Route Point subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileRoutePointProfileGetResponse22 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileRoutePointProfileGetRequest22V2
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileRoutePointProfileGetResponse22> SystemCallProcessingPolicyProfileRoutePointProfileGetRequest22Async(this OcipClient client, SystemCallProcessingPolicyProfileRoutePointProfileGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileRoutePointProfileGetResponse22;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Trunk Group Pilot user subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequestAsync instead.")]
        public static async Task<SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse> SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest(this OcipClient client, SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Trunk Group Pilot user subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse> SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequestAsync(this OcipClient client, SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Trunk Group Pilot user subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse22 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22V2 in AS data mode.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22Async instead.")]
        public static async Task<SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse22> SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22(this OcipClient client, SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse22;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Trunk Group Pilot user subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse22 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22V2 in AS data mode.
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse22> SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22Async(this OcipClient client, SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse22;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Trunk Group Pilot user subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse22V2 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22V3 in AS data mode.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22V2Async instead.")]
        public static async Task<SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse22V2> SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22V2(this OcipClient client, SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse22V2;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Trunk Group Pilot user subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse22V2 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22V3 in AS data mode.
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse22V2> SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22V2Async(this OcipClient client, SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetRequest22V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileTrunkGroupPilotProfileGetResponse22V2;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile user subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileUserProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileUserProfileGetRequest21sp1 in AS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileUserProfileGetRequestAsync instead.")]
        public static async Task<SystemCallProcessingPolicyProfileUserProfileGetResponse> SystemCallProcessingPolicyProfileUserProfileGetRequest(this OcipClient client, SystemCallProcessingPolicyProfileUserProfileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileUserProfileGetResponse;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile user subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileUserProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileUserProfileGetRequest21sp1 in AS data mode
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileUserProfileGetResponse> SystemCallProcessingPolicyProfileUserProfileGetRequestAsync(this OcipClient client, SystemCallProcessingPolicyProfileUserProfileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileUserProfileGetResponse;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile user subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileUserProfileGetResponse21sp1 or an
        /// ErrorResponse.
        /// Replaced by: SystemCallProcessingPolicyProfileUserProfileGetRequest22 in AS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileUserProfileGetRequest21sp1Async instead.")]
        public static async Task<SystemCallProcessingPolicyProfileUserProfileGetResponse21sp1> SystemCallProcessingPolicyProfileUserProfileGetRequest21sp1(this OcipClient client, SystemCallProcessingPolicyProfileUserProfileGetRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileUserProfileGetResponse21sp1;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile user subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileUserProfileGetResponse21sp1 or an
        /// ErrorResponse.
        /// Replaced by: SystemCallProcessingPolicyProfileUserProfileGetRequest22 in AS data mode
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileUserProfileGetResponse21sp1> SystemCallProcessingPolicyProfileUserProfileGetRequest21sp1Async(this OcipClient client, SystemCallProcessingPolicyProfileUserProfileGetRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileUserProfileGetResponse21sp1;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile user subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileUserProfileGetResponse22 or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileUserProfileGetRequest22V2 in AS data mode.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileUserProfileGetRequest22Async instead.")]
        public static async Task<SystemCallProcessingPolicyProfileUserProfileGetResponse22> SystemCallProcessingPolicyProfileUserProfileGetRequest22(this OcipClient client, SystemCallProcessingPolicyProfileUserProfileGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileUserProfileGetResponse22;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile user subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileUserProfileGetResponse22 or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileUserProfileGetRequest22V2 in AS data mode.
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileUserProfileGetResponse22> SystemCallProcessingPolicyProfileUserProfileGetRequest22Async(this OcipClient client, SystemCallProcessingPolicyProfileUserProfileGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileUserProfileGetResponse22;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile user subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileUserProfileGetResponse22V2 or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileUserProfileGetRequest22V2 in AS data mode.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileUserProfileGetRequest22V2Async instead.")]
        public static async Task<SystemCallProcessingPolicyProfileUserProfileGetResponse22V2> SystemCallProcessingPolicyProfileUserProfileGetRequest22V2(this OcipClient client, SystemCallProcessingPolicyProfileUserProfileGetRequest22V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileUserProfileGetResponse22V2;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile user subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileUserProfileGetResponse22V2 or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileUserProfileGetRequest22V2 in AS data mode.
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileUserProfileGetResponse22V2> SystemCallProcessingPolicyProfileUserProfileGetRequest22V2Async(this OcipClient client, SystemCallProcessingPolicyProfileUserProfileGetRequest22V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileUserProfileGetResponse22V2;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Voice Portal subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileVoicePortalProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileVoicePortalProfileGetRequestAsync instead.")]
        public static async Task<SystemCallProcessingPolicyProfileVoicePortalProfileGetResponse> SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest(this OcipClient client, SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileVoicePortalProfileGetResponse;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Voice Portal subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileVoicePortalProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest22
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileVoicePortalProfileGetResponse> SystemCallProcessingPolicyProfileVoicePortalProfileGetRequestAsync(this OcipClient client, SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileVoicePortalProfileGetResponse;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile Voice Portal subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileVoicePortalProfileGetResponse22 or an
        /// ErrorResponse.
        /// Replaced by: SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest22Async instead.")]
        public static async Task<SystemCallProcessingPolicyProfileVoicePortalProfileGetResponse22> SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest22(this OcipClient client, SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileVoicePortalProfileGetResponse22;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile Voice Portal subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileVoicePortalProfileGetResponse22 or an
        /// ErrorResponse.
        /// Replaced by: SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest22V2.
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileVoicePortalProfileGetResponse22> SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest22Async(this OcipClient client, SystemCallProcessingPolicyProfileVoicePortalProfileGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileVoicePortalProfileGetResponse22;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile VoiceXML subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileVoiceXMLProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequestAsync instead.")]
        public static async Task<SystemCallProcessingPolicyProfileVoiceXMLProfileGetResponse> SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest(this OcipClient client, SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileVoiceXMLProfileGetResponse;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile VoiceXML subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileVoiceXMLProfileGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest22
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileVoiceXMLProfileGetResponse> SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequestAsync(this OcipClient client, SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileVoiceXMLProfileGetResponse;
        }
        /// <summary>
        /// Request to get the configuration for a call processing policy profile VoiceXML subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileVoiceXMLProfileGetResponse22 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest22V2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest22Async instead.")]
        public static async Task<SystemCallProcessingPolicyProfileVoiceXMLProfileGetResponse22> SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest22(this OcipClient client, SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallProcessingPolicyProfileVoiceXMLProfileGetResponse22;
        }

        /// <summary>
        /// Request to get the configuration for a call processing policy profile VoiceXML subscriber type profile.
        /// The response is either a SystemCallProcessingPolicyProfileVoiceXMLProfileGetResponse22 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest22V2
        /// </summary>
        public static async Task<SystemCallProcessingPolicyProfileVoiceXMLProfileGetResponse22> SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest22Async(this OcipClient client, SystemCallProcessingPolicyProfileVoiceXMLProfileGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallProcessingPolicyProfileVoiceXMLProfileGetResponse22;
        }
        /// <summary>
        /// Add a Call Recording platform.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallRecordingAddPlatformRequest19
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallRecordingAddPlatformRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemCallRecordingAddPlatformRequest(this OcipClient client, SystemCallRecordingAddPlatformRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Call Recording platform.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallRecordingAddPlatformRequest19
        /// </summary>
        public static async Task<SuccessResponse> SystemCallRecordingAddPlatformRequestAsync(this OcipClient client, SystemCallRecordingAddPlatformRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Call Recording platform.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallRecordingAddPlatformRequest20
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallRecordingAddPlatformRequest19Async instead.")]
        public static async Task<SuccessResponse> SystemCallRecordingAddPlatformRequest19(this OcipClient client, SystemCallRecordingAddPlatformRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Call Recording platform.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallRecordingAddPlatformRequest20
        /// </summary>
        public static async Task<SuccessResponse> SystemCallRecordingAddPlatformRequest19Async(this OcipClient client, SystemCallRecordingAddPlatformRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Call Recording platform.
        /// The first system level call recording platform added is made the system default
        /// call recording platform.  The first reseller level call recording platform added
        /// for a reseller is made the reseller default call recording platform.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallRecordingAddPlatformRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallRecordingAddPlatformRequest20Async instead.")]
        public static async Task<SuccessResponse> SystemCallRecordingAddPlatformRequest20(this OcipClient client, SystemCallRecordingAddPlatformRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a Call Recording platform.
        /// The first system level call recording platform added is made the system default
        /// call recording platform.  The first reseller level call recording platform added
        /// for a reseller is made the reseller default call recording platform.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallRecordingAddPlatformRequest22
        /// </summary>
        public static async Task<SuccessResponse> SystemCallRecordingAddPlatformRequest20Async(this OcipClient client, SystemCallRecordingAddPlatformRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get list of Call Recording platforms.
        /// The response is either SystemCallRecordingGetPlatformListResponse or ErrorResponse.
        /// 
        /// The possible values for "Support Video Rec" can be either true or false.
        /// Schema version values include: 1.0, 2.0, 3.0
        /// 
        /// Replaced by: SystemCallRecordingGetPlatformListRequest20sp1 in AS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallRecordingGetPlatformListRequestAsync instead.")]
        public static async Task<SystemCallRecordingGetPlatformListResponse> SystemCallRecordingGetPlatformListRequest(this OcipClient client, SystemCallRecordingGetPlatformListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallRecordingGetPlatformListResponse;
        }

        /// <summary>
        /// Get list of Call Recording platforms.
        /// The response is either SystemCallRecordingGetPlatformListResponse or ErrorResponse.
        /// 
        /// The possible values for "Support Video Rec" can be either true or false.
        /// Schema version values include: 1.0, 2.0, 3.0
        /// 
        /// Replaced by: SystemCallRecordingGetPlatformListRequest20sp1 in AS data mode
        /// </summary>
        public static async Task<SystemCallRecordingGetPlatformListResponse> SystemCallRecordingGetPlatformListRequestAsync(this OcipClient client, SystemCallRecordingGetPlatformListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallRecordingGetPlatformListResponse;
        }
        /// <summary>
        /// Get list of Call Recording platforms.
        /// The response is either SystemCallRecordingGetPlatformListResponse20sp1 or ErrorResponse.
        /// 
        /// The possible values for "Support Video Rec" can be either true or false.
        /// Schema version values include: 1.0, 2.0, 3.0
        /// 
        /// Replaced by SystemCallRecordingGetPlatformListRequest22 in AS data mode.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallRecordingGetPlatformListRequest20sp1Async instead.")]
        public static async Task<SystemCallRecordingGetPlatformListResponse20sp1> SystemCallRecordingGetPlatformListRequest20sp1(this OcipClient client, SystemCallRecordingGetPlatformListRequest20sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallRecordingGetPlatformListResponse20sp1;
        }

        /// <summary>
        /// Get list of Call Recording platforms.
        /// The response is either SystemCallRecordingGetPlatformListResponse20sp1 or ErrorResponse.
        /// 
        /// The possible values for "Support Video Rec" can be either true or false.
        /// Schema version values include: 1.0, 2.0, 3.0
        /// 
        /// Replaced by SystemCallRecordingGetPlatformListRequest22 in AS data mode.
        /// </summary>
        public static async Task<SystemCallRecordingGetPlatformListResponse20sp1> SystemCallRecordingGetPlatformListRequest20sp1Async(this OcipClient client, SystemCallRecordingGetPlatformListRequest20sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallRecordingGetPlatformListResponse20sp1;
        }
        /// <summary>
        /// Requests the list of all system-level call recording platforms and all reseller level call recording platforms.
        /// If an excludeReseller is specified, returns all the system-level call recording platforms only.
        /// If a resellerId is specified, returns all the system-level call recording platforms and the given reseller's call recording platforms.
        /// If a reseller administrator sends the request and resellerId is not specified, the administrator's resellerId is used.
        /// The response is either SystemCallRecordingGetPlatformListResponse22 or ErrorResponse.
        /// 
        /// Replaced by: SystemCallRecordingGetPlatformListRequest22V2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallRecordingGetPlatformListRequest22Async instead.")]
        public static async Task<SystemCallRecordingGetPlatformListResponse22> SystemCallRecordingGetPlatformListRequest22(this OcipClient client, SystemCallRecordingGetPlatformListRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallRecordingGetPlatformListResponse22;
        }

        /// <summary>
        /// Requests the list of all system-level call recording platforms and all reseller level call recording platforms.
        /// If an excludeReseller is specified, returns all the system-level call recording platforms only.
        /// If a resellerId is specified, returns all the system-level call recording platforms and the given reseller's call recording platforms.
        /// If a reseller administrator sends the request and resellerId is not specified, the administrator's resellerId is used.
        /// The response is either SystemCallRecordingGetPlatformListResponse22 or ErrorResponse.
        /// 
        /// Replaced by: SystemCallRecordingGetPlatformListRequest22V2
        /// </summary>
        public static async Task<SystemCallRecordingGetPlatformListResponse22> SystemCallRecordingGetPlatformListRequest22Async(this OcipClient client, SystemCallRecordingGetPlatformListRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallRecordingGetPlatformListResponse22;
        }
        /// <summary>
        /// Get the list of groups currently associated to the specified Call Recording platform.
        /// The response is either SystemCallRecordingGetPlatformUsageResponse or ErrorResponse.
        /// 
        /// Replaced by SystemCallRecordingGetPlatformUsageRequest22 in AS data mode.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallRecordingGetPlatformUsageRequestAsync instead.")]
        public static async Task<SystemCallRecordingGetPlatformUsageResponse> SystemCallRecordingGetPlatformUsageRequest(this OcipClient client, SystemCallRecordingGetPlatformUsageRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallRecordingGetPlatformUsageResponse;
        }

        /// <summary>
        /// Get the list of groups currently associated to the specified Call Recording platform.
        /// The response is either SystemCallRecordingGetPlatformUsageResponse or ErrorResponse.
        /// 
        /// Replaced by SystemCallRecordingGetPlatformUsageRequest22 in AS data mode.
        /// </summary>
        public static async Task<SystemCallRecordingGetPlatformUsageResponse> SystemCallRecordingGetPlatformUsageRequestAsync(this OcipClient client, SystemCallRecordingGetPlatformUsageRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallRecordingGetPlatformUsageResponse;
        }
        /// <summary>
        /// Request the system level data associated with Call Recording.
        /// The response is either a SystemCallRecordingGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallRecordingGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallRecordingGetRequestAsync instead.")]
        public static async Task<SystemCallRecordingGetResponse> SystemCallRecordingGetRequest(this OcipClient client, SystemCallRecordingGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallRecordingGetResponse;
        }

        /// <summary>
        /// Request the system level data associated with Call Recording.
        /// The response is either a SystemCallRecordingGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallRecordingGetRequest22
        /// </summary>
        public static async Task<SystemCallRecordingGetResponse> SystemCallRecordingGetRequestAsync(this OcipClient client, SystemCallRecordingGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallRecordingGetResponse;
        }
        /// <summary>
        /// Request the system level data associated with Call Recording.
        /// The response is either a SystemCallRecordingGetResponse22 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallRecordingGetRequest23
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallRecordingGetRequest22Async instead.")]
        public static async Task<SystemCallRecordingGetResponse22> SystemCallRecordingGetRequest22(this OcipClient client, SystemCallRecordingGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCallRecordingGetResponse22;
        }

        /// <summary>
        /// Request the system level data associated with Call Recording.
        /// The response is either a SystemCallRecordingGetResponse22 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemCallRecordingGetRequest23
        /// </summary>
        public static async Task<SystemCallRecordingGetResponse22> SystemCallRecordingGetRequest22Async(this OcipClient client, SystemCallRecordingGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCallRecordingGetResponse22;
        }
        /// <summary>
        /// Modify the specified Call Recording platform.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallRecordingModifyPlatformRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallRecordingModifyPlatformRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemCallRecordingModifyPlatformRequest(this OcipClient client, SystemCallRecordingModifyPlatformRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the specified Call Recording platform.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCallRecordingModifyPlatformRequest22
        /// </summary>
        public static async Task<SuccessResponse> SystemCallRecordingModifyPlatformRequestAsync(this OcipClient client, SystemCallRecordingModifyPlatformRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify the system level data associated with Call Recording.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced By: SystemCallRecordingModifyRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCallRecordingModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemCallRecordingModifyRequest(this OcipClient client, SystemCallRecordingModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the system level data associated with Call Recording.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced By: SystemCallRecordingModifyRequest22
        /// </summary>
        public static async Task<SuccessResponse> SystemCallRecordingModifyRequestAsync(this OcipClient client, SystemCallRecordingModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request the system level data associated with collaborate services.
        /// The response is either a SystemCollaborateGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCollaborateGetRequest20sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCollaborateGetRequestAsync instead.")]
        public static async Task<SystemCollaborateGetResponse> SystemCollaborateGetRequest(this OcipClient client, SystemCollaborateGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCollaborateGetResponse;
        }

        /// <summary>
        /// Request the system level data associated with collaborate services.
        /// The response is either a SystemCollaborateGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCollaborateGetRequest20sp1
        /// </summary>
        public static async Task<SystemCollaborateGetResponse> SystemCollaborateGetRequestAsync(this OcipClient client, SystemCollaborateGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCollaborateGetResponse;
        }
        /// <summary>
        /// Request the system level data associated with collaborate services.
        /// The response is either a SystemCollaborateGetResponse20sp1 or an ErrorResponse.
        /// 
        /// Replaced by: SystemCollaborateGetRequest20sp1V2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCollaborateGetRequest20sp1Async instead.")]
        public static async Task<SystemCollaborateGetResponse20sp1> SystemCollaborateGetRequest20sp1(this OcipClient client, SystemCollaborateGetRequest20sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCollaborateGetResponse20sp1;
        }

        /// <summary>
        /// Request the system level data associated with collaborate services.
        /// The response is either a SystemCollaborateGetResponse20sp1 or an ErrorResponse.
        /// 
        /// Replaced by: SystemCollaborateGetRequest20sp1V2
        /// </summary>
        public static async Task<SystemCollaborateGetResponse20sp1> SystemCollaborateGetRequest20sp1Async(this OcipClient client, SystemCollaborateGetRequest20sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCollaborateGetResponse20sp1;
        }
        /// <summary>
        /// Modify the system level data associated with collaborate services.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCollaborateModifyRequest20sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCollaborateModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemCollaborateModifyRequest(this OcipClient client, SystemCollaborateModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the system level data associated with collaborate services.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemCollaborateModifyRequest20sp1
        /// </summary>
        public static async Task<SuccessResponse> SystemCollaborateModifyRequestAsync(this OcipClient client, SystemCollaborateModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify the system level data associated with collaborate services.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by SystemCollaborateModifyRequest20sp1V2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCollaborateModifyRequest20sp1Async instead.")]
        public static async Task<SuccessResponse> SystemCollaborateModifyRequest20sp1(this OcipClient client, SystemCollaborateModifyRequest20sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the system level data associated with collaborate services.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by SystemCollaborateModifyRequest20sp1V2
        /// </summary>
        public static async Task<SuccessResponse> SystemCollaborateModifyRequest20sp1Async(this OcipClient client, SystemCollaborateModifyRequest20sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a new Communication Barring Criteria.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemCommunicationBarringCriteriaAddRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCommunicationBarringCriteriaAddRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemCommunicationBarringCriteriaAddRequest(this OcipClient client, SystemCommunicationBarringCriteriaAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a new Communication Barring Criteria.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemCommunicationBarringCriteriaAddRequest17
        /// </summary>
        public static async Task<SuccessResponse> SystemCommunicationBarringCriteriaAddRequestAsync(this OcipClient client, SystemCommunicationBarringCriteriaAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get an existing Communication Barring Criteria.
        /// The response is either a SystemCommunicationBarringCriteriaGetResponse
        /// or an ErrorResponse.
        /// Replaced by: SystemCommunicationBarringCriteriaGetRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCommunicationBarringCriteriaGetRequestAsync instead.")]
        public static async Task<SystemCommunicationBarringCriteriaGetResponse> SystemCommunicationBarringCriteriaGetRequest(this OcipClient client, SystemCommunicationBarringCriteriaGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCommunicationBarringCriteriaGetResponse;
        }

        /// <summary>
        /// Get an existing Communication Barring Criteria.
        /// The response is either a SystemCommunicationBarringCriteriaGetResponse
        /// or an ErrorResponse.
        /// Replaced by: SystemCommunicationBarringCriteriaGetRequest17
        /// </summary>
        public static async Task<SystemCommunicationBarringCriteriaGetResponse> SystemCommunicationBarringCriteriaGetRequestAsync(this OcipClient client, SystemCommunicationBarringCriteriaGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCommunicationBarringCriteriaGetResponse;
        }
        /// <summary>
        /// Get an existing Communication Barring Criteria.
        /// The response is either a SystemCommunicationBarringCriteriaGetResponse17 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCommunicationBarringCriteriaGetRequest17Async instead.")]
        public static async Task<SystemCommunicationBarringCriteriaGetResponse17> SystemCommunicationBarringCriteriaGetRequest17(this OcipClient client, SystemCommunicationBarringCriteriaGetRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCommunicationBarringCriteriaGetResponse17;
        }

        /// <summary>
        /// Get an existing Communication Barring Criteria.
        /// The response is either a SystemCommunicationBarringCriteriaGetResponse17 or an ErrorResponse.
        /// </summary>
        public static async Task<SystemCommunicationBarringCriteriaGetResponse17> SystemCommunicationBarringCriteriaGetRequest17Async(this OcipClient client, SystemCommunicationBarringCriteriaGetRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCommunicationBarringCriteriaGetResponse17;
        }
        /// <summary>
        /// Add a new Communication Barring Profile.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCommunicationBarringProfileAddRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemCommunicationBarringProfileAddRequest(this OcipClient client, SystemCommunicationBarringProfileAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a new Communication Barring Profile.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemCommunicationBarringProfileAddRequestAsync(this OcipClient client, SystemCommunicationBarringProfileAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a new Communication Barring Profile.
        /// The priorities for IncomingRules are requantized to consecutive integers as part of the add.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// The following elements are only used in XS data mode:
        /// incomingDefaultAction
        /// incomingDefaultCallTimeout
        /// incomingRule
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCommunicationBarringProfileAddRequest17sp1Async instead.")]
        public static async Task<SuccessResponse> SystemCommunicationBarringProfileAddRequest17sp1(this OcipClient client, SystemCommunicationBarringProfileAddRequest17sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a new Communication Barring Profile.
        /// The priorities for IncomingRules are requantized to consecutive integers as part of the add.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// The following elements are only used in XS data mode:
        /// incomingDefaultAction
        /// incomingDefaultCallTimeout
        /// incomingRule
        /// </summary>
        public static async Task<SuccessResponse> SystemCommunicationBarringProfileAddRequest17sp1Async(this OcipClient client, SystemCommunicationBarringProfileAddRequest17sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get an existing Communication Barring Profile.
        /// The response is either a SystemCommunicationBarringProfileGetResponse or an ErrorResponse.
        /// Replaced by: SystemCommunicationBarringProfileGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCommunicationBarringProfileGetRequestAsync instead.")]
        public static async Task<SystemCommunicationBarringProfileGetResponse> SystemCommunicationBarringProfileGetRequest(this OcipClient client, SystemCommunicationBarringProfileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCommunicationBarringProfileGetResponse;
        }

        /// <summary>
        /// Get an existing Communication Barring Profile.
        /// The response is either a SystemCommunicationBarringProfileGetResponse or an ErrorResponse.
        /// Replaced by: SystemCommunicationBarringProfileGetRequest16
        /// </summary>
        public static async Task<SystemCommunicationBarringProfileGetResponse> SystemCommunicationBarringProfileGetRequestAsync(this OcipClient client, SystemCommunicationBarringProfileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCommunicationBarringProfileGetResponse;
        }
        /// <summary>
        /// Get an existing Communication Barring Profile.
        /// The response is either a SystemCommunicationBarringProfileGetResponse16 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCommunicationBarringProfileGetRequest16Async instead.")]
        public static async Task<SystemCommunicationBarringProfileGetResponse16> SystemCommunicationBarringProfileGetRequest16(this OcipClient client, SystemCommunicationBarringProfileGetRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCommunicationBarringProfileGetResponse16;
        }

        /// <summary>
        /// Get an existing Communication Barring Profile.
        /// The response is either a SystemCommunicationBarringProfileGetResponse16 or an ErrorResponse.
        /// </summary>
        public static async Task<SystemCommunicationBarringProfileGetResponse16> SystemCommunicationBarringProfileGetRequest16Async(this OcipClient client, SystemCommunicationBarringProfileGetRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCommunicationBarringProfileGetResponse16;
        }
        /// <summary>
        /// Get an existing Communication Barring Profile.
        /// The response is either a SystemCommunicationBarringProfileGetResponse17sp1
        /// or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCommunicationBarringProfileGetRequest17sp1Async instead.")]
        public static async Task<SystemCommunicationBarringProfileGetResponse17sp1> SystemCommunicationBarringProfileGetRequest17sp1(this OcipClient client, SystemCommunicationBarringProfileGetRequest17sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCommunicationBarringProfileGetResponse17sp1;
        }

        /// <summary>
        /// Get an existing Communication Barring Profile.
        /// The response is either a SystemCommunicationBarringProfileGetResponse17sp1
        /// or an ErrorResponse.
        /// </summary>
        public static async Task<SystemCommunicationBarringProfileGetResponse17sp1> SystemCommunicationBarringProfileGetRequest17sp1Async(this OcipClient client, SystemCommunicationBarringProfileGetRequest17sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCommunicationBarringProfileGetResponse17sp1;
        }
        /// <summary>
        /// Get all the attributes of a configurable treatment.
        /// The response is either a SystemConfigurableTreatmentGetResponse or an ErrorResponse.
        /// Replaced By: SystemConfigurableTreatmentGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemConfigurableTreatmentGetRequestAsync instead.")]
        public static async Task<SystemConfigurableTreatmentGetResponse> SystemConfigurableTreatmentGetRequest(this OcipClient client, SystemConfigurableTreatmentGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemConfigurableTreatmentGetResponse;
        }

        /// <summary>
        /// Get all the attributes of a configurable treatment.
        /// The response is either a SystemConfigurableTreatmentGetResponse or an ErrorResponse.
        /// Replaced By: SystemConfigurableTreatmentGetRequest16
        /// </summary>
        public static async Task<SystemConfigurableTreatmentGetResponse> SystemConfigurableTreatmentGetRequestAsync(this OcipClient client, SystemConfigurableTreatmentGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemConfigurableTreatmentGetResponse;
        }
        /// <summary>
        /// Add a device CPE config file server.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: SystemCPEConfigAddFileServerRequest14sp6
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCPEConfigAddFileServerRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemCPEConfigAddFileServerRequest(this OcipClient client, SystemCPEConfigAddFileServerRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a device CPE config file server.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: SystemCPEConfigAddFileServerRequest14sp6
        /// </summary>
        public static async Task<SuccessResponse> SystemCPEConfigAddFileServerRequestAsync(this OcipClient client, SystemCPEConfigAddFileServerRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Requests the list of device CPE config file servers.
        /// The response is either SystemCPEConfigGetFileServerListResponse or ErrorResponse.
        /// Replaced By: SystemCPEConfigGetFileServerListRequest14sp6
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCPEConfigGetFileServerListRequestAsync instead.")]
        public static async Task<SystemCPEConfigGetFileServerListResponse> SystemCPEConfigGetFileServerListRequest(this OcipClient client, SystemCPEConfigGetFileServerListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCPEConfigGetFileServerListResponse;
        }

        /// <summary>
        /// Requests the list of device CPE config file servers.
        /// The response is either SystemCPEConfigGetFileServerListResponse or ErrorResponse.
        /// Replaced By: SystemCPEConfigGetFileServerListRequest14sp6
        /// </summary>
        public static async Task<SystemCPEConfigGetFileServerListResponse> SystemCPEConfigGetFileServerListRequestAsync(this OcipClient client, SystemCPEConfigGetFileServerListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCPEConfigGetFileServerListResponse;
        }
        /// <summary>
        /// Modify a device CPE config file server.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: SystemCPEConfigModifyFileServerRequest14sp6
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCPEConfigModifyFileServerRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemCPEConfigModifyFileServerRequest(this OcipClient client, SystemCPEConfigModifyFileServerRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a device CPE config file server.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: SystemCPEConfigModifyFileServerRequest14sp6
        /// </summary>
        public static async Task<SuccessResponse> SystemCPEConfigModifyFileServerRequestAsync(this OcipClient client, SystemCPEConfigModifyFileServerRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get the list of CPE Config system parameters.
        /// The response is either SystemCPEConfigParametersGetResponse or ErrorResponse.
        /// Replaced By: SystemCPEConfigParametersGetRequest14sp6
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCPEConfigParametersGetRequestAsync instead.")]
        public static async Task<SystemCPEConfigParametersGetResponse> SystemCPEConfigParametersGetRequest(this OcipClient client, SystemCPEConfigParametersGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCPEConfigParametersGetResponse;
        }

        /// <summary>
        /// Request to get the list of CPE Config system parameters.
        /// The response is either SystemCPEConfigParametersGetResponse or ErrorResponse.
        /// Replaced By: SystemCPEConfigParametersGetRequest14sp6
        /// </summary>
        public static async Task<SystemCPEConfigParametersGetResponse> SystemCPEConfigParametersGetRequestAsync(this OcipClient client, SystemCPEConfigParametersGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCPEConfigParametersGetResponse;
        }
        /// <summary>
        /// Request to get the list of CPE Config system parameters.
        /// The response is either SystemCPEConfigParametersGetResponse14sp6 or ErrorResponse.
        /// 
        /// Replaced by: SystemCPEConfigParametersGetRequest20
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCPEConfigParametersGetRequest14sp6Async instead.")]
        public static async Task<SystemCPEConfigParametersGetResponse14sp6> SystemCPEConfigParametersGetRequest14sp6(this OcipClient client, SystemCPEConfigParametersGetRequest14sp6 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCPEConfigParametersGetResponse14sp6;
        }

        /// <summary>
        /// Request to get the list of CPE Config system parameters.
        /// The response is either SystemCPEConfigParametersGetResponse14sp6 or ErrorResponse.
        /// 
        /// Replaced by: SystemCPEConfigParametersGetRequest20
        /// </summary>
        public static async Task<SystemCPEConfigParametersGetResponse14sp6> SystemCPEConfigParametersGetRequest14sp6Async(this OcipClient client, SystemCPEConfigParametersGetRequest14sp6 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCPEConfigParametersGetResponse14sp6;
        }
        /// <summary>
        /// Request to get the list of CPE Config system parameters.
        /// The response is either SystemCPEConfigParametersGetResponse20 or ErrorResponse.
        /// 
        /// Replaced by: SystemCPEConfigParametersGetRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCPEConfigParametersGetRequest20Async instead.")]
        public static async Task<SystemCPEConfigParametersGetResponse20> SystemCPEConfigParametersGetRequest20(this OcipClient client, SystemCPEConfigParametersGetRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCPEConfigParametersGetResponse20;
        }

        /// <summary>
        /// Request to get the list of CPE Config system parameters.
        /// The response is either SystemCPEConfigParametersGetResponse20 or ErrorResponse.
        /// 
        /// Replaced by: SystemCPEConfigParametersGetRequest21
        /// </summary>
        public static async Task<SystemCPEConfigParametersGetResponse20> SystemCPEConfigParametersGetRequest20Async(this OcipClient client, SystemCPEConfigParametersGetRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCPEConfigParametersGetResponse20;
        }
        /// <summary>
        /// Request to modify CPE Config system parameters.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemCPEConfigParametersModifyRequest20.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCPEConfigParametersModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemCPEConfigParametersModifyRequest(this OcipClient client, SystemCPEConfigParametersModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify CPE Config system parameters.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemCPEConfigParametersModifyRequest20.
        /// </summary>
        public static async Task<SuccessResponse> SystemCPEConfigParametersModifyRequestAsync(this OcipClient client, SystemCPEConfigParametersModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify CPE Config system parameters.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemCPEConfigParametersModifyRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCPEConfigParametersModifyRequest20Async instead.")]
        public static async Task<SuccessResponse> SystemCPEConfigParametersModifyRequest20(this OcipClient client, SystemCPEConfigParametersModifyRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify CPE Config system parameters.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemCPEConfigParametersModifyRequest21
        /// </summary>
        public static async Task<SuccessResponse> SystemCPEConfigParametersModifyRequest20Async(this OcipClient client, SystemCPEConfigParametersModifyRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Gets the system level attributes of the Cr Interface.
        /// The response is either a SystemCrInterfaceGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemCrInterfaceGetRequestAsync instead.")]
        public static async Task<SystemCrInterfaceGetResponse> SystemCrInterfaceGetRequest(this OcipClient client, SystemCrInterfaceGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemCrInterfaceGetResponse;
        }

        /// <summary>
        /// Gets the system level attributes of the Cr Interface.
        /// The response is either a SystemCrInterfaceGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SystemCrInterfaceGetResponse> SystemCrInterfaceGetRequestAsync(this OcipClient client, SystemCrInterfaceGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemCrInterfaceGetResponse;
        }
        /// <summary>
        /// Request device management's events for a specific queue.
        /// It is possible to restrict the number of rows returned using
        /// responseSizeLimit.
        /// If eventQueueType is not specified, the events from all the
        /// event queues are returned.
        /// The response is either a SystemDeviceManagementEventGetListResponse or an ErrorResponse.
        /// 
        /// Deprecated by: SystemDeviceManagementEventGetListRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemDeviceManagementEventGetListRequestAsync instead.")]
        public static async Task<SystemDeviceManagementEventGetListResponse> SystemDeviceManagementEventGetListRequest(this OcipClient client, SystemDeviceManagementEventGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemDeviceManagementEventGetListResponse;
        }

        /// <summary>
        /// Request device management's events for a specific queue.
        /// It is possible to restrict the number of rows returned using
        /// responseSizeLimit.
        /// If eventQueueType is not specified, the events from all the
        /// event queues are returned.
        /// The response is either a SystemDeviceManagementEventGetListResponse or an ErrorResponse.
        /// 
        /// Deprecated by: SystemDeviceManagementEventGetListRequest22.
        /// </summary>
        public static async Task<SystemDeviceManagementEventGetListResponse> SystemDeviceManagementEventGetListRequestAsync(this OcipClient client, SystemDeviceManagementEventGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemDeviceManagementEventGetListResponse;
        }
        /// <summary>
        /// Request to add a static configuration tag.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemDeviceManagementTagAddRequest21sp2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemDeviceManagementTagAddRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemDeviceManagementTagAddRequest(this OcipClient client, SystemDeviceManagementTagAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a static configuration tag.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemDeviceManagementTagAddRequest21sp2
        /// </summary>
        public static async Task<SuccessResponse> SystemDeviceManagementTagAddRequestAsync(this OcipClient client, SystemDeviceManagementTagAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a static configuration tag.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemDeviceManagementTagAddRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemDeviceManagementTagAddRequest21sp2Async instead.")]
        public static async Task<SuccessResponse> SystemDeviceManagementTagAddRequest21sp2(this OcipClient client, SystemDeviceManagementTagAddRequest21sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a static configuration tag.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemDeviceManagementTagAddRequest22
        /// </summary>
        public static async Task<SuccessResponse> SystemDeviceManagementTagAddRequest21sp2Async(this OcipClient client, SystemDeviceManagementTagAddRequest21sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Requests a list of non-obsolete Identity/device profile types defined in the system. It is possible
        /// to get either all conference device types or all non-conferernce types. This command is similar
        /// to the SystemSIPDeviceTypeGetListRequest and SystemMGCPDeviceTypeGetListRequest
        /// but gets both SIP and MGCP types.
        /// The response is either SystemDeviceTypeGetAvailableListResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemDeviceTypeGetAvailableListRequestAsync instead.")]
        public static async Task<SystemDeviceTypeGetAvailableListResponse> SystemDeviceTypeGetAvailableListRequest(this OcipClient client, SystemDeviceTypeGetAvailableListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemDeviceTypeGetAvailableListResponse;
        }

        /// <summary>
        /// Requests a list of non-obsolete Identity/device profile types defined in the system. It is possible
        /// to get either all conference device types or all non-conferernce types. This command is similar
        /// to the SystemSIPDeviceTypeGetListRequest and SystemMGCPDeviceTypeGetListRequest
        /// but gets both SIP and MGCP types.
        /// The response is either SystemDeviceTypeGetAvailableListResponse or ErrorResponse.
        /// </summary>
        public static async Task<SystemDeviceTypeGetAvailableListResponse> SystemDeviceTypeGetAvailableListRequestAsync(this OcipClient client, SystemDeviceTypeGetAvailableListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemDeviceTypeGetAvailableListResponse;
        }
        /// <summary>
        /// Requests a list of non-obsolete Identity/device profile types defined in the system. It is possible
        /// to get either all conference device types or all non-conferernce types. This command is similar
        /// to the SystemSIPDeviceTypeGetListRequest and SystemMGCPDeviceTypeGetListRequest
        /// but gets both SIP and MGCP types.
        /// The response is either SystemDeviceTypeGetAvailableListResponse14sp1 or ErrorResponse.
        /// Replaced By: SystemDeviceTypeGetAvailableListRequest14sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemDeviceTypeGetAvailableListRequest14sp1Async instead.")]
        public static async Task<SystemDeviceTypeGetAvailableListResponse14sp1> SystemDeviceTypeGetAvailableListRequest14sp1(this OcipClient client, SystemDeviceTypeGetAvailableListRequest14sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemDeviceTypeGetAvailableListResponse14sp1;
        }

        /// <summary>
        /// Requests a list of non-obsolete Identity/device profile types defined in the system. It is possible
        /// to get either all conference device types or all non-conferernce types. This command is similar
        /// to the SystemSIPDeviceTypeGetListRequest and SystemMGCPDeviceTypeGetListRequest
        /// but gets both SIP and MGCP types.
        /// The response is either SystemDeviceTypeGetAvailableListResponse14sp1 or ErrorResponse.
        /// Replaced By: SystemDeviceTypeGetAvailableListRequest14sp3
        /// </summary>
        public static async Task<SystemDeviceTypeGetAvailableListResponse14sp1> SystemDeviceTypeGetAvailableListRequest14sp1Async(this OcipClient client, SystemDeviceTypeGetAvailableListRequest14sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemDeviceTypeGetAvailableListResponse14sp1;
        }
        /// <summary>
        /// Requests a list of non-obsolete Identity/device profile types defined in the system. It is possible
        /// to get either all conference device types or all non-conferernce types. This command is similar
        /// to the SystemSIPDeviceTypeGetListRequest and SystemMGCPDeviceTypeGetListRequest
        /// but gets both SIP and MGCP types.
        /// The response is either SystemDeviceTypeGetAvailableListResponse14sp3 or ErrorResponse.
        /// 
        /// Replaced by: SystemDeviceTypeGetAvailableListRequest19.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemDeviceTypeGetAvailableListRequest14sp3Async instead.")]
        public static async Task<SystemDeviceTypeGetAvailableListResponse14sp3> SystemDeviceTypeGetAvailableListRequest14sp3(this OcipClient client, SystemDeviceTypeGetAvailableListRequest14sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemDeviceTypeGetAvailableListResponse14sp3;
        }

        /// <summary>
        /// Requests a list of non-obsolete Identity/device profile types defined in the system. It is possible
        /// to get either all conference device types or all non-conferernce types. This command is similar
        /// to the SystemSIPDeviceTypeGetListRequest and SystemMGCPDeviceTypeGetListRequest
        /// but gets both SIP and MGCP types.
        /// The response is either SystemDeviceTypeGetAvailableListResponse14sp3 or ErrorResponse.
        /// 
        /// Replaced by: SystemDeviceTypeGetAvailableListRequest19.
        /// </summary>
        public static async Task<SystemDeviceTypeGetAvailableListResponse14sp3> SystemDeviceTypeGetAvailableListRequest14sp3Async(this OcipClient client, SystemDeviceTypeGetAvailableListRequest14sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemDeviceTypeGetAvailableListResponse14sp3;
        }
        /// <summary>
        /// Requests the information about the specified device type without regard to whether the
        /// type is SIP or MGCP.
        /// The response is either SystemDeviceTypeGetResponse or ErrorResponse.
        /// Replaced By: SystemDeviceTypeGetRequest14sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemDeviceTypeGetRequestAsync instead.")]
        public static async Task<SystemDeviceTypeGetResponse> SystemDeviceTypeGetRequest(this OcipClient client, SystemDeviceTypeGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemDeviceTypeGetResponse;
        }

        /// <summary>
        /// Requests the information about the specified device type without regard to whether the
        /// type is SIP or MGCP.
        /// The response is either SystemDeviceTypeGetResponse or ErrorResponse.
        /// Replaced By: SystemDeviceTypeGetRequest14sp3
        /// </summary>
        public static async Task<SystemDeviceTypeGetResponse> SystemDeviceTypeGetRequestAsync(this OcipClient client, SystemDeviceTypeGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemDeviceTypeGetResponse;
        }
        /// <summary>
        /// Requests the information about the specified device type without regard to whether the
        /// type is SIP or MGCP.
        /// The response is either SystemDeviceTypeGetResponse14sp3 or ErrorResponse.
        /// Replaced By: SystemDeviceTypeGetRequest14sp6
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemDeviceTypeGetRequest14sp3Async instead.")]
        public static async Task<SystemDeviceTypeGetResponse14sp3> SystemDeviceTypeGetRequest14sp3(this OcipClient client, SystemDeviceTypeGetRequest14sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemDeviceTypeGetResponse14sp3;
        }

        /// <summary>
        /// Requests the information about the specified device type without regard to whether the
        /// type is SIP or MGCP.
        /// The response is either SystemDeviceTypeGetResponse14sp3 or ErrorResponse.
        /// Replaced By: SystemDeviceTypeGetRequest14sp6
        /// </summary>
        public static async Task<SystemDeviceTypeGetResponse14sp3> SystemDeviceTypeGetRequest14sp3Async(this OcipClient client, SystemDeviceTypeGetRequest14sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemDeviceTypeGetResponse14sp3;
        }
        /// <summary>
        /// Requests the information about the specified device type without regard to whether the
        /// type is SIP or MGCP.
        /// The response is either SystemDeviceTypeGetResponse14sp6 or ErrorResponse.
        /// Replaced by: SystemDeviceTypeGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemDeviceTypeGetRequest14sp6Async instead.")]
        public static async Task<SystemDeviceTypeGetResponse14sp6> SystemDeviceTypeGetRequest14sp6(this OcipClient client, SystemDeviceTypeGetRequest14sp6 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemDeviceTypeGetResponse14sp6;
        }

        /// <summary>
        /// Requests the information about the specified device type without regard to whether the
        /// type is SIP or MGCP.
        /// The response is either SystemDeviceTypeGetResponse14sp6 or ErrorResponse.
        /// Replaced by: SystemDeviceTypeGetRequest16
        /// </summary>
        public static async Task<SystemDeviceTypeGetResponse14sp6> SystemDeviceTypeGetRequest14sp6Async(this OcipClient client, SystemDeviceTypeGetRequest14sp6 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemDeviceTypeGetResponse14sp6;
        }
        /// <summary>
        /// Requests the information about the specified device type without regard to whether the
        /// type is SIP or MGCP.
        /// The response is either SystemDeviceTypeGetResponse16 or ErrorResponse.
        /// Replaced by: SystemDeviceTypeGetRequest16sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemDeviceTypeGetRequest16Async instead.")]
        public static async Task<SystemDeviceTypeGetResponse16> SystemDeviceTypeGetRequest16(this OcipClient client, SystemDeviceTypeGetRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemDeviceTypeGetResponse16;
        }

        /// <summary>
        /// Requests the information about the specified device type without regard to whether the
        /// type is SIP or MGCP.
        /// The response is either SystemDeviceTypeGetResponse16 or ErrorResponse.
        /// Replaced by: SystemDeviceTypeGetRequest16sp1
        /// </summary>
        public static async Task<SystemDeviceTypeGetResponse16> SystemDeviceTypeGetRequest16Async(this OcipClient client, SystemDeviceTypeGetRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemDeviceTypeGetResponse16;
        }
        /// <summary>
        /// Replaced by: SystemDeviceTypeGetRequest18.
        /// Requests the information about the specified device type without regard to whether the
        /// type is SIP or MGCP.
        /// The response is either SystemDeviceTypeGetResponse16sp1 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemDeviceTypeGetRequest16sp1Async instead.")]
        public static async Task<SystemDeviceTypeGetResponse16sp1> SystemDeviceTypeGetRequest16sp1(this OcipClient client, SystemDeviceTypeGetRequest16sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemDeviceTypeGetResponse16sp1;
        }

        /// <summary>
        /// Replaced by: SystemDeviceTypeGetRequest18.
        /// Requests the information about the specified device type without regard to whether the
        /// type is SIP or MGCP.
        /// The response is either SystemDeviceTypeGetResponse16sp1 or ErrorResponse.
        /// </summary>
        public static async Task<SystemDeviceTypeGetResponse16sp1> SystemDeviceTypeGetRequest16sp1Async(this OcipClient client, SystemDeviceTypeGetRequest16sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemDeviceTypeGetResponse16sp1;
        }
        /// <summary>
        /// Requests the information about the specified device type without regard to whether the
        /// type is SIP or MGCP.
        /// The response is either SystemDeviceTypeGetResponse18 or ErrorResponse.
        /// Note: The elements deviceTypeConfigurationOption applies to SIP device types only. Therefore, only present in the response when the device type is SIP.
        /// Replaced by: SystemSIPDeviceTypeGetRequest19.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemDeviceTypeGetRequest18Async instead.")]
        public static async Task<SystemDeviceTypeGetResponse18> SystemDeviceTypeGetRequest18(this OcipClient client, SystemDeviceTypeGetRequest18 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemDeviceTypeGetResponse18;
        }

        /// <summary>
        /// Requests the information about the specified device type without regard to whether the
        /// type is SIP or MGCP.
        /// The response is either SystemDeviceTypeGetResponse18 or ErrorResponse.
        /// Note: The elements deviceTypeConfigurationOption applies to SIP device types only. Therefore, only present in the response when the device type is SIP.
        /// Replaced by: SystemSIPDeviceTypeGetRequest19.
        /// </summary>
        public static async Task<SystemDeviceTypeGetResponse18> SystemDeviceTypeGetRequest18Async(this OcipClient client, SystemDeviceTypeGetRequest18 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemDeviceTypeGetResponse18;
        }
        /// <summary>
        /// Requests the information about the specified device type without regard to whether the
        /// type is SIP or MGCP.
        /// The response is either SystemDeviceTypeGetResponse19 or ErrorResponse.
        /// Note: The elements deviceTypeConfigurationOption and staticLineOrdering apply to SIP device types only. Therefore, only present in the response when the device type is SIP.
        /// 
        /// Replaced by: SystemSIPDeviceTypeGetRequest21sp1.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemDeviceTypeGetRequest19Async instead.")]
        public static async Task<SystemDeviceTypeGetResponse19> SystemDeviceTypeGetRequest19(this OcipClient client, SystemDeviceTypeGetRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemDeviceTypeGetResponse19;
        }

        /// <summary>
        /// Requests the information about the specified device type without regard to whether the
        /// type is SIP or MGCP.
        /// The response is either SystemDeviceTypeGetResponse19 or ErrorResponse.
        /// Note: The elements deviceTypeConfigurationOption and staticLineOrdering apply to SIP device types only. Therefore, only present in the response when the device type is SIP.
        /// 
        /// Replaced by: SystemSIPDeviceTypeGetRequest21sp1.
        /// </summary>
        public static async Task<SystemDeviceTypeGetResponse19> SystemDeviceTypeGetRequest19Async(this OcipClient client, SystemDeviceTypeGetRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemDeviceTypeGetResponse19;
        }
        /// <summary>
        /// Requests the information about the specified device type without regard to whether the
        /// type is SIP or MGCP.
        /// The response is either SystemDeviceTypeGetResponse21sp1 or ErrorResponse.
        /// Note: The elements deviceTypeConfigurationOption and staticLineOrdering apply to SIP device types only. Therefore, only present in the response when the device type is SIP.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemDeviceTypeGetRequest21sp1Async instead.")]
        public static async Task<SystemDeviceTypeGetResponse21sp1> SystemDeviceTypeGetRequest21sp1(this OcipClient client, SystemDeviceTypeGetRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemDeviceTypeGetResponse21sp1;
        }

        /// <summary>
        /// Requests the information about the specified device type without regard to whether the
        /// type is SIP or MGCP.
        /// The response is either SystemDeviceTypeGetResponse21sp1 or ErrorResponse.
        /// Note: The elements deviceTypeConfigurationOption and staticLineOrdering apply to SIP device types only. Therefore, only present in the response when the device type is SIP.
        /// </summary>
        public static async Task<SystemDeviceTypeGetResponse21sp1> SystemDeviceTypeGetRequest21sp1Async(this OcipClient client, SystemDeviceTypeGetRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemDeviceTypeGetResponse21sp1;
        }
        /// <summary>
        /// Requests the information about the specified device type without regard to whether the
        /// type is SIP or MGCP.
        /// The response is either SystemDeviceTypeGetResponse22 or ErrorResponse.
        /// Note: The elements deviceTypeConfigurationOption and staticLineOrdering apply to SIP device types only. Therefore, only present in the response when the device type is SIP.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemDeviceTypeGetRequest22Async instead.")]
        public static async Task<SystemDeviceTypeGetResponse22> SystemDeviceTypeGetRequest22(this OcipClient client, SystemDeviceTypeGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemDeviceTypeGetResponse22;
        }

        /// <summary>
        /// Requests the information about the specified device type without regard to whether the
        /// type is SIP or MGCP.
        /// The response is either SystemDeviceTypeGetResponse22 or ErrorResponse.
        /// Note: The elements deviceTypeConfigurationOption and staticLineOrdering apply to SIP device types only. Therefore, only present in the response when the device type is SIP.
        /// </summary>
        public static async Task<SystemDeviceTypeGetResponse22> SystemDeviceTypeGetRequest22Async(this OcipClient client, SystemDeviceTypeGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemDeviceTypeGetResponse22;
        }
        /// <summary>
        /// Request the system level data associated with Dial Plan Policy.
        /// The response is either a SystemDialPlanPolicyGetResponse or an
        /// ErrorResponse.
        /// Replaced by: SystemDialPlanPolicyGetRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemDialPlanPolicyGetRequestAsync instead.")]
        public static async Task<SystemDialPlanPolicyGetResponse> SystemDialPlanPolicyGetRequest(this OcipClient client, SystemDialPlanPolicyGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemDialPlanPolicyGetResponse;
        }

        /// <summary>
        /// Request the system level data associated with Dial Plan Policy.
        /// The response is either a SystemDialPlanPolicyGetResponse or an
        /// ErrorResponse.
        /// Replaced by: SystemDialPlanPolicyGetRequest17
        /// </summary>
        public static async Task<SystemDialPlanPolicyGetResponse> SystemDialPlanPolicyGetRequestAsync(this OcipClient client, SystemDialPlanPolicyGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemDialPlanPolicyGetResponse;
        }
        /// <summary>
        /// Get the utilization of a single DN.
        /// The response is either SystemDnGetUtilizationResponse or ErrorResponse.
        /// Replaced By: SystemDnGetUtilizationRequest14sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemDnGetUtilizationRequestAsync instead.")]
        public static async Task<SystemDnGetUtilizationResponse> SystemDnGetUtilizationRequest(this OcipClient client, SystemDnGetUtilizationRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemDnGetUtilizationResponse;
        }

        /// <summary>
        /// Get the utilization of a single DN.
        /// The response is either SystemDnGetUtilizationResponse or ErrorResponse.
        /// Replaced By: SystemDnGetUtilizationRequest14sp3
        /// </summary>
        public static async Task<SystemDnGetUtilizationResponse> SystemDnGetUtilizationRequestAsync(this OcipClient client, SystemDnGetUtilizationRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemDnGetUtilizationResponse;
        }
        /// <summary>
        /// Requests the list of all matching system-level domains and all matching reseller level domains.
        /// If excludeReseller is specified, returns all matching system-level domain names only.
        /// If resellerId is specified, returns all matching system-level domain names and the given reseller's domains.
        /// If reseller administrator sends the request and resellerId is not specified, the administrator's resellerId is used.
        /// 
        /// The response is either SystemDomainGetListResponse22 or ErrorResponse.
        /// 
        /// The following elements are only used in AS data mode:
        /// includeReseller
        /// resellerId
        /// 
        /// Replaced by SystemDomainGetListRequest22V2 in AS data mode.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemDomainGetListRequest22Async instead.")]
        public static async Task<SystemDomainGetListResponse22> SystemDomainGetListRequest22(this OcipClient client, SystemDomainGetListRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemDomainGetListResponse22;
        }

        /// <summary>
        /// Requests the list of all matching system-level domains and all matching reseller level domains.
        /// If excludeReseller is specified, returns all matching system-level domain names only.
        /// If resellerId is specified, returns all matching system-level domain names and the given reseller's domains.
        /// If reseller administrator sends the request and resellerId is not specified, the administrator's resellerId is used.
        /// 
        /// The response is either SystemDomainGetListResponse22 or ErrorResponse.
        /// 
        /// The following elements are only used in AS data mode:
        /// includeReseller
        /// resellerId
        /// 
        /// Replaced by SystemDomainGetListRequest22V2 in AS data mode.
        /// </summary>
        public static async Task<SystemDomainGetListResponse22> SystemDomainGetListRequest22Async(this OcipClient client, SystemDomainGetListRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemDomainGetListResponse22;
        }
        /// <summary>
        /// Request the system level data associated with Enhanced Call Logs.
        /// The response is either a SystemEnhancedCallLogsGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemEnhancedCallLogsGetRequestAsync instead.")]
        public static async Task<SystemEnhancedCallLogsGetResponse> SystemEnhancedCallLogsGetRequest(this OcipClient client, SystemEnhancedCallLogsGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemEnhancedCallLogsGetResponse;
        }

        /// <summary>
        /// Request the system level data associated with Enhanced Call Logs.
        /// The response is either a SystemEnhancedCallLogsGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SystemEnhancedCallLogsGetResponse> SystemEnhancedCallLogsGetRequestAsync(this OcipClient client, SystemEnhancedCallLogsGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemEnhancedCallLogsGetResponse;
        }
        /// <summary>
        /// Request the system level data associated with Enhanced Call Logs. The response is either a SystemEnhancedCallLogsGetResponse17sp4 or an ErrorResponse.
        /// Replaced by:SystemEnhancedCallLogsGetRequest20sp1 in AS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemEnhancedCallLogsGetRequest17sp4Async instead.")]
        public static async Task<SystemEnhancedCallLogsGetResponse17sp4> SystemEnhancedCallLogsGetRequest17sp4(this OcipClient client, SystemEnhancedCallLogsGetRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemEnhancedCallLogsGetResponse17sp4;
        }

        /// <summary>
        /// Request the system level data associated with Enhanced Call Logs. The response is either a SystemEnhancedCallLogsGetResponse17sp4 or an ErrorResponse.
        /// Replaced by:SystemEnhancedCallLogsGetRequest20sp1 in AS data mode
        /// </summary>
        public static async Task<SystemEnhancedCallLogsGetResponse17sp4> SystemEnhancedCallLogsGetRequest17sp4Async(this OcipClient client, SystemEnhancedCallLogsGetRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemEnhancedCallLogsGetResponse17sp4;
        }
        /// <summary>
        /// Request the system level data associated with Enhanced Call Logs. The response is either a  SystemEnhancedCallLogsGetResponse20sp1 or an ErrorResponse.
        /// Replaced by:SystemEnhancedCallLogsGetRequest22 in AS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemEnhancedCallLogsGetRequest20sp1Async instead.")]
        public static async Task<SystemEnhancedCallLogsGetResponse20sp1> SystemEnhancedCallLogsGetRequest20sp1(this OcipClient client, SystemEnhancedCallLogsGetRequest20sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemEnhancedCallLogsGetResponse20sp1;
        }

        /// <summary>
        /// Request the system level data associated with Enhanced Call Logs. The response is either a  SystemEnhancedCallLogsGetResponse20sp1 or an ErrorResponse.
        /// Replaced by:SystemEnhancedCallLogsGetRequest22 in AS data mode
        /// </summary>
        public static async Task<SystemEnhancedCallLogsGetResponse20sp1> SystemEnhancedCallLogsGetRequest20sp1Async(this OcipClient client, SystemEnhancedCallLogsGetRequest20sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemEnhancedCallLogsGetResponse20sp1;
        }
        /// <summary>
        /// Request the system level data associated with Enhanced Call Logs.
        /// Replaced by: SystemEnhancedCallLogsGetRequest24.
        /// The response is either a SystemEnhancedCallLogsGetResponse22 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemEnhancedCallLogsGetRequest22Async instead.")]
        public static async Task<SystemEnhancedCallLogsGetResponse22> SystemEnhancedCallLogsGetRequest22(this OcipClient client, SystemEnhancedCallLogsGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemEnhancedCallLogsGetResponse22;
        }

        /// <summary>
        /// Request the system level data associated with Enhanced Call Logs.
        /// Replaced by: SystemEnhancedCallLogsGetRequest24.
        /// The response is either a SystemEnhancedCallLogsGetResponse22 or an ErrorResponse.
        /// </summary>
        public static async Task<SystemEnhancedCallLogsGetResponse22> SystemEnhancedCallLogsGetRequest22Async(this OcipClient client, SystemEnhancedCallLogsGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemEnhancedCallLogsGetResponse22;
        }
        /// <summary>
        /// Modify the system level data associated with Enhanced Call Logs.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// The following elements are only used in AS data mode:
        /// isSendEnabled
        /// server1NetAddress
        /// server1SendPort
        /// server1RetrievePort
        /// server2NetAddress
        /// server2SendPort
        /// server2RetrievePort
        /// sharedSecret
        /// retransmissionDelayMilliSeconds
        /// maxTransmissions
        /// soapTimeoutSeconds
        /// useDBS
        /// eclQueryApplicationURL
        /// eclQueryDataRepositoryURL
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemEnhancedCallLogsModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemEnhancedCallLogsModifyRequest(this OcipClient client, SystemEnhancedCallLogsModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the system level data associated with Enhanced Call Logs.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// The following elements are only used in AS data mode:
        /// isSendEnabled
        /// server1NetAddress
        /// server1SendPort
        /// server1RetrievePort
        /// server2NetAddress
        /// server2SendPort
        /// server2RetrievePort
        /// sharedSecret
        /// retransmissionDelayMilliSeconds
        /// maxTransmissions
        /// soapTimeoutSeconds
        /// useDBS
        /// eclQueryApplicationURL
        /// eclQueryDataRepositoryURL
        /// </summary>
        public static async Task<SuccessResponse> SystemEnhancedCallLogsModifyRequestAsync(this OcipClient client, SystemEnhancedCallLogsModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get the list of expensive alternate call indicators in the system.
        /// The response is either a SystemExpensiveCallTypeGetListResponse or an ErrorResponse.
        /// Replaced by: SystemExpensiveCallTypeGetListRequest16sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemExpensiveCallTypeGetListRequestAsync instead.")]
        public static async Task<SystemExpensiveCallTypeGetListResponse> SystemExpensiveCallTypeGetListRequest(this OcipClient client, SystemExpensiveCallTypeGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemExpensiveCallTypeGetListResponse;
        }

        /// <summary>
        /// Request to get the list of expensive alternate call indicators in the system.
        /// The response is either a SystemExpensiveCallTypeGetListResponse or an ErrorResponse.
        /// Replaced by: SystemExpensiveCallTypeGetListRequest16sp1
        /// </summary>
        public static async Task<SystemExpensiveCallTypeGetListResponse> SystemExpensiveCallTypeGetListRequestAsync(this OcipClient client, SystemExpensiveCallTypeGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemExpensiveCallTypeGetListResponse;
        }
        /// <summary>
        /// Add an entry to the external authentication access control list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemExternalAuthenticationAddACLEntryRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemExternalAuthenticationAddACLEntryRequest(this OcipClient client, SystemExternalAuthenticationAddACLEntryRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add an entry to the external authentication access control list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemExternalAuthenticationAddACLEntryRequestAsync(this OcipClient client, SystemExternalAuthenticationAddACLEntryRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Delete an entry from the external authentication access control list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemExternalAuthenticationDeleteACLEntryRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemExternalAuthenticationDeleteACLEntryRequest(this OcipClient client, SystemExternalAuthenticationDeleteACLEntryRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Delete an entry from the external authentication access control list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemExternalAuthenticationDeleteACLEntryRequestAsync(this OcipClient client, SystemExternalAuthenticationDeleteACLEntryRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify an entry from the external authentication access control list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemExternalAuthenticationModifyACLEntryRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemExternalAuthenticationModifyACLEntryRequest(this OcipClient client, SystemExternalAuthenticationModifyACLEntryRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify an entry from the external authentication access control list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemExternalAuthenticationModifyACLEntryRequestAsync(this OcipClient client, SystemExternalAuthenticationModifyACLEntryRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get list of default Feature Access Codes defined on system
        /// level.
        /// The response is either SystemFeatureAccessCodeGetListResponse20 or
        /// ErrorResponse.
        /// In release 20 the "Call Recording" FAC name is changed to
        /// "Call Recording - Start".
        /// Replaced by: SystemFeatureAccessCodeGetListRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemFeatureAccessCodeGetListRequest20Async instead.")]
        public static async Task<SystemFeatureAccessCodeGetListResponse20> SystemFeatureAccessCodeGetListRequest20(this OcipClient client, SystemFeatureAccessCodeGetListRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemFeatureAccessCodeGetListResponse20;
        }

        /// <summary>
        /// Request to get list of default Feature Access Codes defined on system
        /// level.
        /// The response is either SystemFeatureAccessCodeGetListResponse20 or
        /// ErrorResponse.
        /// In release 20 the "Call Recording" FAC name is changed to
        /// "Call Recording - Start".
        /// Replaced by: SystemFeatureAccessCodeGetListRequest21
        /// </summary>
        public static async Task<SystemFeatureAccessCodeGetListResponse20> SystemFeatureAccessCodeGetListRequest20Async(this OcipClient client, SystemFeatureAccessCodeGetListRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemFeatureAccessCodeGetListResponse20;
        }
        /// <summary>
        /// Modify default Feature Access Codes.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// In release 20 the "Call Recording" FAC name is changed to
        /// "Call Recording - Start".
        /// Replaced by: SystemFeatureAccessCodeModifyListRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemFeatureAccessCodeModifyListRequest20Async instead.")]
        public static async Task<SuccessResponse> SystemFeatureAccessCodeModifyListRequest20(this OcipClient client, SystemFeatureAccessCodeModifyListRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify default Feature Access Codes.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// In release 20 the "Call Recording" FAC name is changed to
        /// "Call Recording - Start".
        /// Replaced by: SystemFeatureAccessCodeModifyListRequest21
        /// </summary>
        public static async Task<SuccessResponse> SystemFeatureAccessCodeModifyListRequest20Async(this OcipClient client, SystemFeatureAccessCodeModifyListRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a new file repository.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemFileRepositoryDeviceAddRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemFileRepositoryDeviceAddRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemFileRepositoryDeviceAddRequest(this OcipClient client, SystemFileRepositoryDeviceAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a new file repository.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemFileRepositoryDeviceAddRequest16
        /// </summary>
        public static async Task<SuccessResponse> SystemFileRepositoryDeviceAddRequestAsync(this OcipClient client, SystemFileRepositoryDeviceAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a new file repository.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemFileRepositoryDeviceAddRequest20
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemFileRepositoryDeviceAddRequest16Async instead.")]
        public static async Task<SuccessResponse> SystemFileRepositoryDeviceAddRequest16(this OcipClient client, SystemFileRepositoryDeviceAddRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a new file repository.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemFileRepositoryDeviceAddRequest20
        /// </summary>
        public static async Task<SuccessResponse> SystemFileRepositoryDeviceAddRequest16Async(this OcipClient client, SystemFileRepositoryDeviceAddRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get the file repository information.
        /// The response is either SystemFileRepositoryDeviceGetResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemFileRepositoryDeviceGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemFileRepositoryDeviceGetRequestAsync instead.")]
        public static async Task<SystemFileRepositoryDeviceGetResponse> SystemFileRepositoryDeviceGetRequest(this OcipClient client, SystemFileRepositoryDeviceGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemFileRepositoryDeviceGetResponse;
        }

        /// <summary>
        /// Request to get the file repository information.
        /// The response is either SystemFileRepositoryDeviceGetResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemFileRepositoryDeviceGetRequest16
        /// </summary>
        public static async Task<SystemFileRepositoryDeviceGetResponse> SystemFileRepositoryDeviceGetRequestAsync(this OcipClient client, SystemFileRepositoryDeviceGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemFileRepositoryDeviceGetResponse;
        }
        /// <summary>
        /// Request to get the file repository information.  The response is either SystemFileRepositoryDeviceGetResponse16 or ErrorResponse.
        /// 
        /// Replaced by: SystemFileRepositoryDeviceGetRequest20
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemFileRepositoryDeviceGetRequest16Async instead.")]
        public static async Task<SystemFileRepositoryDeviceGetResponse16> SystemFileRepositoryDeviceGetRequest16(this OcipClient client, SystemFileRepositoryDeviceGetRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemFileRepositoryDeviceGetResponse16;
        }

        /// <summary>
        /// Request to get the file repository information.  The response is either SystemFileRepositoryDeviceGetResponse16 or ErrorResponse.
        /// 
        /// Replaced by: SystemFileRepositoryDeviceGetRequest20
        /// </summary>
        public static async Task<SystemFileRepositoryDeviceGetResponse16> SystemFileRepositoryDeviceGetRequest16Async(this OcipClient client, SystemFileRepositoryDeviceGetRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemFileRepositoryDeviceGetResponse16;
        }
        /// <summary>
        /// Request to get the file repository information.  The response is either SystemFileRepositoryDeviceGetResponse20 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemFileRepositoryDeviceGetRequest20Async instead.")]
        public static async Task<SystemFileRepositoryDeviceGetResponse20> SystemFileRepositoryDeviceGetRequest20(this OcipClient client, SystemFileRepositoryDeviceGetRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemFileRepositoryDeviceGetResponse20;
        }

        /// <summary>
        /// Request to get the file repository information.  The response is either SystemFileRepositoryDeviceGetResponse20 or ErrorResponse.
        /// </summary>
        public static async Task<SystemFileRepositoryDeviceGetResponse20> SystemFileRepositoryDeviceGetRequest20Async(this OcipClient client, SystemFileRepositoryDeviceGetRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemFileRepositoryDeviceGetResponse20;
        }
        /// <summary>
        /// Modify a file repository.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemFileRepositoryDeviceModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemFileRepositoryDeviceModifyRequest(this OcipClient client, SystemFileRepositoryDeviceModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a file repository.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemFileRepositoryDeviceModifyRequestAsync(this OcipClient client, SystemFileRepositoryDeviceModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the list of users that are unreachable from the primary application server.
        /// The response is a SystemGeographicRedundancyUnreachableFromPrimaryGetUserListResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemGeographicRedundancyUnreachableFromPrimaryGetUserListRequest22 in AS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemGeographicRedundancyUnreachableFromPrimaryGetUserListRequestAsync instead.")]
        public static async Task<SystemGeographicRedundancyUnreachableFromPrimaryGetUserListResponse> SystemGeographicRedundancyUnreachableFromPrimaryGetUserListRequest(this OcipClient client, SystemGeographicRedundancyUnreachableFromPrimaryGetUserListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemGeographicRedundancyUnreachableFromPrimaryGetUserListResponse;
        }

        /// <summary>
        /// Get the list of users that are unreachable from the primary application server.
        /// The response is a SystemGeographicRedundancyUnreachableFromPrimaryGetUserListResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemGeographicRedundancyUnreachableFromPrimaryGetUserListRequest22 in AS data mode
        /// </summary>
        public static async Task<SystemGeographicRedundancyUnreachableFromPrimaryGetUserListResponse> SystemGeographicRedundancyUnreachableFromPrimaryGetUserListRequestAsync(this OcipClient client, SystemGeographicRedundancyUnreachableFromPrimaryGetUserListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemGeographicRedundancyUnreachableFromPrimaryGetUserListResponse;
        }
        /// <summary>
        /// Get the list of registration contacts.
        /// This request handles all levels of administration privileges.  The content of the response will only contain
        /// items within the scope of the requester's login id.  At the system level any of the choice parameters may be
        /// specified to filter the registrations listed.  At the reseller level, the resellerId must be specified.
        /// ResellerId is not valid at service provider, group or user level. At the service provider level the
        /// serviceProviderId must be specified for the service provider and group options.  When using the userId or
        /// linePort options the specified value must be valid for that service provider login.  At the group level
        /// the servicProviderId and the groupId must be specified for the group option. When using the userId or linePort
        /// options the specified value must be valid for that group login.
        /// The serviceProviderId option is not valid at the group level.  At the user level when using the userId or
        /// linePort options the specified value must be valid for that user login.  The serviceProviderId and groupId
        /// options are not valid at the user level.
        /// The response is either SystemGetRegistrationContactListResponse or ErrorResponse.
        /// 
        /// The following elements are only used in AS data mode:
        /// resellerId
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemGetRegistrationContactListRequestAsync instead.")]
        public static async Task<SystemGetRegistrationContactListResponse> SystemGetRegistrationContactListRequest(this OcipClient client, SystemGetRegistrationContactListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemGetRegistrationContactListResponse;
        }

        /// <summary>
        /// Get the list of registration contacts.
        /// This request handles all levels of administration privileges.  The content of the response will only contain
        /// items within the scope of the requester's login id.  At the system level any of the choice parameters may be
        /// specified to filter the registrations listed.  At the reseller level, the resellerId must be specified.
        /// ResellerId is not valid at service provider, group or user level. At the service provider level the
        /// serviceProviderId must be specified for the service provider and group options.  When using the userId or
        /// linePort options the specified value must be valid for that service provider login.  At the group level
        /// the servicProviderId and the groupId must be specified for the group option. When using the userId or linePort
        /// options the specified value must be valid for that group login.
        /// The serviceProviderId option is not valid at the group level.  At the user level when using the userId or
        /// linePort options the specified value must be valid for that user login.  The serviceProviderId and groupId
        /// options are not valid at the user level.
        /// The response is either SystemGetRegistrationContactListResponse or ErrorResponse.
        /// 
        /// The following elements are only used in AS data mode:
        /// resellerId
        /// </summary>
        public static async Task<SystemGetRegistrationContactListResponse> SystemGetRegistrationContactListRequestAsync(this OcipClient client, SystemGetRegistrationContactListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemGetRegistrationContactListResponse;
        }
        /// <summary>
        /// Add a system holiday schedule.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemHolidayScheduleAddRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemHolidayScheduleAddRequest(this OcipClient client, SystemHolidayScheduleAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a system holiday schedule.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemHolidayScheduleAddRequestAsync(this OcipClient client, SystemHolidayScheduleAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Delete a system holiday schedule.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemHolidayScheduleDeleteRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemHolidayScheduleDeleteRequest(this OcipClient client, SystemHolidayScheduleDeleteRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Delete a system holiday schedule.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemHolidayScheduleDeleteRequestAsync(this OcipClient client, SystemHolidayScheduleDeleteRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request a list of all system holiday schedules.
        /// The response is either a SystemHolidayScheduleGetListResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemHolidayScheduleGetListRequestAsync instead.")]
        public static async Task<SystemHolidayScheduleGetListResponse> SystemHolidayScheduleGetListRequest(this OcipClient client, SystemHolidayScheduleGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemHolidayScheduleGetListResponse;
        }

        /// <summary>
        /// Request a list of all system holiday schedules.
        /// The response is either a SystemHolidayScheduleGetListResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SystemHolidayScheduleGetListResponse> SystemHolidayScheduleGetListRequestAsync(this OcipClient client, SystemHolidayScheduleGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemHolidayScheduleGetListResponse;
        }
        /// <summary>
        /// Get a system holiday schedule.
        /// The response is either a SystemHolidayScheduleGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemHolidayScheduleGetRequestAsync instead.")]
        public static async Task<SystemHolidayScheduleGetResponse> SystemHolidayScheduleGetRequest(this OcipClient client, SystemHolidayScheduleGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemHolidayScheduleGetResponse;
        }

        /// <summary>
        /// Get a system holiday schedule.
        /// The response is either a SystemHolidayScheduleGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SystemHolidayScheduleGetResponse> SystemHolidayScheduleGetRequestAsync(this OcipClient client, SystemHolidayScheduleGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemHolidayScheduleGetResponse;
        }
        /// <summary>
        /// Modify a system holiday schedule.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemHolidayScheduleModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemHolidayScheduleModifyRequest(this OcipClient client, SystemHolidayScheduleModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a system holiday schedule.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemHolidayScheduleModifyRequestAsync(this OcipClient client, SystemHolidayScheduleModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request the system level data associated with Hunt Group.
        /// The response is either a SystemHuntGroupGetResponse or an
        /// ErrorResponse.
        /// Replaced by: SystemHuntGroupGetRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemHuntGroupGetRequestAsync instead.")]
        public static async Task<SystemHuntGroupGetResponse> SystemHuntGroupGetRequest(this OcipClient client, SystemHuntGroupGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemHuntGroupGetResponse;
        }

        /// <summary>
        /// Request the system level data associated with Hunt Group.
        /// The response is either a SystemHuntGroupGetResponse or an
        /// ErrorResponse.
        /// Replaced by: SystemHuntGroupGetRequest17
        /// </summary>
        public static async Task<SystemHuntGroupGetResponse> SystemHuntGroupGetRequestAsync(this OcipClient client, SystemHuntGroupGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemHuntGroupGetResponse;
        }
        /// <summary>
        /// Request the system's DTMF based in-call service activation trigger attributes. The response is either a SystemInCallServiceActivationGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemInCallServiceActivationGetRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemInCallServiceActivationGetRequestAsync instead.")]
        public static async Task<SystemInCallServiceActivationGetResponse> SystemInCallServiceActivationGetRequest(this OcipClient client, SystemInCallServiceActivationGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemInCallServiceActivationGetResponse;
        }

        /// <summary>
        /// Request the system's DTMF based in-call service activation trigger attributes. The response is either a SystemInCallServiceActivationGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemInCallServiceActivationGetRequest17
        /// </summary>
        public static async Task<SystemInCallServiceActivationGetResponse> SystemInCallServiceActivationGetRequestAsync(this OcipClient client, SystemInCallServiceActivationGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemInCallServiceActivationGetResponse;
        }
        /// <summary>
        /// Modifies the system's DTMF based in-call service activation trigger  attributes.The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemInCallServiceActivationModifyRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemInCallServiceActivationModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemInCallServiceActivationModifyRequest(this OcipClient client, SystemInCallServiceActivationModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modifies the system's DTMF based in-call service activation trigger  attributes.The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemInCallServiceActivationModifyRequest17
        /// </summary>
        public static async Task<SuccessResponse> SystemInCallServiceActivationModifyRequestAsync(this OcipClient client, SystemInCallServiceActivationModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the system Integrated IMP service attributes.
        /// The response is either SystemIntegratedIMPGetResponse or ErrorResponse.
        /// 
        /// Replaced by SystemIntegratedIMPGetRequest19.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemIntegratedIMPGetRequestAsync instead.")]
        public static async Task<SystemIntegratedIMPGetResponse> SystemIntegratedIMPGetRequest(this OcipClient client, SystemIntegratedIMPGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemIntegratedIMPGetResponse;
        }

        /// <summary>
        /// Get the system Integrated IMP service attributes.
        /// The response is either SystemIntegratedIMPGetResponse or ErrorResponse.
        /// 
        /// Replaced by SystemIntegratedIMPGetRequest19.
        /// </summary>
        public static async Task<SystemIntegratedIMPGetResponse> SystemIntegratedIMPGetRequestAsync(this OcipClient client, SystemIntegratedIMPGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemIntegratedIMPGetResponse;
        }
        /// <summary>
        /// Request to add a language to the system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemLanguageAddRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemLanguageAddRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemLanguageAddRequest(this OcipClient client, SystemLanguageAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a language to the system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemLanguageAddRequest22.
        /// </summary>
        public static async Task<SuccessResponse> SystemLanguageAddRequestAsync(this OcipClient client, SystemLanguageAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify a language properties in the system.
        /// If the becomeDefaultLanguage element is present, the language in this request becomes
        /// the default language for the system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemLanguageModifyRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemLanguageModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemLanguageModifyRequest(this OcipClient client, SystemLanguageModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a language properties in the system.
        /// If the becomeDefaultLanguage element is present, the language in this request becomes
        /// the default language for the system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemLanguageModifyRequest22.
        /// </summary>
        public static async Task<SuccessResponse> SystemLanguageModifyRequestAsync(this OcipClient client, SystemLanguageModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get all the licensing information.
        /// The response is either SystemLicensingGetResponse or ErrorResponse.
        /// Replaced By: SystemLicensingGetRequest14sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemLicensingGetRequestAsync instead.")]
        public static async Task<SystemLicensingGetResponse> SystemLicensingGetRequest(this OcipClient client, SystemLicensingGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemLicensingGetResponse;
        }

        /// <summary>
        /// Get all the licensing information.
        /// The response is either SystemLicensingGetResponse or ErrorResponse.
        /// Replaced By: SystemLicensingGetRequest14sp3
        /// </summary>
        public static async Task<SystemLicensingGetResponse> SystemLicensingGetRequestAsync(this OcipClient client, SystemLicensingGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemLicensingGetResponse;
        }
        /// <summary>
        /// Get all the licensing information.
        /// The response is either SystemLicensingGetResponse14sp3 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemLicensingGetRequest14sp3Async instead.")]
        public static async Task<SystemLicensingGetResponse14sp3> SystemLicensingGetRequest14sp3(this OcipClient client, SystemLicensingGetRequest14sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemLicensingGetResponse14sp3;
        }

        /// <summary>
        /// Get all the licensing information.
        /// The response is either SystemLicensingGetResponse14sp3 or ErrorResponse.
        /// </summary>
        public static async Task<SystemLicensingGetResponse14sp3> SystemLicensingGetRequest14sp3Async(this OcipClient client, SystemLicensingGetRequest14sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemLicensingGetResponse14sp3;
        }
        /// <summary>
        /// Gets system level the Location Based Calling Restrictions attributes.
        /// The response is either a SystemLocationBasedCallingRestrictionsGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemLocationBasedCallingRestrictionsGetRequest17sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemLocationBasedCallingRestrictionsGetRequestAsync instead.")]
        public static async Task<SystemLocationBasedCallingRestrictionsGetResponse> SystemLocationBasedCallingRestrictionsGetRequest(this OcipClient client, SystemLocationBasedCallingRestrictionsGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemLocationBasedCallingRestrictionsGetResponse;
        }

        /// <summary>
        /// Gets system level the Location Based Calling Restrictions attributes.
        /// The response is either a SystemLocationBasedCallingRestrictionsGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemLocationBasedCallingRestrictionsGetRequest17sp3
        /// </summary>
        public static async Task<SystemLocationBasedCallingRestrictionsGetResponse> SystemLocationBasedCallingRestrictionsGetRequestAsync(this OcipClient client, SystemLocationBasedCallingRestrictionsGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemLocationBasedCallingRestrictionsGetResponse;
        }
        /// <summary>
        /// Request to get the list of Mail system parameters.
        /// The response is either SystemMailParametersGetResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemMailParametersGetRequestAsync instead.")]
        public static async Task<SystemMailParametersGetResponse> SystemMailParametersGetRequest(this OcipClient client, SystemMailParametersGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemMailParametersGetResponse;
        }

        /// <summary>
        /// Request to get the list of Mail system parameters.
        /// The response is either SystemMailParametersGetResponse or ErrorResponse.
        /// </summary>
        public static async Task<SystemMailParametersGetResponse> SystemMailParametersGetRequestAsync(this OcipClient client, SystemMailParametersGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemMailParametersGetResponse;
        }
        /// <summary>
        /// Request the list of users that use the Malicious Call Trace feature.
        /// The response is either a SystemMaliciousCallTraceGetUserListResponse or an
        /// ErrorResponse.
        /// Replaced By: SystemMaliciousCallTraceGetRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemMaliciousCallTraceGetUserListRequestAsync instead.")]
        public static async Task<SystemMaliciousCallTraceGetUserListResponse> SystemMaliciousCallTraceGetUserListRequest(this OcipClient client, SystemMaliciousCallTraceGetUserListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemMaliciousCallTraceGetUserListResponse;
        }

        /// <summary>
        /// Request the list of users that use the Malicious Call Trace feature.
        /// The response is either a SystemMaliciousCallTraceGetUserListResponse or an
        /// ErrorResponse.
        /// Replaced By: SystemMaliciousCallTraceGetRequest
        /// </summary>
        public static async Task<SystemMaliciousCallTraceGetUserListResponse> SystemMaliciousCallTraceGetUserListRequestAsync(this OcipClient client, SystemMaliciousCallTraceGetUserListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemMaliciousCallTraceGetUserListResponse;
        }
        /// <summary>
        /// Request to add a Media to the system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemMediaAddRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemMediaAddRequest(this OcipClient client, SystemMediaAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a Media to the system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemMediaAddRequestAsync(this OcipClient client, SystemMediaAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request the system level data associated with Meet-Me Conferencing functions.
        /// The response is either a SystemMeetMeConferencingGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemMeetMeConferencingGetRequest17sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemMeetMeConferencingGetRequestAsync instead.")]
        public static async Task<SystemMeetMeConferencingGetResponse> SystemMeetMeConferencingGetRequest(this OcipClient client, SystemMeetMeConferencingGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemMeetMeConferencingGetResponse;
        }

        /// <summary>
        /// Request the system level data associated with Meet-Me Conferencing functions.
        /// The response is either a SystemMeetMeConferencingGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemMeetMeConferencingGetRequest17sp3
        /// </summary>
        public static async Task<SystemMeetMeConferencingGetResponse> SystemMeetMeConferencingGetRequestAsync(this OcipClient client, SystemMeetMeConferencingGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemMeetMeConferencingGetResponse;
        }
        /// <summary>
        /// Request the system level data associated with Meet-Me Conferencing functions.
        /// The response is either a SystemMeetMeConferencingGetResponse17sp3 or an ErrorResponse.
        /// 
        /// Replaced by: SystemMeetMeConferencingGetRequest18
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemMeetMeConferencingGetRequest17sp3Async instead.")]
        public static async Task<SystemMeetMeConferencingGetResponse17sp3> SystemMeetMeConferencingGetRequest17sp3(this OcipClient client, SystemMeetMeConferencingGetRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemMeetMeConferencingGetResponse17sp3;
        }

        /// <summary>
        /// Request the system level data associated with Meet-Me Conferencing functions.
        /// The response is either a SystemMeetMeConferencingGetResponse17sp3 or an ErrorResponse.
        /// 
        /// Replaced by: SystemMeetMeConferencingGetRequest18
        /// </summary>
        public static async Task<SystemMeetMeConferencingGetResponse17sp3> SystemMeetMeConferencingGetRequest17sp3Async(this OcipClient client, SystemMeetMeConferencingGetRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemMeetMeConferencingGetResponse17sp3;
        }
        /// <summary>
        /// Request the system level data associated with Meet-Me Conferencing functions.
        /// The response is either a SystemMeetMeConferencingGetResponse18 or an ErrorResponse.
        /// 
        /// Replaced by SystemMeetMeConferencingGetRequest19
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemMeetMeConferencingGetRequest18Async instead.")]
        public static async Task<SystemMeetMeConferencingGetResponse18> SystemMeetMeConferencingGetRequest18(this OcipClient client, SystemMeetMeConferencingGetRequest18 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemMeetMeConferencingGetResponse18;
        }

        /// <summary>
        /// Request the system level data associated with Meet-Me Conferencing functions.
        /// The response is either a SystemMeetMeConferencingGetResponse18 or an ErrorResponse.
        /// 
        /// Replaced by SystemMeetMeConferencingGetRequest19
        /// </summary>
        public static async Task<SystemMeetMeConferencingGetResponse18> SystemMeetMeConferencingGetRequest18Async(this OcipClient client, SystemMeetMeConferencingGetRequest18 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemMeetMeConferencingGetResponse18;
        }
        /// <summary>
        /// Get a list of migrated users.
        /// The response is either SystemMigratedUsersGetListResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemMigratedUsersGetListRequest22 in AS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemMigratedUsersGetListRequestAsync instead.")]
        public static async Task<SystemMigratedUsersGetListResponse> SystemMigratedUsersGetListRequest(this OcipClient client, SystemMigratedUsersGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemMigratedUsersGetListResponse;
        }

        /// <summary>
        /// Get a list of migrated users.
        /// The response is either SystemMigratedUsersGetListResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemMigratedUsersGetListRequest22 in AS data mode
        /// </summary>
        public static async Task<SystemMigratedUsersGetListResponse> SystemMigratedUsersGetListRequestAsync(this OcipClient client, SystemMigratedUsersGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemMigratedUsersGetListResponse;
        }
        /// <summary>
        /// Get an existing Network Class of Service.
        /// The response is either a SystemNetworkClassOfServiceGetResponse
        /// or an ErrorResponse.
        /// Replaced by: SystemNetworkClassOfServiceGetRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemNetworkClassOfServiceGetRequestAsync instead.")]
        public static async Task<SystemNetworkClassOfServiceGetResponse> SystemNetworkClassOfServiceGetRequest(this OcipClient client, SystemNetworkClassOfServiceGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemNetworkClassOfServiceGetResponse;
        }

        /// <summary>
        /// Get an existing Network Class of Service.
        /// The response is either a SystemNetworkClassOfServiceGetResponse
        /// or an ErrorResponse.
        /// Replaced by: SystemNetworkClassOfServiceGetRequest17
        /// </summary>
        public static async Task<SystemNetworkClassOfServiceGetResponse> SystemNetworkClassOfServiceGetRequestAsync(this OcipClient client, SystemNetworkClassOfServiceGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemNetworkClassOfServiceGetResponse;
        }
        /// <summary>
        /// Request to get the list of Network Server Sync system parameters.
        /// The response is either SystemNetworkServerSyncParametersGetResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemNetworkServerSyncParametersGetRequestAsync instead.")]
        public static async Task<SystemNetworkServerSyncParametersGetResponse> SystemNetworkServerSyncParametersGetRequest(this OcipClient client, SystemNetworkServerSyncParametersGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemNetworkServerSyncParametersGetResponse;
        }

        /// <summary>
        /// Request to get the list of Network Server Sync system parameters.
        /// The response is either SystemNetworkServerSyncParametersGetResponse or ErrorResponse.
        /// </summary>
        public static async Task<SystemNetworkServerSyncParametersGetResponse> SystemNetworkServerSyncParametersGetRequestAsync(this OcipClient client, SystemNetworkServerSyncParametersGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemNetworkServerSyncParametersGetResponse;
        }
        /// <summary>
        /// Request to get the list of Network Server Sync system parameters.
        /// The response is either SystemNetworkServerSyncParametersGetResponse14sp2 or ErrorResponse.
        /// Replaced By: SystemNetworkServerSyncParametersGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemNetworkServerSyncParametersGetRequest14sp2Async instead.")]
        public static async Task<SystemNetworkServerSyncParametersGetResponse14sp2> SystemNetworkServerSyncParametersGetRequest14sp2(this OcipClient client, SystemNetworkServerSyncParametersGetRequest14sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemNetworkServerSyncParametersGetResponse14sp2;
        }

        /// <summary>
        /// Request to get the list of Network Server Sync system parameters.
        /// The response is either SystemNetworkServerSyncParametersGetResponse14sp2 or ErrorResponse.
        /// Replaced By: SystemNetworkServerSyncParametersGetRequest16
        /// </summary>
        public static async Task<SystemNetworkServerSyncParametersGetResponse14sp2> SystemNetworkServerSyncParametersGetRequest14sp2Async(this OcipClient client, SystemNetworkServerSyncParametersGetRequest14sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemNetworkServerSyncParametersGetResponse14sp2;
        }
        /// <summary>
        /// Request to get the list of Network Server Sync system parameters.
        /// The response is either SystemNetworkServerSyncParametersGetResponse16 or ErrorResponse.
        /// Replaced By: SystemNetworkServerSyncParametersGetRequest17sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemNetworkServerSyncParametersGetRequest16Async instead.")]
        public static async Task<SystemNetworkServerSyncParametersGetResponse16> SystemNetworkServerSyncParametersGetRequest16(this OcipClient client, SystemNetworkServerSyncParametersGetRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemNetworkServerSyncParametersGetResponse16;
        }

        /// <summary>
        /// Request to get the list of Network Server Sync system parameters.
        /// The response is either SystemNetworkServerSyncParametersGetResponse16 or ErrorResponse.
        /// Replaced By: SystemNetworkServerSyncParametersGetRequest17sp4
        /// </summary>
        public static async Task<SystemNetworkServerSyncParametersGetResponse16> SystemNetworkServerSyncParametersGetRequest16Async(this OcipClient client, SystemNetworkServerSyncParametersGetRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemNetworkServerSyncParametersGetResponse16;
        }
        /// <summary>
        /// Request to add a Network Server to the system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by SystemNetworkSynchingServerAddRequest22V2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemNetworkSynchingServerAddRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemNetworkSynchingServerAddRequest(this OcipClient client, SystemNetworkSynchingServerAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a Network Server to the system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by SystemNetworkSynchingServerAddRequest22V2
        /// </summary>
        public static async Task<SuccessResponse> SystemNetworkSynchingServerAddRequestAsync(this OcipClient client, SystemNetworkSynchingServerAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a Network Server to the system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by SystemNetworkSynchingServerAddRequest22V2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemNetworkSynchingServerAddRequest22Async instead.")]
        public static async Task<SuccessResponse> SystemNetworkSynchingServerAddRequest22(this OcipClient client, SystemNetworkSynchingServerAddRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a Network Server to the system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by SystemNetworkSynchingServerAddRequest22V2
        /// </summary>
        public static async Task<SuccessResponse> SystemNetworkSynchingServerAddRequest22Async(this OcipClient client, SystemNetworkSynchingServerAddRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify a Network Server in the system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// The following elements are only used in AS data mode and ignored in XS data mode:
        /// becomePreferred
        /// The following elements are only used in XS data mode and ignored in AS data mode:
        /// order
        /// Replaced by SystemNetworkSynchingServerModifyRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemNetworkSynchingServerModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemNetworkSynchingServerModifyRequest(this OcipClient client, SystemNetworkSynchingServerModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a Network Server in the system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// The following elements are only used in AS data mode and ignored in XS data mode:
        /// becomePreferred
        /// The following elements are only used in XS data mode and ignored in AS data mode:
        /// order
        /// Replaced by SystemNetworkSynchingServerModifyRequest22
        /// </summary>
        public static async Task<SuccessResponse> SystemNetworkSynchingServerModifyRequestAsync(this OcipClient client, SystemNetworkSynchingServerModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get the Number Activation state.
        /// The response is either SystemNumberActivationGetResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemNumberActivationGetRequestAsync instead.")]
        public static async Task<SystemNumberActivationGetResponse> SystemNumberActivationGetRequest(this OcipClient client, SystemNumberActivationGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemNumberActivationGetResponse;
        }

        /// <summary>
        /// Request to get the Number Activation state.
        /// The response is either SystemNumberActivationGetResponse or ErrorResponse.
        /// </summary>
        public static async Task<SystemNumberActivationGetResponse> SystemNumberActivationGetRequestAsync(this OcipClient client, SystemNumberActivationGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemNumberActivationGetResponse;
        }
        /// <summary>
        /// Request to modify system number activation setting.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemNumberActivationModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemNumberActivationModifyRequest(this OcipClient client, SystemNumberActivationModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify system number activation setting.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemNumberActivationModifyRequestAsync(this OcipClient client, SystemNumberActivationModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add an application to the OCI call control application list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemOCICallControlApplicationAddRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemOCICallControlApplicationAddRequest(this OcipClient client, SystemOCICallControlApplicationAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add an application to the OCI call control application list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemOCICallControlApplicationAddRequestAsync(this OcipClient client, SystemOCICallControlApplicationAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add an application to the OCI call control application list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemOCICallControlApplicationAddRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemOCICallControlApplicationAddRequest14sp9Async instead.")]
        public static async Task<SuccessResponse> SystemOCICallControlApplicationAddRequest14sp9(this OcipClient client, SystemOCICallControlApplicationAddRequest14sp9 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add an application to the OCI call control application list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemOCICallControlApplicationAddRequest17
        /// </summary>
        public static async Task<SuccessResponse> SystemOCICallControlApplicationAddRequest14sp9Async(this OcipClient client, SystemOCICallControlApplicationAddRequest14sp9 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get the list of OCIReporting system parameters.
        /// The response is either SystemOCIReportingParametersGetResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemOCIReportingParametersGetRequestAsync instead.")]
        public static async Task<SystemOCIReportingParametersGetResponse> SystemOCIReportingParametersGetRequest(this OcipClient client, SystemOCIReportingParametersGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemOCIReportingParametersGetResponse;
        }

        /// <summary>
        /// Request to get the list of OCIReporting system parameters.
        /// The response is either SystemOCIReportingParametersGetResponse or ErrorResponse.
        /// </summary>
        public static async Task<SystemOCIReportingParametersGetResponse> SystemOCIReportingParametersGetRequestAsync(this OcipClient client, SystemOCIReportingParametersGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemOCIReportingParametersGetResponse;
        }
        /// <summary>
        /// Request to get the list of OCIReporting system parameters.
        /// The response is either SystemOCIReportingParametersGetResponse14sp1 or
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemOCIReportingParametersGetRequest14sp1Async instead.")]
        public static async Task<SystemOCIReportingParametersGetResponse14sp1> SystemOCIReportingParametersGetRequest14sp1(this OcipClient client, SystemOCIReportingParametersGetRequest14sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemOCIReportingParametersGetResponse14sp1;
        }

        /// <summary>
        /// Request to get the list of OCIReporting system parameters.
        /// The response is either SystemOCIReportingParametersGetResponse14sp1 or
        /// ErrorResponse.
        /// </summary>
        public static async Task<SystemOCIReportingParametersGetResponse14sp1> SystemOCIReportingParametersGetRequest14sp1Async(this OcipClient client, SystemOCIReportingParametersGetRequest14sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemOCIReportingParametersGetResponse14sp1;
        }
        /// <summary>
        /// Request the system level data associated with Outgoing Calling Plan.
        /// The response is either a SystemOutgoingCallingPlanGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemOutgoingCallingPlanGetRequestAsync instead.")]
        public static async Task<SystemOutgoingCallingPlanGetResponse> SystemOutgoingCallingPlanGetRequest(this OcipClient client, SystemOutgoingCallingPlanGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemOutgoingCallingPlanGetResponse;
        }

        /// <summary>
        /// Request the system level data associated with Outgoing Calling Plan.
        /// The response is either a SystemOutgoingCallingPlanGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SystemOutgoingCallingPlanGetResponse> SystemOutgoingCallingPlanGetRequestAsync(this OcipClient client, SystemOutgoingCallingPlanGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemOutgoingCallingPlanGetResponse;
        }
        /// <summary>
        /// Requests the system's password rules setting applicable to
        /// System administrator, Provisioning Administrator,
        /// and/or Service Provider Administrator, Group Administrator, Department Administrator, user.
        /// The response is either SystemPasswordRulesGetResponse13mp2 or ErrorResponse.
        /// Replaced By : SystemPasswordRulesGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemPasswordRulesGetRequest13mp2Async instead.")]
        public static async Task<SystemPasswordRulesGetResponse13mp2> SystemPasswordRulesGetRequest13mp2(this OcipClient client, SystemPasswordRulesGetRequest13mp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemPasswordRulesGetResponse13mp2;
        }

        /// <summary>
        /// Requests the system's password rules setting applicable to
        /// System administrator, Provisioning Administrator,
        /// and/or Service Provider Administrator, Group Administrator, Department Administrator, user.
        /// The response is either SystemPasswordRulesGetResponse13mp2 or ErrorResponse.
        /// Replaced By : SystemPasswordRulesGetRequest16
        /// </summary>
        public static async Task<SystemPasswordRulesGetResponse13mp2> SystemPasswordRulesGetRequest13mp2Async(this OcipClient client, SystemPasswordRulesGetRequest13mp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemPasswordRulesGetResponse13mp2;
        }
        /// <summary>
        /// Request to modify the system providers password rule
        /// setting applicable to System Adminstrator, Provisioning Administrator,
        /// and/or Service Provider Administrator, Group Administrator, Department Administrator, User.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: SystemPasswordRulesModifyRequest14sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemPasswordRulesModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemPasswordRulesModifyRequest(this OcipClient client, SystemPasswordRulesModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify the system providers password rule
        /// setting applicable to System Adminstrator, Provisioning Administrator,
        /// and/or Service Provider Administrator, Group Administrator, Department Administrator, User.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: SystemPasswordRulesModifyRequest14sp3
        /// </summary>
        public static async Task<SuccessResponse> SystemPasswordRulesModifyRequestAsync(this OcipClient client, SystemPasswordRulesModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a performance measurements reporting ftp server.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemPerformanceMeasurementReportingAddFileServerRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemPerformanceMeasurementReportingAddFileServerRequest(this OcipClient client, SystemPerformanceMeasurementReportingAddFileServerRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a performance measurements reporting ftp server.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemPerformanceMeasurementReportingAddFileServerRequestAsync(this OcipClient client, SystemPerformanceMeasurementReportingAddFileServerRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Delete a performance measurements reporting ftp server.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemPerformanceMeasurementReportingDeleteFileServerRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemPerformanceMeasurementReportingDeleteFileServerRequest(this OcipClient client, SystemPerformanceMeasurementReportingDeleteFileServerRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Delete a performance measurements reporting ftp server.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemPerformanceMeasurementReportingDeleteFileServerRequestAsync(this OcipClient client, SystemPerformanceMeasurementReportingDeleteFileServerRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Requests the list performance measurements reporting ftp servers.
        /// The response is either SystemPerformanceMeasurementReportingGetFileServerListResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemPerformanceMeasurementReportingGetFileServerListRequestAsync instead.")]
        public static async Task<SystemPerformanceMeasurementReportingGetFileServerListResponse> SystemPerformanceMeasurementReportingGetFileServerListRequest(this OcipClient client, SystemPerformanceMeasurementReportingGetFileServerListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemPerformanceMeasurementReportingGetFileServerListResponse;
        }

        /// <summary>
        /// Requests the list performance measurements reporting ftp servers.
        /// The response is either SystemPerformanceMeasurementReportingGetFileServerListResponse or ErrorResponse.
        /// </summary>
        public static async Task<SystemPerformanceMeasurementReportingGetFileServerListResponse> SystemPerformanceMeasurementReportingGetFileServerListRequestAsync(this OcipClient client, SystemPerformanceMeasurementReportingGetFileServerListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemPerformanceMeasurementReportingGetFileServerListResponse;
        }
        /// <summary>
        /// Requests the performance measurements reporting settings.
        /// The response is either SystemPerformanceMeasurementReportingGetResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemPerformanceMeasurementReportingGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemPerformanceMeasurementReportingGetRequestAsync instead.")]
        public static async Task<SystemPerformanceMeasurementReportingGetResponse> SystemPerformanceMeasurementReportingGetRequest(this OcipClient client, SystemPerformanceMeasurementReportingGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemPerformanceMeasurementReportingGetResponse;
        }

        /// <summary>
        /// Requests the performance measurements reporting settings.
        /// The response is either SystemPerformanceMeasurementReportingGetResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemPerformanceMeasurementReportingGetRequest22
        /// </summary>
        public static async Task<SystemPerformanceMeasurementReportingGetResponse> SystemPerformanceMeasurementReportingGetRequestAsync(this OcipClient client, SystemPerformanceMeasurementReportingGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemPerformanceMeasurementReportingGetResponse;
        }
        /// <summary>
        /// Requests the performance measurements reporting settings.
        /// The response is either SystemPerformanceMeasurementReportingGetResponse22 or ErrorResponse.
        /// Replaced by: SystemPerformanceMeasurementReportingGetRequest24
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemPerformanceMeasurementReportingGetRequest22Async instead.")]
        public static async Task<SystemPerformanceMeasurementReportingGetResponse22> SystemPerformanceMeasurementReportingGetRequest22(this OcipClient client, SystemPerformanceMeasurementReportingGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemPerformanceMeasurementReportingGetResponse22;
        }

        /// <summary>
        /// Requests the performance measurements reporting settings.
        /// The response is either SystemPerformanceMeasurementReportingGetResponse22 or ErrorResponse.
        /// Replaced by: SystemPerformanceMeasurementReportingGetRequest24
        /// </summary>
        public static async Task<SystemPerformanceMeasurementReportingGetResponse22> SystemPerformanceMeasurementReportingGetRequest22Async(this OcipClient client, SystemPerformanceMeasurementReportingGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemPerformanceMeasurementReportingGetResponse22;
        }
        /// <summary>
        /// Modify a performance measurements reporting ftp server.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemPerformanceMeasurementReportingModifyFileServerRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemPerformanceMeasurementReportingModifyFileServerRequest(this OcipClient client, SystemPerformanceMeasurementReportingModifyFileServerRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a performance measurements reporting ftp server.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemPerformanceMeasurementReportingModifyFileServerRequestAsync(this OcipClient client, SystemPerformanceMeasurementReportingModifyFileServerRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Requests the system's default policy settings.
        /// The response is either SystemPolicyGetDefaultResponse14 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemPolicyGetDefaultRequest14Async instead.")]
        public static async Task<SystemPolicyGetDefaultResponse14> SystemPolicyGetDefaultRequest14(this OcipClient client, SystemPolicyGetDefaultRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemPolicyGetDefaultResponse14;
        }

        /// <summary>
        /// Requests the system's default policy settings.
        /// The response is either SystemPolicyGetDefaultResponse14 or ErrorResponse.
        /// </summary>
        public static async Task<SystemPolicyGetDefaultResponse14> SystemPolicyGetDefaultRequest14Async(this OcipClient client, SystemPolicyGetDefaultRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemPolicyGetDefaultResponse14;
        }
        /// <summary>
        /// Requests the system's default policy settings.
        /// The response is either SystemPolicyGetDefaultResponse14sp1 or ErrorResponse.
        /// Replaced By: SystemPolicyGetDefaultRequest14sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemPolicyGetDefaultRequest14sp1Async instead.")]
        public static async Task<SystemPolicyGetDefaultResponse14sp1> SystemPolicyGetDefaultRequest14sp1(this OcipClient client, SystemPolicyGetDefaultRequest14sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemPolicyGetDefaultResponse14sp1;
        }

        /// <summary>
        /// Requests the system's default policy settings.
        /// The response is either SystemPolicyGetDefaultResponse14sp1 or ErrorResponse.
        /// Replaced By: SystemPolicyGetDefaultRequest14sp4
        /// </summary>
        public static async Task<SystemPolicyGetDefaultResponse14sp1> SystemPolicyGetDefaultRequest14sp1Async(this OcipClient client, SystemPolicyGetDefaultRequest14sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemPolicyGetDefaultResponse14sp1;
        }
        /// <summary>
        /// Requests the system's default policy settings.
        /// The response is either SystemPolicyGetDefaultResponse14sp4 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemPolicyGetDefaultRequest14sp4Async instead.")]
        public static async Task<SystemPolicyGetDefaultResponse14sp4> SystemPolicyGetDefaultRequest14sp4(this OcipClient client, SystemPolicyGetDefaultRequest14sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemPolicyGetDefaultResponse14sp4;
        }

        /// <summary>
        /// Requests the system's default policy settings.
        /// The response is either SystemPolicyGetDefaultResponse14sp4 or ErrorResponse.
        /// </summary>
        public static async Task<SystemPolicyGetDefaultResponse14sp4> SystemPolicyGetDefaultRequest14sp4Async(this OcipClient client, SystemPolicyGetDefaultRequest14sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemPolicyGetDefaultResponse14sp4;
        }
        /// <summary>
        /// Requests the system's default policy settings.
        /// The response is either SystemPolicyGetDefaultResponse16sp1 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemPolicyGetDefaultRequest16sp1Async instead.")]
        public static async Task<SystemPolicyGetDefaultResponse16sp1> SystemPolicyGetDefaultRequest16sp1(this OcipClient client, SystemPolicyGetDefaultRequest16sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemPolicyGetDefaultResponse16sp1;
        }

        /// <summary>
        /// Requests the system's default policy settings.
        /// The response is either SystemPolicyGetDefaultResponse16sp1 or ErrorResponse.
        /// </summary>
        public static async Task<SystemPolicyGetDefaultResponse16sp1> SystemPolicyGetDefaultRequest16sp1Async(this OcipClient client, SystemPolicyGetDefaultRequest16sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemPolicyGetDefaultResponse16sp1;
        }
        /// <summary>
        /// Requests the system's default policy settings.
        /// The response is either SystemPolicyGetDefaultResponse16sp2 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemPolicyGetDefaultRequest16sp2Async instead.")]
        public static async Task<SystemPolicyGetDefaultResponse16sp2> SystemPolicyGetDefaultRequest16sp2(this OcipClient client, SystemPolicyGetDefaultRequest16sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemPolicyGetDefaultResponse16sp2;
        }

        /// <summary>
        /// Requests the system's default policy settings.
        /// The response is either SystemPolicyGetDefaultResponse16sp2 or ErrorResponse.
        /// </summary>
        public static async Task<SystemPolicyGetDefaultResponse16sp2> SystemPolicyGetDefaultRequest16sp2Async(this OcipClient client, SystemPolicyGetDefaultRequest16sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemPolicyGetDefaultResponse16sp2;
        }
        /// <summary>
        /// Requests the system's default policy settings.
        /// The response is either SystemPolicyGetDefaultResponse17 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemPolicyGetDefaultRequest17Async instead.")]
        public static async Task<SystemPolicyGetDefaultResponse17> SystemPolicyGetDefaultRequest17(this OcipClient client, SystemPolicyGetDefaultRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemPolicyGetDefaultResponse17;
        }

        /// <summary>
        /// Requests the system's default policy settings.
        /// The response is either SystemPolicyGetDefaultResponse17 or ErrorResponse.
        /// </summary>
        public static async Task<SystemPolicyGetDefaultResponse17> SystemPolicyGetDefaultRequest17Async(this OcipClient client, SystemPolicyGetDefaultRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemPolicyGetDefaultResponse17;
        }
        /// <summary>
        /// Requests the system's default policy settings.
        /// The response is either SystemPolicyGetDefaultResponse17sp1 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemPolicyGetDefaultRequest17sp1Async instead.")]
        public static async Task<SystemPolicyGetDefaultResponse17sp1> SystemPolicyGetDefaultRequest17sp1(this OcipClient client, SystemPolicyGetDefaultRequest17sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemPolicyGetDefaultResponse17sp1;
        }

        /// <summary>
        /// Requests the system's default policy settings.
        /// The response is either SystemPolicyGetDefaultResponse17sp1 or ErrorResponse.
        /// </summary>
        public static async Task<SystemPolicyGetDefaultResponse17sp1> SystemPolicyGetDefaultRequest17sp1Async(this OcipClient client, SystemPolicyGetDefaultRequest17sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemPolicyGetDefaultResponse17sp1;
        }
        /// <summary>
        /// Requests the system's default policy settings.
        /// The response is either SystemPolicyGetDefaultResponse17sp3 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemPolicyGetDefaultRequest17sp3Async instead.")]
        public static async Task<SystemPolicyGetDefaultResponse17sp3> SystemPolicyGetDefaultRequest17sp3(this OcipClient client, SystemPolicyGetDefaultRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemPolicyGetDefaultResponse17sp3;
        }

        /// <summary>
        /// Requests the system's default policy settings.
        /// The response is either SystemPolicyGetDefaultResponse17sp3 or ErrorResponse.
        /// </summary>
        public static async Task<SystemPolicyGetDefaultResponse17sp3> SystemPolicyGetDefaultRequest17sp3Async(this OcipClient client, SystemPolicyGetDefaultRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemPolicyGetDefaultResponse17sp3;
        }
        /// <summary>
        /// Requests the system passcode rules setting.
        /// The response is either SystemPortalPasscodeRulesGetResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemPortalPasscodeRulesGetRequest19
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemPortalPasscodeRulesGetRequestAsync instead.")]
        public static async Task<SystemPortalPasscodeRulesGetResponse> SystemPortalPasscodeRulesGetRequest(this OcipClient client, SystemPortalPasscodeRulesGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemPortalPasscodeRulesGetResponse;
        }

        /// <summary>
        /// Requests the system passcode rules setting.
        /// The response is either SystemPortalPasscodeRulesGetResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemPortalPasscodeRulesGetRequest19
        /// </summary>
        public static async Task<SystemPortalPasscodeRulesGetResponse> SystemPortalPasscodeRulesGetRequestAsync(this OcipClient client, SystemPortalPasscodeRulesGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemPortalPasscodeRulesGetResponse;
        }
        /// <summary>
        /// Request to get the system's provisioning validation attributes.
        /// The response is either a SystemProvisioningValidationGetResponse or and ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemProvisioningValidationGetRequestAsync instead.")]
        public static async Task<SystemProvisioningValidationGetResponse> SystemProvisioningValidationGetRequest(this OcipClient client, SystemProvisioningValidationGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemProvisioningValidationGetResponse;
        }

        /// <summary>
        /// Request to get the system's provisioning validation attributes.
        /// The response is either a SystemProvisioningValidationGetResponse or and ErrorResponse.
        /// </summary>
        public static async Task<SystemProvisioningValidationGetResponse> SystemProvisioningValidationGetRequestAsync(this OcipClient client, SystemProvisioningValidationGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemProvisioningValidationGetResponse;
        }
        /// <summary>
        /// Replaced by: SystemRedundancyParametersGetRequest16sp2
        /// 
        /// Request to get the list of Redundancy system parameters.
        /// The response is either SystemRedundancyParametersGetResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemRedundancyParametersGetRequestAsync instead.")]
        public static async Task<SystemRedundancyParametersGetResponse> SystemRedundancyParametersGetRequest(this OcipClient client, SystemRedundancyParametersGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemRedundancyParametersGetResponse;
        }

        /// <summary>
        /// Replaced by: SystemRedundancyParametersGetRequest16sp2
        /// 
        /// Request to get the list of Redundancy system parameters.
        /// The response is either SystemRedundancyParametersGetResponse or ErrorResponse.
        /// </summary>
        public static async Task<SystemRedundancyParametersGetResponse> SystemRedundancyParametersGetRequestAsync(this OcipClient client, SystemRedundancyParametersGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemRedundancyParametersGetResponse;
        }
        /// <summary>
        /// Get a system Security Classifications parameters.
        /// The response is either SystemSecurityClassificationGetResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSecurityClassificationGetRequestAsync instead.")]
        public static async Task<SystemSecurityClassificationGetResponse> SystemSecurityClassificationGetRequest(this OcipClient client, SystemSecurityClassificationGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSecurityClassificationGetResponse;
        }

        /// <summary>
        /// Get a system Security Classifications parameters.
        /// The response is either SystemSecurityClassificationGetResponse or ErrorResponse.
        /// </summary>
        public static async Task<SystemSecurityClassificationGetResponse> SystemSecurityClassificationGetRequestAsync(this OcipClient client, SystemSecurityClassificationGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSecurityClassificationGetResponse;
        }
        /// <summary>
        /// Request the system level data associated with Selective Services.
        /// The response is either a SystemSelectiveServicesGetResponse or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSelectiveServicesGetRequestAsync instead.")]
        public static async Task<SystemSelectiveServicesGetResponse> SystemSelectiveServicesGetRequest(this OcipClient client, SystemSelectiveServicesGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSelectiveServicesGetResponse;
        }

        /// <summary>
        /// Request the system level data associated with Selective Services.
        /// The response is either a SystemSelectiveServicesGetResponse or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<SystemSelectiveServicesGetResponse> SystemSelectiveServicesGetRequestAsync(this OcipClient client, SystemSelectiveServicesGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSelectiveServicesGetResponse;
        }
        /// <summary>
        /// Request the system level data associated with Selective Services.
        /// The response is either a SystemSelectiveServicesGetResponse18sp1 or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSelectiveServicesGetRequest18sp1Async instead.")]
        public static async Task<SystemSelectiveServicesGetResponse18sp1> SystemSelectiveServicesGetRequest18sp1(this OcipClient client, SystemSelectiveServicesGetRequest18sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSelectiveServicesGetResponse18sp1;
        }

        /// <summary>
        /// Request the system level data associated with Selective Services.
        /// The response is either a SystemSelectiveServicesGetResponse18sp1 or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<SystemSelectiveServicesGetResponse18sp1> SystemSelectiveServicesGetRequest18sp1Async(this OcipClient client, SystemSelectiveServicesGetRequest18sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSelectiveServicesGetResponse18sp1;
        }
        /// <summary>
        /// Get the session admission control settings for the system.
        /// The response is either a SystemSessionAdmissionControlGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemSessionAdmissionControlGetRequest21sp1.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSessionAdmissionControlGetRequestAsync instead.")]
        public static async Task<SystemSessionAdmissionControlGetResponse> SystemSessionAdmissionControlGetRequest(this OcipClient client, SystemSessionAdmissionControlGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSessionAdmissionControlGetResponse;
        }

        /// <summary>
        /// Get the session admission control settings for the system.
        /// The response is either a SystemSessionAdmissionControlGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemSessionAdmissionControlGetRequest21sp1.
        /// </summary>
        public static async Task<SystemSessionAdmissionControlGetResponse> SystemSessionAdmissionControlGetRequestAsync(this OcipClient client, SystemSessionAdmissionControlGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSessionAdmissionControlGetResponse;
        }
        /// <summary>
        /// Get the session admission control settings for the system.
        /// The response is either a SystemSessionAdmissionControlGetResponse21sp1 or an ErrorResponse.
        /// Replaced by: SystemSessionAdmissionControlGetRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSessionAdmissionControlGetRequest21sp1Async instead.")]
        public static async Task<SystemSessionAdmissionControlGetResponse21sp1> SystemSessionAdmissionControlGetRequest21sp1(this OcipClient client, SystemSessionAdmissionControlGetRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSessionAdmissionControlGetResponse21sp1;
        }

        /// <summary>
        /// Get the session admission control settings for the system.
        /// The response is either a SystemSessionAdmissionControlGetResponse21sp1 or an ErrorResponse.
        /// Replaced by: SystemSessionAdmissionControlGetRequest22.
        /// </summary>
        public static async Task<SystemSessionAdmissionControlGetResponse21sp1> SystemSessionAdmissionControlGetRequest21sp1Async(this OcipClient client, SystemSessionAdmissionControlGetRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSessionAdmissionControlGetResponse21sp1;
        }
        /// <summary>
        /// Get the session admission control settings for the system.
        /// The response is either a SystemSessionAdmissionControlGetResponse22 or an ErrorResponse.
        /// 
        /// Replaced by: SystemSessionAdmissionControlGetRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSessionAdmissionControlGetRequest22Async instead.")]
        public static async Task<SystemSessionAdmissionControlGetResponse22> SystemSessionAdmissionControlGetRequest22(this OcipClient client, SystemSessionAdmissionControlGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSessionAdmissionControlGetResponse22;
        }

        /// <summary>
        /// Get the session admission control settings for the system.
        /// The response is either a SystemSessionAdmissionControlGetResponse22 or an ErrorResponse.
        /// 
        /// Replaced by: SystemSessionAdmissionControlGetRequest22V2.
        /// </summary>
        public static async Task<SystemSessionAdmissionControlGetResponse22> SystemSessionAdmissionControlGetRequest22Async(this OcipClient client, SystemSessionAdmissionControlGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSessionAdmissionControlGetResponse22;
        }
        /// <summary>
        /// Request the system level data associated with session audit.
        /// The response is either a SystemSessionAuditGetResponse or an
        /// ErrorResponse.
        /// Replaced By: SystemSessionAuditGetRequest14sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSessionAuditGetRequestAsync instead.")]
        public static async Task<SystemSessionAuditGetResponse> SystemSessionAuditGetRequest(this OcipClient client, SystemSessionAuditGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSessionAuditGetResponse;
        }

        /// <summary>
        /// Request the system level data associated with session audit.
        /// The response is either a SystemSessionAuditGetResponse or an
        /// ErrorResponse.
        /// Replaced By: SystemSessionAuditGetRequest14sp3
        /// </summary>
        public static async Task<SystemSessionAuditGetResponse> SystemSessionAuditGetRequestAsync(this OcipClient client, SystemSessionAuditGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSessionAuditGetResponse;
        }
        /// <summary>
        /// Request the system level data associated with session audit.
        /// The response is either a SystemSessionAuditGetResponse14sp3 or
        /// an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSessionAuditGetRequest14sp3Async instead.")]
        public static async Task<SystemSessionAuditGetResponse14sp3> SystemSessionAuditGetRequest14sp3(this OcipClient client, SystemSessionAuditGetRequest14sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSessionAuditGetResponse14sp3;
        }

        /// <summary>
        /// Request the system level data associated with session audit.
        /// The response is either a SystemSessionAuditGetResponse14sp3 or
        /// an ErrorResponse.
        /// </summary>
        public static async Task<SystemSessionAuditGetResponse14sp3> SystemSessionAuditGetRequest14sp3Async(this OcipClient client, SystemSessionAuditGetRequest14sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSessionAuditGetResponse14sp3;
        }
        /// <summary>
        /// Modify the system level data associated with session sudit.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: SystemSessionAuditModifyRequest14sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSessionAuditModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemSessionAuditModifyRequest(this OcipClient client, SystemSessionAuditModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the system level data associated with session sudit.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: SystemSessionAuditModifyRequest14sp3
        /// </summary>
        public static async Task<SuccessResponse> SystemSessionAuditModifyRequestAsync(this OcipClient client, SystemSessionAuditModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Retrieves the Sh Interface system parameters.
        /// The response is either a SystemShInterfaceParametersGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemShInterfaceParametersGetRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemShInterfaceParametersGetRequestAsync instead.")]
        public static async Task<SystemShInterfaceParametersGetResponse> SystemShInterfaceParametersGetRequest(this OcipClient client, SystemShInterfaceParametersGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemShInterfaceParametersGetResponse;
        }

        /// <summary>
        /// Retrieves the Sh Interface system parameters.
        /// The response is either a SystemShInterfaceParametersGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemShInterfaceParametersGetRequest17
        /// </summary>
        public static async Task<SystemShInterfaceParametersGetResponse> SystemShInterfaceParametersGetRequestAsync(this OcipClient client, SystemShInterfaceParametersGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemShInterfaceParametersGetResponse;
        }
        /// <summary>
        /// Modifies the Sh Interface system parameters.  This request must be submitted on both nodes in the redundant Application Server cluster in order for the changes to take effect on each node without requiring a restart.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemShInterfaceParametersModifyRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemShInterfaceParametersModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemShInterfaceParametersModifyRequest(this OcipClient client, SystemShInterfaceParametersModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modifies the Sh Interface system parameters.  This request must be submitted on both nodes in the redundant Application Server cluster in order for the changes to take effect on each node without requiring a restart.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemShInterfaceParametersModifyRequest17
        /// </summary>
        public static async Task<SuccessResponse> SystemShInterfaceParametersModifyRequestAsync(this OcipClient client, SystemShInterfaceParametersModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add an entry to the SIP access control list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPAddACLEntryRequest14Async instead.")]
        public static async Task<SuccessResponse> SystemSIPAddACLEntryRequest14(this OcipClient client, SystemSIPAddACLEntryRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add an entry to the SIP access control list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPAddACLEntryRequest14Async(this OcipClient client, SystemSIPAddACLEntryRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Delete an entry from the SIP access control list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeleteACLEntryRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemSIPDeleteACLEntryRequest(this OcipClient client, SystemSIPDeleteACLEntryRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Delete an entry from the SIP access control list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeleteACLEntryRequestAsync(this OcipClient client, SystemSIPDeleteACLEntryRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest(this OcipClient client, SystemSIPDeviceTypeAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequestAsync(this OcipClient client, SystemSIPDeviceTypeAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: SystemSIPDeviceTypeAddRequest14sp2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest14sp1Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest14sp1(this OcipClient client, SystemSIPDeviceTypeAddRequest14sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: SystemSIPDeviceTypeAddRequest14sp2
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest14sp1Async(this OcipClient client, SystemSIPDeviceTypeAddRequest14sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: SystemSIPDeviceTypeAddRequest14sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest14sp2Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest14sp2(this OcipClient client, SystemSIPDeviceTypeAddRequest14sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: SystemSIPDeviceTypeAddRequest14sp3
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest14sp2Async(this OcipClient client, SystemSIPDeviceTypeAddRequest14sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by: SystemSIPDeviceTypeAddRequest14sp6
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest14sp3Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest14sp3(this OcipClient client, SystemSIPDeviceTypeAddRequest14sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by: SystemSIPDeviceTypeAddRequest14sp6
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest14sp3Async(this OcipClient client, SystemSIPDeviceTypeAddRequest14sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By : SystemSIPDeviceTypeAddRequest15
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest14sp6Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest14sp6(this OcipClient client, SystemSIPDeviceTypeAddRequest14sp6 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By : SystemSIPDeviceTypeAddRequest15
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest14sp6Async(this OcipClient client, SystemSIPDeviceTypeAddRequest14sp6 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By : SystemSIPDeviceTypeAddRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest15Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest15(this OcipClient client, SystemSIPDeviceTypeAddRequest15 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By : SystemSIPDeviceTypeAddRequest16
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest15Async(this OcipClient client, SystemSIPDeviceTypeAddRequest15 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by: SystemSIPDeviceTypeAddRequest16sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest16Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest16(this OcipClient client, SystemSIPDeviceTypeAddRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by: SystemSIPDeviceTypeAddRequest16sp1
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest16Async(this OcipClient client, SystemSIPDeviceTypeAddRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeAddRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest16sp1Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest16sp1(this OcipClient client, SystemSIPDeviceTypeAddRequest16sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeAddRequest17
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest16sp1Async(this OcipClient client, SystemSIPDeviceTypeAddRequest16sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest17Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest17(this OcipClient client, SystemSIPDeviceTypeAddRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest17Async(this OcipClient client, SystemSIPDeviceTypeAddRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by: SystemSIPDeviceTypeAddRequest18
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest17sp4Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest17sp4(this OcipClient client, SystemSIPDeviceTypeAddRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by: SystemSIPDeviceTypeAddRequest18
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest17sp4Async(this OcipClient client, SystemSIPDeviceTypeAddRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// The following elements are only used in XS data mode:
        /// enable3G4GContinuity
        /// 
        /// Replaced by: SystemSIPDeviceTypeAddRequest19
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest18Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest18(this OcipClient client, SystemSIPDeviceTypeAddRequest18 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// The following elements are only used in XS data mode:
        /// enable3G4GContinuity
        /// 
        /// Replaced by: SystemSIPDeviceTypeAddRequest19
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest18Async(this OcipClient client, SystemSIPDeviceTypeAddRequest18 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in XS data mode:
        /// enable3G4GContinuity, use value "false" in AS data mode
        /// The following elements are only used in AS data mode:
        /// holdAnnouncementMethod, use value "useInactive" in XS data mode
        /// The following element values are only applicable in AS data mode:
        /// holdNormalization=useRfc3264Hold will raise an error in XS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest18sp1Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest18sp1(this OcipClient client, SystemSIPDeviceTypeAddRequest18sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in XS data mode:
        /// enable3G4GContinuity, use value "false" in AS data mode
        /// The following elements are only used in AS data mode:
        /// holdAnnouncementMethod, use value "useInactive" in XS data mode
        /// The following element values are only applicable in AS data mode:
        /// holdNormalization=useRfc3264Hold will raise an error in XS data mode
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest18sp1Async(this OcipClient client, SystemSIPDeviceTypeAddRequest18sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in XS data mode:
        /// enable3G4GContinuity, use value "false" in AS data mode
        /// The following elements are only used in AS data mode:
        /// holdAnnouncementMethod, use value "useInactive" in XS data mode
        /// supportRFC3398, use value "false" in XS data mode
        /// The following element values are only applicable in AS data mode:
        /// holdNormalization=useRfc3264Hold will raise an error in XS data mode
        /// Replaced by: SystemSIPDeviceTypeAddRequest19.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest18sp1V2Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest18sp1V2(this OcipClient client, SystemSIPDeviceTypeAddRequest18sp1V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in XS data mode:
        /// enable3G4GContinuity, use value "false" in AS data mode
        /// The following elements are only used in AS data mode:
        /// holdAnnouncementMethod, use value "useInactive" in XS data mode
        /// supportRFC3398, use value "false" in XS data mode
        /// The following element values are only applicable in AS data mode:
        /// holdNormalization=useRfc3264Hold will raise an error in XS data mode
        /// Replaced by: SystemSIPDeviceTypeAddRequest19.
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest18sp1V2Async(this OcipClient client, SystemSIPDeviceTypeAddRequest18sp1V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in XS data mode:
        /// enable3G4GContinuity, use value "false" in AS data mode
        /// The following elements are only used in AS data mode:
        /// holdAnnouncementMethod, use value "useInactive" in XS data mode
        /// supportRFC3398, use value "false" in XS data mode
        /// The following element values are only applicable in AS data mode:
        /// holdNormalization=useRfc3264Hold will raise an error in XS data mode
        /// Replaced by: SystemSIPDeviceTypeAddRequest19sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest19Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest19(this OcipClient client, SystemSIPDeviceTypeAddRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in XS data mode:
        /// enable3G4GContinuity, use value "false" in AS data mode
        /// The following elements are only used in AS data mode:
        /// holdAnnouncementMethod, use value "useInactive" in XS data mode
        /// supportRFC3398, use value "false" in XS data mode
        /// The following element values are only applicable in AS data mode:
        /// holdNormalization=useRfc3264Hold will raise an error in XS data mode
        /// Replaced by: SystemSIPDeviceTypeAddRequest19sp1
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest19Async(this OcipClient client, SystemSIPDeviceTypeAddRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in XS data mode:
        /// enable3G4GContinuity, use value "false" in AS data mode
        /// The following elements are only used in AS data mode:
        /// holdAnnouncementMethod, use value "useInactive" in XS data mode
        /// supportRFC3398, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// 
        /// The following element values are only applicable in AS data mode:
        /// holdNormalization=useRfc3264Hold will raise an error in XS data mode
        /// Replaced by: SystemSIPDeviceTypeAddRequest20
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest19sp1Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest19sp1(this OcipClient client, SystemSIPDeviceTypeAddRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in XS data mode:
        /// enable3G4GContinuity, use value "false" in AS data mode
        /// The following elements are only used in AS data mode:
        /// holdAnnouncementMethod, use value "useInactive" in XS data mode
        /// supportRFC3398, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// 
        /// The following element values are only applicable in AS data mode:
        /// holdNormalization=useRfc3264Hold will raise an error in XS data mode
        /// Replaced by: SystemSIPDeviceTypeAddRequest20
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest19sp1Async(this OcipClient client, SystemSIPDeviceTypeAddRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in XS data mode:
        /// enable3G4GContinuity, use value "false" in AS data mode
        /// The following elements are only used in AS data mode:
        /// holdAnnouncementMethod, use value "useInactive" in XS data mode
        /// supportRFC3398, use value "false" in XS data mode
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// The following element values are only applicable in AS data mode:
        /// holdNormalization=useRfc3264Hold will raise an error in XS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest20Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest20(this OcipClient client, SystemSIPDeviceTypeAddRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in XS data mode:
        /// enable3G4GContinuity, use value "false" in AS data mode
        /// The following elements are only used in AS data mode:
        /// holdAnnouncementMethod, use value "useInactive" in XS data mode
        /// supportRFC3398, use value "false" in XS data mode
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// The following element values are only applicable in AS data mode:
        /// holdNormalization=useRfc3264Hold will raise an error in XS data mode
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest20Async(this OcipClient client, SystemSIPDeviceTypeAddRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// The following elements are only used in HSS data mode:
        /// enable3G4GContinuity, use value "false" in AS data mode
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// The following elements are only used in AS data mode:
        /// holdAnnouncementMethod, use value "useInactive" in HSS data mode
        /// supportRFC3398, use value "false" in HSS data mode
        /// supportClientSessionInfo, use value "false" in HSS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in HSS data mode
        /// supportRemotePartyInfo, use value "false" in HSS data mode
        /// The following element values are only applicable in AS data mode:
        /// holdNormalization=useRfc3264Hold will raise an error in HSS data mode
        /// 
        /// Replaced by: SystemSIPDeviceTypeAddRequest21sp1V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest20sp1Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest20sp1(this OcipClient client, SystemSIPDeviceTypeAddRequest20sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// The following elements are only used in HSS data mode:
        /// enable3G4GContinuity, use value "false" in AS data mode
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// The following elements are only used in AS data mode:
        /// holdAnnouncementMethod, use value "useInactive" in HSS data mode
        /// supportRFC3398, use value "false" in HSS data mode
        /// supportClientSessionInfo, use value "false" in HSS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in HSS data mode
        /// supportRemotePartyInfo, use value "false" in HSS data mode
        /// The following element values are only applicable in AS data mode:
        /// holdNormalization=useRfc3264Hold will raise an error in HSS data mode
        /// 
        /// Replaced by: SystemSIPDeviceTypeAddRequest21sp1V2.
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest20sp1Async(this OcipClient client, SystemSIPDeviceTypeAddRequest20sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in XS data mode:
        /// enhancedForICS, use value "false" in AS data mode
        /// supports3G4GContinuity, use value "false" in AS data mode
        /// publishesOwnPresence, use value "false" in AS data mode
        /// The following elements are only used in AS data mode:
        /// holdAnnouncementMethod, use value "useInactive" in XS data mode
        /// supportRFC3398, use value "false" in XS data mode
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// The following element values are only applicable in AS data mode:
        /// holdNormalization=useRfc3264Hold will raise an error in XS data mode
        /// The following elements are only used in AS data mode and ignored in XS data mode:
        /// supportCauseParameter
        /// Replaced by: SystemSIPDeviceTypeAddRequest21sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest21Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest21(this OcipClient client, SystemSIPDeviceTypeAddRequest21 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in XS data mode:
        /// enhancedForICS, use value "false" in AS data mode
        /// supports3G4GContinuity, use value "false" in AS data mode
        /// publishesOwnPresence, use value "false" in AS data mode
        /// The following elements are only used in AS data mode:
        /// holdAnnouncementMethod, use value "useInactive" in XS data mode
        /// supportRFC3398, use value "false" in XS data mode
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// The following element values are only applicable in AS data mode:
        /// holdNormalization=useRfc3264Hold will raise an error in XS data mode
        /// The following elements are only used in AS data mode and ignored in XS data mode:
        /// supportCauseParameter
        /// Replaced by: SystemSIPDeviceTypeAddRequest21sp1
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest21Async(this OcipClient client, SystemSIPDeviceTypeAddRequest21 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in XS data mode:
        /// enhancedForICS, use value "false" in AS data mode
        /// supports3G4GContinuity, use value "false" in AS data mode
        /// publishesOwnPresence, use value "false" in AS data mode
        /// locationNetwork, use value "Fixed" in AS data mode
        /// The following elements are only used in AS data mode:
        /// holdAnnouncementMethod, use value "useInactive" in XS data mode
        /// supportRFC3398, use value "false" in XS data mode
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// The following element values are only applicable in AS data mode:
        /// holdNormalization=useRfc3264Hold will raise an error in XS data mode
        /// The following elements are only used in AS data mode and ignored in XS data mode:
        /// supportCauseParameter
        /// 
        /// Replaced by: SystemSIPDeviceTypeAddRequest21Sp1V2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest21sp1Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest21sp1(this OcipClient client, SystemSIPDeviceTypeAddRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in XS data mode:
        /// enhancedForICS, use value "false" in AS data mode
        /// supports3G4GContinuity, use value "false" in AS data mode
        /// publishesOwnPresence, use value "false" in AS data mode
        /// locationNetwork, use value "Fixed" in AS data mode
        /// The following elements are only used in AS data mode:
        /// holdAnnouncementMethod, use value "useInactive" in XS data mode
        /// supportRFC3398, use value "false" in XS data mode
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// The following element values are only applicable in AS data mode:
        /// holdNormalization=useRfc3264Hold will raise an error in XS data mode
        /// The following elements are only used in AS data mode and ignored in XS data mode:
        /// supportCauseParameter
        /// 
        /// Replaced by: SystemSIPDeviceTypeAddRequest21Sp1V2
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest21sp1Async(this OcipClient client, SystemSIPDeviceTypeAddRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in the XS data mode and ignored in the AS data mode:
        /// enhancedForICS
        /// supports3G4GContinuity
        /// publishesOwnPresence, use value "false" in AS data mode
        /// locationNetwork, use value "Fixed" in AS data mode
        /// 
        /// The following elements are only used in AS data mode and ignored in the XS data mode:
        /// supportRFC3398, use value "false" in XS data mode
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// 
        /// The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:
        /// Non-intelligent Device Addressing
        /// Intelligent Device Addressing
        /// 
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// 
        /// Replaced by: SystemSIPDeviceTypeAddRequest22 in AS data mode.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest21sp1V2Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest21sp1V2(this OcipClient client, SystemSIPDeviceTypeAddRequest21sp1V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in the XS data mode and ignored in the AS data mode:
        /// enhancedForICS
        /// supports3G4GContinuity
        /// publishesOwnPresence, use value "false" in AS data mode
        /// locationNetwork, use value "Fixed" in AS data mode
        /// 
        /// The following elements are only used in AS data mode and ignored in the XS data mode:
        /// supportRFC3398, use value "false" in XS data mode
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// 
        /// The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:
        /// Non-intelligent Device Addressing
        /// Intelligent Device Addressing
        /// 
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// 
        /// Replaced by: SystemSIPDeviceTypeAddRequest22 in AS data mode.
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest21sp1V2Async(this OcipClient client, SystemSIPDeviceTypeAddRequest21sp1V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,
        /// the device type created is at reseller level. Device type name should be unique through out the system
        /// including all the reseller level device types.
        /// The following elements are only used in the XS data mode and ignored in the AS data mode:
        /// enhancedForICS
        /// supports3G4GContinuity
        /// publishesOwnPresence, use value "false" in AS data mode
        /// locationNetwork, use value "Fixed" in AS data mode
        /// 
        /// The following elements are only used in AS data mode and ignored in the XS data mode:
        /// supportRFC3398, use value "false" in XS data mode
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// resellerId
        /// 
        /// The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:
        /// Non-intelligent Device Addressing
        /// Intelligent Device Addressing
        /// 
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// 
        /// Deprecated by: SystemSIPDeviceTypeAddRequest22V2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest22Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest22(this OcipClient client, SystemSIPDeviceTypeAddRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,
        /// the device type created is at reseller level. Device type name should be unique through out the system
        /// including all the reseller level device types.
        /// The following elements are only used in the XS data mode and ignored in the AS data mode:
        /// enhancedForICS
        /// supports3G4GContinuity
        /// publishesOwnPresence, use value "false" in AS data mode
        /// locationNetwork, use value "Fixed" in AS data mode
        /// 
        /// The following elements are only used in AS data mode and ignored in the XS data mode:
        /// supportRFC3398, use value "false" in XS data mode
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// resellerId
        /// 
        /// The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:
        /// Non-intelligent Device Addressing
        /// Intelligent Device Addressing
        /// 
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// 
        /// Deprecated by: SystemSIPDeviceTypeAddRequest22V2
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest22Async(this OcipClient client, SystemSIPDeviceTypeAddRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,
        /// the device type created is at reseller level. Device type name should be unique through out the system
        /// including all the reseller level device types.
        /// The following elements are only used in the XS data mode and ignored in the AS data mode:
        /// enhancedForICS, use value "false" in AS data mode
        /// supports3G4GContinuity, use value "false" in AS data mode
        /// publishesOwnPresence, use value "false" in AS data mode
        /// locationNetwork, use value "Fixed" in AS data mode
        /// allowTerminationBasedOnICSI, use value "false" in AS data mode
        /// roamingMode, use value "None" in AS data mode
        /// 
        /// The following elements are only used in AS data mode and ignored in the XS data mode:
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// supportVisualDeviceManagementRedirectLink, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// resellerId
        /// supportVisualDeviceManagementAPI, use value "false" in XS data mode
        /// deviceCategory
        /// verstatInPAIHeader, use value "false" in XS data mode
        /// verstatInFromHeader, use value "false" in XS data mode
        /// The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:
        /// SignalingAddressType=Non-intelligent Device Addressing
        /// SignalingAddressType=Intelligent Device Addressing
        /// 
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// 
        /// Replaced by: SystemSIPDeviceTypeAddRequest23V7.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest22V10Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest22V10(this OcipClient client, SystemSIPDeviceTypeAddRequest22V10 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,
        /// the device type created is at reseller level. Device type name should be unique through out the system
        /// including all the reseller level device types.
        /// The following elements are only used in the XS data mode and ignored in the AS data mode:
        /// enhancedForICS, use value "false" in AS data mode
        /// supports3G4GContinuity, use value "false" in AS data mode
        /// publishesOwnPresence, use value "false" in AS data mode
        /// locationNetwork, use value "Fixed" in AS data mode
        /// allowTerminationBasedOnICSI, use value "false" in AS data mode
        /// roamingMode, use value "None" in AS data mode
        /// 
        /// The following elements are only used in AS data mode and ignored in the XS data mode:
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// supportVisualDeviceManagementRedirectLink, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// resellerId
        /// supportVisualDeviceManagementAPI, use value "false" in XS data mode
        /// deviceCategory
        /// verstatInPAIHeader, use value "false" in XS data mode
        /// verstatInFromHeader, use value "false" in XS data mode
        /// The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:
        /// SignalingAddressType=Non-intelligent Device Addressing
        /// SignalingAddressType=Intelligent Device Addressing
        /// 
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// 
        /// Replaced by: SystemSIPDeviceTypeAddRequest23V7.
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest22V10Async(this OcipClient client, SystemSIPDeviceTypeAddRequest22V10 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,
        /// the device type created is at reseller level. Device type name should be unique through out the system
        /// including all the reseller level device types.
        /// The following elements are only used in the XS data mode and ignored in the AS data mode:
        /// enhancedForICS
        /// supports3G4GContinuity
        /// publishesOwnPresence, use value "false" in AS data mode
        /// locationNetwork, use value "Fixed" in AS data mode
        /// allowTerminationBasedOnICSI, use value "false" in AS data mode
        /// roamingMode, use value "None" in AS data mode
        /// 
        /// The following elements are only used in AS data mode and ignored in the XS data mode:
        /// supportRFC3398, use value "false" in XS data mode
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// resellerId
        /// 
        /// The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:
        /// Non-intelligent Device Addressing
        /// Intelligent Device Addressing
        /// 
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// 
        /// Deprecated by SystemSIPDeviceTypeAddRequest22V3
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest22V2Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest22V2(this OcipClient client, SystemSIPDeviceTypeAddRequest22V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,
        /// the device type created is at reseller level. Device type name should be unique through out the system
        /// including all the reseller level device types.
        /// The following elements are only used in the XS data mode and ignored in the AS data mode:
        /// enhancedForICS
        /// supports3G4GContinuity
        /// publishesOwnPresence, use value "false" in AS data mode
        /// locationNetwork, use value "Fixed" in AS data mode
        /// allowTerminationBasedOnICSI, use value "false" in AS data mode
        /// roamingMode, use value "None" in AS data mode
        /// 
        /// The following elements are only used in AS data mode and ignored in the XS data mode:
        /// supportRFC3398, use value "false" in XS data mode
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// resellerId
        /// 
        /// The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:
        /// Non-intelligent Device Addressing
        /// Intelligent Device Addressing
        /// 
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// 
        /// Deprecated by SystemSIPDeviceTypeAddRequest22V3
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest22V2Async(this OcipClient client, SystemSIPDeviceTypeAddRequest22V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,
        /// the device type created is at reseller level. Device type name should be unique through out the system
        /// including all the reseller level device types.
        /// The following elements are only used in the XS data mode and ignored in the AS data mode:
        /// enhancedForICS, use value "false" in AS data mode
        /// supports3G4GContinuity, use value "false" in AS data mode
        /// publishesOwnPresence, use value "false" in AS data mode
        /// locationNetwork, use value "Fixed" in AS data mode
        /// allowTerminationBasedOnICSI, use value "false" in AS data mode
        /// roamingMode, use value "None" in AS data mode
        /// 
        /// The following elements are only used in AS data mode and ignored in the XS data mode:
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// supportVisualDeviceManagement, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// resellerId
        /// 
        /// The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:
        /// SignalingAddressType=Non-intelligent Device Addressing
        /// SignalingAddressType=Intelligent Device Addressing
        /// 
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest22V3Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest22V3(this OcipClient client, SystemSIPDeviceTypeAddRequest22V3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,
        /// the device type created is at reseller level. Device type name should be unique through out the system
        /// including all the reseller level device types.
        /// The following elements are only used in the XS data mode and ignored in the AS data mode:
        /// enhancedForICS, use value "false" in AS data mode
        /// supports3G4GContinuity, use value "false" in AS data mode
        /// publishesOwnPresence, use value "false" in AS data mode
        /// locationNetwork, use value "Fixed" in AS data mode
        /// allowTerminationBasedOnICSI, use value "false" in AS data mode
        /// roamingMode, use value "None" in AS data mode
        /// 
        /// The following elements are only used in AS data mode and ignored in the XS data mode:
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// supportVisualDeviceManagement, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// resellerId
        /// 
        /// The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:
        /// SignalingAddressType=Non-intelligent Device Addressing
        /// SignalingAddressType=Intelligent Device Addressing
        /// 
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest22V3Async(this OcipClient client, SystemSIPDeviceTypeAddRequest22V3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,
        /// the device type created is at reseller level. Device type name should be unique through out the system
        /// including all the reseller level device types.
        /// The following elements are only used in the XS data mode and ignored in the AS data mode:
        /// enhancedForICS, use value "false" in AS data mode
        /// supports3G4GContinuity, use value "false" in AS data mode
        /// publishesOwnPresence, use value "false" in AS data mode
        /// locationNetwork, use value "Fixed" in AS data mode
        /// allowTerminationBasedOnICSI, use value "false" in AS data mode
        /// roamingMode, use value "None" in AS data mode
        /// 
        /// The following elements are only used in AS data mode and ignored in the XS data mode:
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// supportVisualDeviceManagement, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// resellerId
        /// 
        /// The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:
        /// SignalingAddressType=Non-intelligent Device Addressing
        /// SignalingAddressType=Intelligent Device Addressing
        /// 
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// 
        /// Deprecated by: SystemSIPDeviceTypeAddRequest23V2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest22V5Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest22V5(this OcipClient client, SystemSIPDeviceTypeAddRequest22V5 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,
        /// the device type created is at reseller level. Device type name should be unique through out the system
        /// including all the reseller level device types.
        /// The following elements are only used in the XS data mode and ignored in the AS data mode:
        /// enhancedForICS, use value "false" in AS data mode
        /// supports3G4GContinuity, use value "false" in AS data mode
        /// publishesOwnPresence, use value "false" in AS data mode
        /// locationNetwork, use value "Fixed" in AS data mode
        /// allowTerminationBasedOnICSI, use value "false" in AS data mode
        /// roamingMode, use value "None" in AS data mode
        /// 
        /// The following elements are only used in AS data mode and ignored in the XS data mode:
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// supportVisualDeviceManagement, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// resellerId
        /// 
        /// The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:
        /// SignalingAddressType=Non-intelligent Device Addressing
        /// SignalingAddressType=Intelligent Device Addressing
        /// 
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// 
        /// Deprecated by: SystemSIPDeviceTypeAddRequest23V2
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest22V5Async(this OcipClient client, SystemSIPDeviceTypeAddRequest22V5 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,
        /// the device type created is at reseller level. Device type name should be unique through out the system
        /// including all the reseller level device types.
        /// The following elements are only used in the XS data mode and ignored in the AS data mode:
        /// enhancedForICS, use value "false" in AS data mode
        /// supports3G4GContinuity, use value "false" in AS data mode
        /// publishesOwnPresence, use value "false" in AS data mode
        /// locationNetwork, use value "Fixed" in AS data mode
        /// allowTerminationBasedOnICSI, use value "false" in AS data mode
        /// roamingMode, use value "None" in AS data mode
        /// 
        /// The following elements are only used in AS data mode and ignored in the XS data mode:
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// supportVisualDeviceManagement, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// supportCallingPartyCategoryInOutboundFromHeader, use value "true" in XS data mode
        /// resellerId
        /// 
        /// The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:
        /// SignalingAddressType=Non-intelligent Device Addressing
        /// SignalingAddressType=Intelligent Device Addressing
        /// 
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// 
        /// Deprecated by: SystemSIPDeviceTypeAddRequest23V2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest23Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest23(this OcipClient client, SystemSIPDeviceTypeAddRequest23 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,
        /// the device type created is at reseller level. Device type name should be unique through out the system
        /// including all the reseller level device types.
        /// The following elements are only used in the XS data mode and ignored in the AS data mode:
        /// enhancedForICS, use value "false" in AS data mode
        /// supports3G4GContinuity, use value "false" in AS data mode
        /// publishesOwnPresence, use value "false" in AS data mode
        /// locationNetwork, use value "Fixed" in AS data mode
        /// allowTerminationBasedOnICSI, use value "false" in AS data mode
        /// roamingMode, use value "None" in AS data mode
        /// 
        /// The following elements are only used in AS data mode and ignored in the XS data mode:
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// supportVisualDeviceManagement, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// supportCallingPartyCategoryInOutboundFromHeader, use value "true" in XS data mode
        /// resellerId
        /// 
        /// The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:
        /// SignalingAddressType=Non-intelligent Device Addressing
        /// SignalingAddressType=Intelligent Device Addressing
        /// 
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// 
        /// Deprecated by: SystemSIPDeviceTypeAddRequest23V2
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest23Async(this OcipClient client, SystemSIPDeviceTypeAddRequest23 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,
        /// the device type created is at reseller level. Device type name should be unique through out the system
        /// including all the reseller level device types.
        /// The following elements are only used in the XS data mode and ignored in the AS data mode:
        /// enhancedForICS, use value "false" in AS data mode
        /// supports3G4GContinuity, use value "false" in AS data mode
        /// publishesOwnPresence, use value "false" in AS data mode
        /// locationNetwork, use value "Fixed" in AS data mode
        /// allowTerminationBasedOnICSI, use value "false" in AS data mode
        /// roamingMode, use value "None" in AS data mode
        /// 
        /// The following elements are only used in AS data mode and ignored in the XS data mode:
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// supportVisualDeviceManagement, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// supportCallingPartyCategoryInOutboundFromHeader, use value "true" in XS data mode
        /// resellerId
        /// 
        /// The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:
        /// SignalingAddressType=Non-intelligent Device Addressing
        /// SignalingAddressType=Intelligent Device Addressing
        /// 
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeAddRequest23V2Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest23V2(this OcipClient client, SystemSIPDeviceTypeAddRequest23V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type.
        /// The response is either SuccessResponse or ErrorResponse. When the optional element resellerId is specified,
        /// the device type created is at reseller level. Device type name should be unique through out the system
        /// including all the reseller level device types.
        /// The following elements are only used in the XS data mode and ignored in the AS data mode:
        /// enhancedForICS, use value "false" in AS data mode
        /// supports3G4GContinuity, use value "false" in AS data mode
        /// publishesOwnPresence, use value "false" in AS data mode
        /// locationNetwork, use value "Fixed" in AS data mode
        /// allowTerminationBasedOnICSI, use value "false" in AS data mode
        /// roamingMode, use value "None" in AS data mode
        /// 
        /// The following elements are only used in AS data mode and ignored in the XS data mode:
        /// supportClientSessionInfo, use value "false" in XS data mode
        /// supportCallInfoConferenceSubscriptionURI, use value "false" in XS data mode
        /// supportRemotePartyInfo, use value "false" in XS data mode
        /// supportVisualDeviceManagement, use value "false" in XS data mode
        /// bypassMediaTreatment, use value "false" in XS data mode
        /// supportCauseParameter, use value "false" in XS data mode
        /// supportCallingPartyCategoryInOutboundFromHeader, use value "true" in XS data mode
        /// resellerId
        /// 
        /// The following values for element profile are only used in AS data mode and an error is returned in the XS data mode:
        /// SignalingAddressType=Non-intelligent Device Addressing
        /// SignalingAddressType=Intelligent Device Addressing
        /// 
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeAddRequest23V2Async(this OcipClient client, SystemSIPDeviceTypeAddRequest23V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type file.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: SystemSIPDeviceTypeFileAddRequest14sp8
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeFileAddRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeFileAddRequest(this OcipClient client, SystemSIPDeviceTypeFileAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type file.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: SystemSIPDeviceTypeFileAddRequest14sp8
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeFileAddRequestAsync(this OcipClient client, SystemSIPDeviceTypeFileAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type file.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeFileAddRequest14sp8Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeFileAddRequest14sp8(this OcipClient client, SystemSIPDeviceTypeFileAddRequest14sp8 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type file.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeFileAddRequest14sp8Async(this OcipClient client, SystemSIPDeviceTypeFileAddRequest14sp8 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Replaced by: SystemSIPDeviceTypeFileAddRequest18.
        /// Request to add a sip device type file.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeFileAddRequest16sp1Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeFileAddRequest16sp1(this OcipClient client, SystemSIPDeviceTypeFileAddRequest16sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Replaced by: SystemSIPDeviceTypeFileAddRequest18.
        /// Request to add a sip device type file.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeFileAddRequest16sp1Async(this OcipClient client, SystemSIPDeviceTypeFileAddRequest16sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type file.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeFileAddRequest18Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeFileAddRequest18(this OcipClient client, SystemSIPDeviceTypeFileAddRequest18 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type file.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeFileAddRequest18Async(this OcipClient client, SystemSIPDeviceTypeFileAddRequest18 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type file.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeFileAddRequest20
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeFileAddRequest19Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeFileAddRequest19(this OcipClient client, SystemSIPDeviceTypeFileAddRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type file.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeFileAddRequest20
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeFileAddRequest19Async(this OcipClient client, SystemSIPDeviceTypeFileAddRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a sip device type file.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeFileAddRequest20Sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeFileAddRequest20Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeFileAddRequest20(this OcipClient client, SystemSIPDeviceTypeFileAddRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a sip device type file.
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeFileAddRequest20Sp1
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeFileAddRequest20Async(this OcipClient client, SystemSIPDeviceTypeFileAddRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to delete a sip device type file.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: SystemSIPDeviceTypeFileDeleteRequest14sp8
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeFileDeleteRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeFileDeleteRequest(this OcipClient client, SystemSIPDeviceTypeFileDeleteRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to delete a sip device type file.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: SystemSIPDeviceTypeFileDeleteRequest14sp8
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeFileDeleteRequestAsync(this OcipClient client, SystemSIPDeviceTypeFileDeleteRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get the list of device files managed by the Device Management System, on a per-device type basis.
        /// The response is either SystemSIPDeviceTypeFileGetListResponse or ErrorResponse.
        /// Replaced By: SystemSIPDeviceTypeFileGetListRequest14sp8
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeFileGetListRequestAsync instead.")]
        public static async Task<SystemSIPDeviceTypeFileGetListResponse> SystemSIPDeviceTypeFileGetListRequest(this OcipClient client, SystemSIPDeviceTypeFileGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeFileGetListResponse;
        }

        /// <summary>
        /// Request to get the list of device files managed by the Device Management System, on a per-device type basis.
        /// The response is either SystemSIPDeviceTypeFileGetListResponse or ErrorResponse.
        /// Replaced By: SystemSIPDeviceTypeFileGetListRequest14sp8
        /// </summary>
        public static async Task<SystemSIPDeviceTypeFileGetListResponse> SystemSIPDeviceTypeFileGetListRequestAsync(this OcipClient client, SystemSIPDeviceTypeFileGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeFileGetListResponse;
        }
        /// <summary>
        /// Request to get a sip device type file.
        /// The response is either SystemSIPDeviceTypeFileGetResponse or ErrorResponse.
        /// Replaced By: SystemSIPDeviceTypeFileGetRequest14sp8
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeFileGetRequestAsync instead.")]
        public static async Task<SystemSIPDeviceTypeFileGetResponse> SystemSIPDeviceTypeFileGetRequest(this OcipClient client, SystemSIPDeviceTypeFileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeFileGetResponse;
        }

        /// <summary>
        /// Request to get a sip device type file.
        /// The response is either SystemSIPDeviceTypeFileGetResponse or ErrorResponse.
        /// Replaced By: SystemSIPDeviceTypeFileGetRequest14sp8
        /// </summary>
        public static async Task<SystemSIPDeviceTypeFileGetResponse> SystemSIPDeviceTypeFileGetRequestAsync(this OcipClient client, SystemSIPDeviceTypeFileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeFileGetResponse;
        }
        /// <summary>
        /// Request to get a sip device type file.
        /// The response is either SystemSIPDeviceTypeFileGetResponse14sp8 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeFileGetRequest14sp8Async instead.")]
        public static async Task<SystemSIPDeviceTypeFileGetResponse14sp8> SystemSIPDeviceTypeFileGetRequest14sp8(this OcipClient client, SystemSIPDeviceTypeFileGetRequest14sp8 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeFileGetResponse14sp8;
        }

        /// <summary>
        /// Request to get a sip device type file.
        /// The response is either SystemSIPDeviceTypeFileGetResponse14sp8 or ErrorResponse.
        /// </summary>
        public static async Task<SystemSIPDeviceTypeFileGetResponse14sp8> SystemSIPDeviceTypeFileGetRequest14sp8Async(this OcipClient client, SystemSIPDeviceTypeFileGetRequest14sp8 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeFileGetResponse14sp8;
        }
        /// <summary>
        /// Replaced by: SystemSIPDeviceTypeFileGetRequest18.
        /// Request to get a sip device type file.
        /// The response is either SystemSIPDeviceTypeFileGetResponse16sp1 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeFileGetRequest16sp1Async instead.")]
        public static async Task<SystemSIPDeviceTypeFileGetResponse16sp1> SystemSIPDeviceTypeFileGetRequest16sp1(this OcipClient client, SystemSIPDeviceTypeFileGetRequest16sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeFileGetResponse16sp1;
        }

        /// <summary>
        /// Replaced by: SystemSIPDeviceTypeFileGetRequest18.
        /// Request to get a sip device type file.
        /// The response is either SystemSIPDeviceTypeFileGetResponse16sp1 or ErrorResponse.
        /// </summary>
        public static async Task<SystemSIPDeviceTypeFileGetResponse16sp1> SystemSIPDeviceTypeFileGetRequest16sp1Async(this OcipClient client, SystemSIPDeviceTypeFileGetRequest16sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeFileGetResponse16sp1;
        }
        /// <summary>
        /// Request to get a sip device type file.
        /// The response is either SystemSIPDeviceTypeFileGetResponse18 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeFileGetRequest18Async instead.")]
        public static async Task<SystemSIPDeviceTypeFileGetResponse18> SystemSIPDeviceTypeFileGetRequest18(this OcipClient client, SystemSIPDeviceTypeFileGetRequest18 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeFileGetResponse18;
        }

        /// <summary>
        /// Request to get a sip device type file.
        /// The response is either SystemSIPDeviceTypeFileGetResponse18 or ErrorResponse.
        /// </summary>
        public static async Task<SystemSIPDeviceTypeFileGetResponse18> SystemSIPDeviceTypeFileGetRequest18Async(this OcipClient client, SystemSIPDeviceTypeFileGetRequest18 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeFileGetResponse18;
        }
        /// <summary>
        /// Request to get a sip device type file.
        /// The response is either SystemSIPDeviceTypeFileGetResponse19 or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeFileGetRequest20
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeFileGetRequest19Async instead.")]
        public static async Task<SystemSIPDeviceTypeFileGetResponse19> SystemSIPDeviceTypeFileGetRequest19(this OcipClient client, SystemSIPDeviceTypeFileGetRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeFileGetResponse19;
        }

        /// <summary>
        /// Request to get a sip device type file.
        /// The response is either SystemSIPDeviceTypeFileGetResponse19 or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeFileGetRequest20
        /// </summary>
        public static async Task<SystemSIPDeviceTypeFileGetResponse19> SystemSIPDeviceTypeFileGetRequest19Async(this OcipClient client, SystemSIPDeviceTypeFileGetRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeFileGetResponse19;
        }
        /// <summary>
        /// Request to get a sip device type file.
        /// The response is either SystemSIPDeviceTypeFileGetResponse20 or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeFileGetRequest20Sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeFileGetRequest20Async instead.")]
        public static async Task<SystemSIPDeviceTypeFileGetResponse20> SystemSIPDeviceTypeFileGetRequest20(this OcipClient client, SystemSIPDeviceTypeFileGetRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeFileGetResponse20;
        }

        /// <summary>
        /// Request to get a sip device type file.
        /// The response is either SystemSIPDeviceTypeFileGetResponse20 or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeFileGetRequest20Sp1
        /// </summary>
        public static async Task<SystemSIPDeviceTypeFileGetResponse20> SystemSIPDeviceTypeFileGetRequest20Async(this OcipClient client, SystemSIPDeviceTypeFileGetRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeFileGetResponse20;
        }
        /// <summary>
        /// Request to modify a sip device type file.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: SystemSIPDeviceTypeFileModifyRequest14sp8
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeFileModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeFileModifyRequest(this OcipClient client, SystemSIPDeviceTypeFileModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a sip device type file.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: SystemSIPDeviceTypeFileModifyRequest14sp8
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeFileModifyRequestAsync(this OcipClient client, SystemSIPDeviceTypeFileModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify a sip device type file.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeFileModifyRequest14sp8Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeFileModifyRequest14sp8(this OcipClient client, SystemSIPDeviceTypeFileModifyRequest14sp8 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a sip device type file.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeFileModifyRequest14sp8Async(this OcipClient client, SystemSIPDeviceTypeFileModifyRequest14sp8 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequestAsync instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse> SystemSIPDeviceTypeGetRequest(this OcipClient client, SystemSIPDeviceTypeGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse or ErrorResponse.
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse> SystemSIPDeviceTypeGetRequestAsync(this OcipClient client, SystemSIPDeviceTypeGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse14sp1 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest14sp1Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse14sp1> SystemSIPDeviceTypeGetRequest14sp1(this OcipClient client, SystemSIPDeviceTypeGetRequest14sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse14sp1;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse14sp1 or ErrorResponse.
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse14sp1> SystemSIPDeviceTypeGetRequest14sp1Async(this OcipClient client, SystemSIPDeviceTypeGetRequest14sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse14sp1;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse14sp2 or ErrorResponse.
        /// Replaced By: SystemSIPDeviceTypeGetRequest14sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest14sp2Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse14sp2> SystemSIPDeviceTypeGetRequest14sp2(this OcipClient client, SystemSIPDeviceTypeGetRequest14sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse14sp2;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse14sp2 or ErrorResponse.
        /// Replaced By: SystemSIPDeviceTypeGetRequest14sp3
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse14sp2> SystemSIPDeviceTypeGetRequest14sp2Async(this OcipClient client, SystemSIPDeviceTypeGetRequest14sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse14sp2;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse14sp3 or ErrorResponse.
        /// Replaced by: SystemSIPDeviceTypeGetRequest14sp6
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest14sp3Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse14sp3> SystemSIPDeviceTypeGetRequest14sp3(this OcipClient client, SystemSIPDeviceTypeGetRequest14sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse14sp3;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse14sp3 or ErrorResponse.
        /// Replaced by: SystemSIPDeviceTypeGetRequest14sp6
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse14sp3> SystemSIPDeviceTypeGetRequest14sp3Async(this OcipClient client, SystemSIPDeviceTypeGetRequest14sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse14sp3;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse14sp6 or ErrorResponse.
        /// Replaced By : SystemSIPDeviceTypeGetRequest15
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest14sp6Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse14sp6> SystemSIPDeviceTypeGetRequest14sp6(this OcipClient client, SystemSIPDeviceTypeGetRequest14sp6 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse14sp6;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse14sp6 or ErrorResponse.
        /// Replaced By : SystemSIPDeviceTypeGetRequest15
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse14sp6> SystemSIPDeviceTypeGetRequest14sp6Async(this OcipClient client, SystemSIPDeviceTypeGetRequest14sp6 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse14sp6;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse15 or ErrorResponse.
        /// Replaced By : SystemSIPDeviceTypeGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest15Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse15> SystemSIPDeviceTypeGetRequest15(this OcipClient client, SystemSIPDeviceTypeGetRequest15 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse15;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse15 or ErrorResponse.
        /// Replaced By : SystemSIPDeviceTypeGetRequest16
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse15> SystemSIPDeviceTypeGetRequest15Async(this OcipClient client, SystemSIPDeviceTypeGetRequest15 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse15;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse16 or ErrorResponse.
        /// Replaced by: SystemSIPDeviceTypeGetRequest16sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest16Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse16> SystemSIPDeviceTypeGetRequest16(this OcipClient client, SystemSIPDeviceTypeGetRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse16;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse16 or ErrorResponse.
        /// Replaced by: SystemSIPDeviceTypeGetRequest16sp1
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse16> SystemSIPDeviceTypeGetRequest16Async(this OcipClient client, SystemSIPDeviceTypeGetRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse16;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse16sp1 or ErrorResponse.
        /// 
        /// Replaced by:  SystemSIPDeviceTypeGetRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest16sp1Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse16sp1> SystemSIPDeviceTypeGetRequest16sp1(this OcipClient client, SystemSIPDeviceTypeGetRequest16sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse16sp1;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse16sp1 or ErrorResponse.
        /// 
        /// Replaced by:  SystemSIPDeviceTypeGetRequest17
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse16sp1> SystemSIPDeviceTypeGetRequest16sp1Async(this OcipClient client, SystemSIPDeviceTypeGetRequest16sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse16sp1;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse17 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest17Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse17> SystemSIPDeviceTypeGetRequest17(this OcipClient client, SystemSIPDeviceTypeGetRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse17;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse17 or ErrorResponse.
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse17> SystemSIPDeviceTypeGetRequest17Async(this OcipClient client, SystemSIPDeviceTypeGetRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse17;
        }
        /// <summary>
        /// Replaced by: SystemSIPDeviceTypeGetRequest18.
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse17sp4 or ErrorResponse.
        /// Replaced by: SystemSIPDeviceTypeGetRequest18
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest17sp4Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse17sp4> SystemSIPDeviceTypeGetRequest17sp4(this OcipClient client, SystemSIPDeviceTypeGetRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse17sp4;
        }

        /// <summary>
        /// Replaced by: SystemSIPDeviceTypeGetRequest18.
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse17sp4 or ErrorResponse.
        /// Replaced by: SystemSIPDeviceTypeGetRequest18
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse17sp4> SystemSIPDeviceTypeGetRequest17sp4Async(this OcipClient client, SystemSIPDeviceTypeGetRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse17sp4;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse18 or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeGetRequest19
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest18Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse18> SystemSIPDeviceTypeGetRequest18(this OcipClient client, SystemSIPDeviceTypeGetRequest18 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse18;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse18 or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeGetRequest19
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse18> SystemSIPDeviceTypeGetRequest18Async(this OcipClient client, SystemSIPDeviceTypeGetRequest18 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse18;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse18sp1 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest18sp1Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse18sp1> SystemSIPDeviceTypeGetRequest18sp1(this OcipClient client, SystemSIPDeviceTypeGetRequest18sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse18sp1;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse18sp1 or ErrorResponse.
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse18sp1> SystemSIPDeviceTypeGetRequest18sp1Async(this OcipClient client, SystemSIPDeviceTypeGetRequest18sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse18sp1;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse19 or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeGetRequest19.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest18sp1V2Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse19> SystemSIPDeviceTypeGetRequest18sp1V2(this OcipClient client, SystemSIPDeviceTypeGetRequest18sp1V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse19;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse19 or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeGetRequest19.
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse19> SystemSIPDeviceTypeGetRequest18sp1V2Async(this OcipClient client, SystemSIPDeviceTypeGetRequest18sp1V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse19;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse19 or ErrorResponse.
        /// Replaced by: SystemSIPDeviceTypeGetRequest19sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest19Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse19> SystemSIPDeviceTypeGetRequest19(this OcipClient client, SystemSIPDeviceTypeGetRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse19;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse19 or ErrorResponse.
        /// Replaced by: SystemSIPDeviceTypeGetRequest19sp1
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse19> SystemSIPDeviceTypeGetRequest19Async(this OcipClient client, SystemSIPDeviceTypeGetRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse19;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse19sp1 or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeGetRequest20
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest19sp1Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse19sp1> SystemSIPDeviceTypeGetRequest19sp1(this OcipClient client, SystemSIPDeviceTypeGetRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse19sp1;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse19sp1 or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeGetRequest20
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse19sp1> SystemSIPDeviceTypeGetRequest19sp1Async(this OcipClient client, SystemSIPDeviceTypeGetRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse19sp1;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse20 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest20Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse20> SystemSIPDeviceTypeGetRequest20(this OcipClient client, SystemSIPDeviceTypeGetRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse20;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse20 or ErrorResponse.
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse20> SystemSIPDeviceTypeGetRequest20Async(this OcipClient client, SystemSIPDeviceTypeGetRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse20;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse20 or ErrorResponse.
        /// Replaced by: SystemSIPDeviceTypeGetRequest21sp1V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest20sp1Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse20> SystemSIPDeviceTypeGetRequest20sp1(this OcipClient client, SystemSIPDeviceTypeGetRequest20sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse20;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse20 or ErrorResponse.
        /// Replaced by: SystemSIPDeviceTypeGetRequest21sp1V2.
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse20> SystemSIPDeviceTypeGetRequest20sp1Async(this OcipClient client, SystemSIPDeviceTypeGetRequest20sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse20;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse21 or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeGetRequest21Sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest21Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse21> SystemSIPDeviceTypeGetRequest21(this OcipClient client, SystemSIPDeviceTypeGetRequest21 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse21;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse21 or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeGetRequest21Sp1
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse21> SystemSIPDeviceTypeGetRequest21Async(this OcipClient client, SystemSIPDeviceTypeGetRequest21 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse21;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse21sp1 or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeGetRequest21sp1V2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest21sp1Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse21sp1> SystemSIPDeviceTypeGetRequest21sp1(this OcipClient client, SystemSIPDeviceTypeGetRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse21sp1;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse21sp1 or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeGetRequest21sp1V2
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse21sp1> SystemSIPDeviceTypeGetRequest21sp1Async(this OcipClient client, SystemSIPDeviceTypeGetRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse21sp1;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse21sp1V2 or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeGetRequest22 in AS data mode.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest21sp1V2Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse21sp1V2> SystemSIPDeviceTypeGetRequest21sp1V2(this OcipClient client, SystemSIPDeviceTypeGetRequest21sp1V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse21sp1V2;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse21sp1V2 or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeGetRequest22 in AS data mode.
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse21sp1V2> SystemSIPDeviceTypeGetRequest21sp1V2Async(this OcipClient client, SystemSIPDeviceTypeGetRequest21sp1V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse21sp1V2;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse22 or ErrorResponse.
        /// 
        /// Deprecated by: SystemSIPDeviceTypeGetRequest22V2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest22Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse22> SystemSIPDeviceTypeGetRequest22(this OcipClient client, SystemSIPDeviceTypeGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse22;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse22 or ErrorResponse.
        /// 
        /// Deprecated by: SystemSIPDeviceTypeGetRequest22V2
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse22> SystemSIPDeviceTypeGetRequest22Async(this OcipClient client, SystemSIPDeviceTypeGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse22;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse22V13 or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeGetRequest23V9
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest22V13Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse22V13> SystemSIPDeviceTypeGetRequest22V13(this OcipClient client, SystemSIPDeviceTypeGetRequest22V13 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse22V13;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse22V13 or ErrorResponse.
        /// 
        /// Replaced by: SystemSIPDeviceTypeGetRequest23V9
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse22V13> SystemSIPDeviceTypeGetRequest22V13Async(this OcipClient client, SystemSIPDeviceTypeGetRequest22V13 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse22V13;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse22V2 or ErrorResponse.
        /// 
        /// Deprecated by SystemSIPDeviceTypeGetRequest22V3
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest22V2Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse22V2> SystemSIPDeviceTypeGetRequest22V2(this OcipClient client, SystemSIPDeviceTypeGetRequest22V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse22V2;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse22V2 or ErrorResponse.
        /// 
        /// Deprecated by SystemSIPDeviceTypeGetRequest22V3
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse22V2> SystemSIPDeviceTypeGetRequest22V2Async(this OcipClient client, SystemSIPDeviceTypeGetRequest22V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse22V2;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse22V3 or ErrorResponse.
        /// 
        /// Deprecated by SystemSIPDeviceTypeGetRequest22V4.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest22V3Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse22V3> SystemSIPDeviceTypeGetRequest22V3(this OcipClient client, SystemSIPDeviceTypeGetRequest22V3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse22V3;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse22V3 or ErrorResponse.
        /// 
        /// Deprecated by SystemSIPDeviceTypeGetRequest22V4.
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse22V3> SystemSIPDeviceTypeGetRequest22V3Async(this OcipClient client, SystemSIPDeviceTypeGetRequest22V3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse22V3;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse22V4 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest22V4Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse22V4> SystemSIPDeviceTypeGetRequest22V4(this OcipClient client, SystemSIPDeviceTypeGetRequest22V4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse22V4;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse22V4 or ErrorResponse.
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse22V4> SystemSIPDeviceTypeGetRequest22V4Async(this OcipClient client, SystemSIPDeviceTypeGetRequest22V4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse22V4;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse22V5 or ErrorResponse.
        /// 
        /// Replaced by: SystemDeviceTypeGetRequest22V13 in XS data mode.
        /// Replaced by: SystemDeviceTypeGetRequest22V6 in AS data mode.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest22V5Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse22V5> SystemSIPDeviceTypeGetRequest22V5(this OcipClient client, SystemSIPDeviceTypeGetRequest22V5 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse22V5;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse22V5 or ErrorResponse.
        /// 
        /// Replaced by: SystemDeviceTypeGetRequest22V13 in XS data mode.
        /// Replaced by: SystemDeviceTypeGetRequest22V6 in AS data mode.
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse22V5> SystemSIPDeviceTypeGetRequest22V5Async(this OcipClient client, SystemSIPDeviceTypeGetRequest22V5 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse22V5;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse22V6 or ErrorResponse.
        /// 
        /// Replaced By: SystemSIPDeviceTypeGetRequest23V2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest22V6Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse22V6> SystemSIPDeviceTypeGetRequest22V6(this OcipClient client, SystemSIPDeviceTypeGetRequest22V6 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse22V6;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse22V6 or ErrorResponse.
        /// 
        /// Replaced By: SystemSIPDeviceTypeGetRequest23V2
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse22V6> SystemSIPDeviceTypeGetRequest22V6Async(this OcipClient client, SystemSIPDeviceTypeGetRequest22V6 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse22V6;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse22V7 or ErrorResponse.
        /// 
        /// Replaced By: SystemSIPDeviceTypeGetRequest23V2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest22V7Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse22V7> SystemSIPDeviceTypeGetRequest22V7(this OcipClient client, SystemSIPDeviceTypeGetRequest22V7 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse22V7;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse22V7 or ErrorResponse.
        /// 
        /// Replaced By: SystemSIPDeviceTypeGetRequest23V2
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse22V7> SystemSIPDeviceTypeGetRequest22V7Async(this OcipClient client, SystemSIPDeviceTypeGetRequest22V7 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse22V7;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse22V8 or ErrorResponse.
        /// 
        /// Replaced By: SystemSIPDeviceTypeGetRequest23V4
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest22V8Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse22V8> SystemSIPDeviceTypeGetRequest22V8(this OcipClient client, SystemSIPDeviceTypeGetRequest22V8 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse22V8;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse22V8 or ErrorResponse.
        /// 
        /// Replaced By: SystemSIPDeviceTypeGetRequest23V4
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse22V8> SystemSIPDeviceTypeGetRequest22V8Async(this OcipClient client, SystemSIPDeviceTypeGetRequest22V8 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse22V8;
        }
        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse23 or ErrorResponse.
        /// 
        /// Replaced By: SystemSIPDeviceTypeGetRequest23V2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeGetRequest23Async instead.")]
        public static async Task<SystemSIPDeviceTypeGetResponse23> SystemSIPDeviceTypeGetRequest23(this OcipClient client, SystemSIPDeviceTypeGetRequest23 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse23;
        }

        /// <summary>
        /// Request to get a sip device type.
        /// See Also: SystemDeviceTypeGetRequest
        /// The response is either SystemSIPDeviceTypeGetResponse23 or ErrorResponse.
        /// 
        /// Replaced By: SystemSIPDeviceTypeGetRequest23V2
        /// </summary>
        public static async Task<SystemSIPDeviceTypeGetResponse23> SystemSIPDeviceTypeGetRequest23Async(this OcipClient client, SystemSIPDeviceTypeGetRequest23 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSIPDeviceTypeGetResponse23;
        }
        /// <summary>
        /// Request to modify a sip device type.
        /// The following elements are not changeable:
        /// numberOfPorts
        /// SignalingAddressType
        /// isConferenceDevice
        /// isMusicOnHoldDevice
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeModifyRequest(this OcipClient client, SystemSIPDeviceTypeModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a sip device type.
        /// The following elements are not changeable:
        /// numberOfPorts
        /// SignalingAddressType
        /// isConferenceDevice
        /// isMusicOnHoldDevice
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeModifyRequestAsync(this OcipClient client, SystemSIPDeviceTypeModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify a sip device type.
        /// The following elements are not changeable:
        /// numberOfPorts
        /// SignalingAddressType
        /// isConferenceDevice
        /// isMusicOnHoldDevice
        /// isMobilityManagerDevice
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By : SystemSIPDeviceTypeModifyRequest15
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeModifyRequest14sp2Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeModifyRequest14sp2(this OcipClient client, SystemSIPDeviceTypeModifyRequest14sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a sip device type.
        /// The following elements are not changeable:
        /// numberOfPorts
        /// SignalingAddressType
        /// isConferenceDevice
        /// isMusicOnHoldDevice
        /// isMobilityManagerDevice
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By : SystemSIPDeviceTypeModifyRequest15
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeModifyRequest14sp2Async(this OcipClient client, SystemSIPDeviceTypeModifyRequest14sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify a sip device type.
        /// The following elements are not changeable:
        /// numberOfPorts
        /// SignalingAddressType
        /// isConferenceDevice
        /// isMusicOnHoldDevice
        /// isMobilityManagerDevice
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By : SystemSIPDeviceTypeModifyRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeModifyRequest15Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeModifyRequest15(this OcipClient client, SystemSIPDeviceTypeModifyRequest15 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a sip device type.
        /// The following elements are not changeable:
        /// numberOfPorts
        /// SignalingAddressType
        /// isConferenceDevice
        /// isMusicOnHoldDevice
        /// isMobilityManagerDevice
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By : SystemSIPDeviceTypeModifyRequest16
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeModifyRequest15Async(this OcipClient client, SystemSIPDeviceTypeModifyRequest15 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify a sip device type.
        /// The following elements are not changeable:
        /// numberOfPorts
        /// SignalingAddressType
        /// isConferenceDevice
        /// isMusicOnHoldDevice
        /// isMobilityManagerDevice
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by: SystemSIPDeviceTypeModifyRequest16sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeModifyRequest16Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeModifyRequest16(this OcipClient client, SystemSIPDeviceTypeModifyRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a sip device type.
        /// The following elements are not changeable:
        /// numberOfPorts
        /// SignalingAddressType
        /// isConferenceDevice
        /// isMusicOnHoldDevice
        /// isMobilityManagerDevice
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by: SystemSIPDeviceTypeModifyRequest16sp1
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeModifyRequest16Async(this OcipClient client, SystemSIPDeviceTypeModifyRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify a sip device type.
        /// The following elements are not changeable:
        /// numberOfPorts
        /// SignalingAddressType
        /// isConferenceDevice
        /// isMusicOnHoldDevice
        /// isMobilityManagerDevice
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeModifyRequest16sp1Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeModifyRequest16sp1(this OcipClient client, SystemSIPDeviceTypeModifyRequest16sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a sip device type.
        /// The following elements are not changeable:
        /// numberOfPorts
        /// SignalingAddressType
        /// isConferenceDevice
        /// isMusicOnHoldDevice
        /// isMobilityManagerDevice
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeModifyRequest16sp1Async(this OcipClient client, SystemSIPDeviceTypeModifyRequest16sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify a sip device type.
        /// The following elements are not changeable:
        /// numberOfPorts
        /// SignalingAddressType
        /// isConferenceDevice
        /// isMusicOnHoldDevice
        /// isMobilityManagerDevice
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// The following elements are only used in XS data mode:
        /// enable3G4GContinuity
        /// 
        /// Replaced by: SystemSIPDeviceTypeModifyRequest19
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeModifyRequest17Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeModifyRequest17(this OcipClient client, SystemSIPDeviceTypeModifyRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a sip device type.
        /// The following elements are not changeable:
        /// numberOfPorts
        /// SignalingAddressType
        /// isConferenceDevice
        /// isMusicOnHoldDevice
        /// isMobilityManagerDevice
        /// The response is either SuccessResponse or ErrorResponse.
        /// 
        /// The following elements are only used in XS data mode:
        /// enable3G4GContinuity
        /// 
        /// Replaced by: SystemSIPDeviceTypeModifyRequest19
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeModifyRequest17Async(this OcipClient client, SystemSIPDeviceTypeModifyRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are not changeable:
        /// numberOfPorts
        /// SignalingAddressType
        /// isConferenceDevice
        /// isMusicOnHoldDevice
        /// isMobilityManagerDevice
        /// deviceTypeConfigurationOption
        /// staticLineOrdering
        /// The following elements are only used in XS data mode:
        /// enable3G4GContinuity
        /// allowTerminationBasedOnICSI
        /// The following elements are only used in AS data mode:
        /// holdAnnouncementMethod
        /// supportRFC3398
        /// supportClientSessionInfo
        /// supportCallInfoConferenceSubscriptionURI
        /// supportRemotePartyInfo
        /// The following element values are only applicable in AS data mode:
        /// holdNormalization=useRfc3264Hold will raise an error in XS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeModifyRequest18sp1Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeModifyRequest18sp1(this OcipClient client, SystemSIPDeviceTypeModifyRequest18sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are not changeable:
        /// numberOfPorts
        /// SignalingAddressType
        /// isConferenceDevice
        /// isMusicOnHoldDevice
        /// isMobilityManagerDevice
        /// deviceTypeConfigurationOption
        /// staticLineOrdering
        /// The following elements are only used in XS data mode:
        /// enable3G4GContinuity
        /// allowTerminationBasedOnICSI
        /// The following elements are only used in AS data mode:
        /// holdAnnouncementMethod
        /// supportRFC3398
        /// supportClientSessionInfo
        /// supportCallInfoConferenceSubscriptionURI
        /// supportRemotePartyInfo
        /// The following element values are only applicable in AS data mode:
        /// holdNormalization=useRfc3264Hold will raise an error in XS data mode
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeModifyRequest18sp1Async(this OcipClient client, SystemSIPDeviceTypeModifyRequest18sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are not changeable:
        /// numberOfPorts
        /// SignalingAddressType
        /// isConferenceDevice
        /// isMusicOnHoldDevice
        /// isMobilityManagerDevice
        /// deviceTypeConfigurationOption
        /// staticLineOrdering
        /// The following elements are only used in AS data mode and ignored in XS data mode:
        /// holdAnnouncementMethod
        /// supportRFC3398
        /// supportClientSessionInfo
        /// supportCallInfoConferenceSubscriptionURI
        /// supportRemotePartyInfo
        /// supportVisualDeviceManagement
        /// bypassMediaTreatment
        /// supportCauseParameter
        /// The following elements are only used in XS data mode and ignored in AS mode:
        /// enhancedForICS
        /// supports3G4GContinuity
        /// publishesOwnPresence
        /// locationNetwork
        /// roamingMode
        /// 
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// When macInCert is set to true, macInNonRequestURI will be reset to false.
        /// When macInNonRequestURI is set to true, macInCert will be reset to false.
        /// Replaced by: SystemSIPDeviceTypeModifyRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeModifyRequest21Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeModifyRequest21(this OcipClient client, SystemSIPDeviceTypeModifyRequest21 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are not changeable:
        /// numberOfPorts
        /// SignalingAddressType
        /// isConferenceDevice
        /// isMusicOnHoldDevice
        /// isMobilityManagerDevice
        /// deviceTypeConfigurationOption
        /// staticLineOrdering
        /// The following elements are only used in AS data mode and ignored in XS data mode:
        /// holdAnnouncementMethod
        /// supportRFC3398
        /// supportClientSessionInfo
        /// supportCallInfoConferenceSubscriptionURI
        /// supportRemotePartyInfo
        /// supportVisualDeviceManagement
        /// bypassMediaTreatment
        /// supportCauseParameter
        /// The following elements are only used in XS data mode and ignored in AS mode:
        /// enhancedForICS
        /// supports3G4GContinuity
        /// publishesOwnPresence
        /// locationNetwork
        /// roamingMode
        /// 
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// When macInCert is set to true, macInNonRequestURI will be reset to false.
        /// When macInNonRequestURI is set to true, macInCert will be reset to false.
        /// Replaced by: SystemSIPDeviceTypeModifyRequest22
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeModifyRequest21Async(this OcipClient client, SystemSIPDeviceTypeModifyRequest21 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are not changeable:
        /// numberOfPorts
        /// SignalingAddressType
        /// isConferenceDevice
        /// isMusicOnHoldDevice
        /// isMobilityManagerDevice
        /// deviceTypeConfigurationOption
        /// staticLineOrdering
        /// The following elements are only used in AS data mode and ignored in XS data mode:
        /// supportClientSessionInfo
        /// supportCallInfoConferenceSubscriptionURI
        /// supportRemotePartyInfo
        /// supportVisualDeviceManagement
        /// bypassMediaTreatment
        /// supportCauseParameter
        /// The following elements are only used in XS data mode and ignored in AS mode:
        /// enhancedForICS
        /// supports3G4GContinuity
        /// publishesOwnPresence
        /// locationNetwork
        /// allowTerminationBasedOnICSI
        /// roamingMode
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// When macInCert is set to true, macInNonRequestURI will be reset to false.
        /// When macInNonRequestURI is set to true, macInCert will be reset to false.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPDeviceTypeModifyRequest22Async instead.")]
        public static async Task<SuccessResponse> SystemSIPDeviceTypeModifyRequest22(this OcipClient client, SystemSIPDeviceTypeModifyRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a sip device type.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are not changeable:
        /// numberOfPorts
        /// SignalingAddressType
        /// isConferenceDevice
        /// isMusicOnHoldDevice
        /// isMobilityManagerDevice
        /// deviceTypeConfigurationOption
        /// staticLineOrdering
        /// The following elements are only used in AS data mode and ignored in XS data mode:
        /// supportClientSessionInfo
        /// supportCallInfoConferenceSubscriptionURI
        /// supportRemotePartyInfo
        /// supportVisualDeviceManagement
        /// bypassMediaTreatment
        /// supportCauseParameter
        /// The following elements are only used in XS data mode and ignored in AS mode:
        /// enhancedForICS
        /// supports3G4GContinuity
        /// publishesOwnPresence
        /// locationNetwork
        /// allowTerminationBasedOnICSI
        /// roamingMode
        /// The following logic applies to these elements:
        /// macInCert
        /// macInNonRequestURI
        /// The two elements are mutually exclusive.
        /// When both are set to true, the command fails.
        /// When macInCert is set to true, macInNonRequestURI will be reset to false.
        /// When macInNonRequestURI is set to true, macInCert will be reset to false.
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPDeviceTypeModifyRequest22Async(this OcipClient client, SystemSIPDeviceTypeModifyRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify an entry from the SIP access control list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSIPModifyACLEntryRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemSIPModifyACLEntryRequest(this OcipClient client, SystemSIPModifyACLEntryRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify an entry from the SIP access control list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemSIPModifyACLEntryRequestAsync(this OcipClient client, SystemSIPModifyACLEntryRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add an entry to the SMDI access control list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSMDIAddACLEntryRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemSMDIAddACLEntryRequest(this OcipClient client, SystemSMDIAddACLEntryRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add an entry to the SMDI access control list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemSMDIAddACLEntryRequestAsync(this OcipClient client, SystemSMDIAddACLEntryRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Delete an entry from the SMDI access control list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSMDIDeleteACLEntryRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemSMDIDeleteACLEntryRequest(this OcipClient client, SystemSMDIDeleteACLEntryRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Delete an entry from the SMDI access control list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemSMDIDeleteACLEntryRequestAsync(this OcipClient client, SystemSMDIDeleteACLEntryRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify an entry from the SMDI access control list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSMDIModifyACLEntryRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemSMDIModifyACLEntryRequest(this OcipClient client, SystemSMDIModifyACLEntryRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify an entry from the SMDI access control list.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemSMDIModifyACLEntryRequestAsync(this OcipClient client, SystemSMDIModifyACLEntryRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request the system level data associated with SMPP external interface.
        /// The response is either a SystemSMPPGetResponse or an ErrorResponse.
        /// Replaced By: SystemSMPPGetRequest14sp5
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSMPPGetRequestAsync instead.")]
        public static async Task<SystemSMPPGetResponse> SystemSMPPGetRequest(this OcipClient client, SystemSMPPGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSMPPGetResponse;
        }

        /// <summary>
        /// Request the system level data associated with SMPP external interface.
        /// The response is either a SystemSMPPGetResponse or an ErrorResponse.
        /// Replaced By: SystemSMPPGetRequest14sp5
        /// </summary>
        public static async Task<SystemSMPPGetResponse> SystemSMPPGetRequestAsync(this OcipClient client, SystemSMPPGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSMPPGetResponse;
        }
        /// <summary>
        /// Get the speed dial 100 system-wide default setting.
        /// The response is either a SystemSpeedDial100GetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemSpeedDial100GetRequest17sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSpeedDial100GetRequestAsync instead.")]
        public static async Task<SystemSpeedDial100GetResponse> SystemSpeedDial100GetRequest(this OcipClient client, SystemSpeedDial100GetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSpeedDial100GetResponse;
        }

        /// <summary>
        /// Get the speed dial 100 system-wide default setting.
        /// The response is either a SystemSpeedDial100GetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemSpeedDial100GetRequest17sp1
        /// </summary>
        public static async Task<SystemSpeedDial100GetResponse> SystemSpeedDial100GetRequestAsync(this OcipClient client, SystemSpeedDial100GetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSpeedDial100GetResponse;
        }
        /// <summary>
        /// Get the system call processing configuration for all subscribers
        /// The response is either a SystemSubscriberGetCallProcessingParametersResponse or an ErrorResponse.
        /// Replaced By: SystemSubscriberGetCallProcessingParametersRequest14sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSubscriberGetCallProcessingParametersRequestAsync instead.")]
        public static async Task<SystemSubscriberGetCallProcessingParametersResponse> SystemSubscriberGetCallProcessingParametersRequest(this OcipClient client, SystemSubscriberGetCallProcessingParametersRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSubscriberGetCallProcessingParametersResponse;
        }

        /// <summary>
        /// Get the system call processing configuration for all subscribers
        /// The response is either a SystemSubscriberGetCallProcessingParametersResponse or an ErrorResponse.
        /// Replaced By: SystemSubscriberGetCallProcessingParametersRequest14sp3
        /// </summary>
        public static async Task<SystemSubscriberGetCallProcessingParametersResponse> SystemSubscriberGetCallProcessingParametersRequestAsync(this OcipClient client, SystemSubscriberGetCallProcessingParametersRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSubscriberGetCallProcessingParametersResponse;
        }
        /// <summary>
        /// Get the system call processing configuration for all subscribers
        /// The response is either a SystemSubscriberGetCallProcessingParametersResponse14sp3 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSubscriberGetCallProcessingParametersRequest14sp3Async instead.")]
        public static async Task<SystemSubscriberGetCallProcessingParametersResponse14sp3> SystemSubscriberGetCallProcessingParametersRequest14sp3(this OcipClient client, SystemSubscriberGetCallProcessingParametersRequest14sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSubscriberGetCallProcessingParametersResponse14sp3;
        }

        /// <summary>
        /// Get the system call processing configuration for all subscribers
        /// The response is either a SystemSubscriberGetCallProcessingParametersResponse14sp3 or an ErrorResponse.
        /// </summary>
        public static async Task<SystemSubscriberGetCallProcessingParametersResponse14sp3> SystemSubscriberGetCallProcessingParametersRequest14sp3Async(this OcipClient client, SystemSubscriberGetCallProcessingParametersRequest14sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSubscriberGetCallProcessingParametersResponse14sp3;
        }
        /// <summary>
        /// Get the system call processing configuration for all subscribers
        /// The response is either a SystemSubscriberGetCallProcessingParametersResponse14sp7 or an ErrorResponse.
        /// Replaced By : SystemSubscriberGetCallProcessingParametersRequest15sp2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSubscriberGetCallProcessingParametersRequest14sp7Async instead.")]
        public static async Task<SystemSubscriberGetCallProcessingParametersResponse14sp7> SystemSubscriberGetCallProcessingParametersRequest14sp7(this OcipClient client, SystemSubscriberGetCallProcessingParametersRequest14sp7 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSubscriberGetCallProcessingParametersResponse14sp7;
        }

        /// <summary>
        /// Get the system call processing configuration for all subscribers
        /// The response is either a SystemSubscriberGetCallProcessingParametersResponse14sp7 or an ErrorResponse.
        /// Replaced By : SystemSubscriberGetCallProcessingParametersRequest15sp2
        /// </summary>
        public static async Task<SystemSubscriberGetCallProcessingParametersResponse14sp7> SystemSubscriberGetCallProcessingParametersRequest14sp7Async(this OcipClient client, SystemSubscriberGetCallProcessingParametersRequest14sp7 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSubscriberGetCallProcessingParametersResponse14sp7;
        }
        /// <summary>
        /// Get the system call processing configuration for all subscribers
        /// The response is either a SystemSubscriberGetCallProcessingParametersResponse15 or an ErrorResponse.
        /// Replaced By: SystemSubscriberGetCallProcessingParametersRequest15sp2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSubscriberGetCallProcessingParametersRequest15Async instead.")]
        public static async Task<SystemSubscriberGetCallProcessingParametersResponse15> SystemSubscriberGetCallProcessingParametersRequest15(this OcipClient client, SystemSubscriberGetCallProcessingParametersRequest15 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSubscriberGetCallProcessingParametersResponse15;
        }

        /// <summary>
        /// Get the system call processing configuration for all subscribers
        /// The response is either a SystemSubscriberGetCallProcessingParametersResponse15 or an ErrorResponse.
        /// Replaced By: SystemSubscriberGetCallProcessingParametersRequest15sp2
        /// </summary>
        public static async Task<SystemSubscriberGetCallProcessingParametersResponse15> SystemSubscriberGetCallProcessingParametersRequest15Async(this OcipClient client, SystemSubscriberGetCallProcessingParametersRequest15 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSubscriberGetCallProcessingParametersResponse15;
        }
        /// <summary>
        /// Get the system call processing configuration for all subscribers
        /// The response is either a SystemSubscriberGetCallProcessingParametersResponse15sp2 or an ErrorResponse.
        /// Replaced by: SystemSubscriberGetCallProcessingParametersRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSubscriberGetCallProcessingParametersRequest15sp2Async instead.")]
        public static async Task<SystemSubscriberGetCallProcessingParametersResponse15sp2> SystemSubscriberGetCallProcessingParametersRequest15sp2(this OcipClient client, SystemSubscriberGetCallProcessingParametersRequest15sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSubscriberGetCallProcessingParametersResponse15sp2;
        }

        /// <summary>
        /// Get the system call processing configuration for all subscribers
        /// The response is either a SystemSubscriberGetCallProcessingParametersResponse15sp2 or an ErrorResponse.
        /// Replaced by: SystemSubscriberGetCallProcessingParametersRequest17
        /// </summary>
        public static async Task<SystemSubscriberGetCallProcessingParametersResponse15sp2> SystemSubscriberGetCallProcessingParametersRequest15sp2Async(this OcipClient client, SystemSubscriberGetCallProcessingParametersRequest15sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSubscriberGetCallProcessingParametersResponse15sp2;
        }
        /// <summary>
        /// Get the system call processing configuration for all subscribers
        /// The response is either a SystemSubscriberGetCallProcessingParametersResponse17
        /// or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSubscriberGetCallProcessingParametersRequest17Async instead.")]
        public static async Task<SystemSubscriberGetCallProcessingParametersResponse17> SystemSubscriberGetCallProcessingParametersRequest17(this OcipClient client, SystemSubscriberGetCallProcessingParametersRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSubscriberGetCallProcessingParametersResponse17;
        }

        /// <summary>
        /// Get the system call processing configuration for all subscribers
        /// The response is either a SystemSubscriberGetCallProcessingParametersResponse17
        /// or an ErrorResponse.
        /// </summary>
        public static async Task<SystemSubscriberGetCallProcessingParametersResponse17> SystemSubscriberGetCallProcessingParametersRequest17Async(this OcipClient client, SystemSubscriberGetCallProcessingParametersRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSubscriberGetCallProcessingParametersResponse17;
        }
        /// <summary>
        /// Get the system call processing configuration for all subscribers
        /// The response is either a SystemSubscriberGetCallProcessingParametersResponse17sp3
        /// or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSubscriberGetCallProcessingParametersRequest17sp3Async instead.")]
        public static async Task<SystemSubscriberGetCallProcessingParametersResponse17sp3> SystemSubscriberGetCallProcessingParametersRequest17sp3(this OcipClient client, SystemSubscriberGetCallProcessingParametersRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSubscriberGetCallProcessingParametersResponse17sp3;
        }

        /// <summary>
        /// Get the system call processing configuration for all subscribers
        /// The response is either a SystemSubscriberGetCallProcessingParametersResponse17sp3
        /// or an ErrorResponse.
        /// </summary>
        public static async Task<SystemSubscriberGetCallProcessingParametersResponse17sp3> SystemSubscriberGetCallProcessingParametersRequest17sp3Async(this OcipClient client, SystemSubscriberGetCallProcessingParametersRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSubscriberGetCallProcessingParametersResponse17sp3;
        }
        /// <summary>
        /// Get the system call processing configuration for all subscribers
        /// The response is either a SystemSubscriberGetCallProcessingParametersResponse17sp4
        /// or an ErrorResponse.
        /// 
        /// Replaced by SystemSubscriberGetCallProcessingParametersRequest18sp1.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSubscriberGetCallProcessingParametersRequest17sp4Async instead.")]
        public static async Task<SystemSubscriberGetCallProcessingParametersResponse17sp4> SystemSubscriberGetCallProcessingParametersRequest17sp4(this OcipClient client, SystemSubscriberGetCallProcessingParametersRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSubscriberGetCallProcessingParametersResponse17sp4;
        }

        /// <summary>
        /// Get the system call processing configuration for all subscribers
        /// The response is either a SystemSubscriberGetCallProcessingParametersResponse17sp4
        /// or an ErrorResponse.
        /// 
        /// Replaced by SystemSubscriberGetCallProcessingParametersRequest18sp1.
        /// </summary>
        public static async Task<SystemSubscriberGetCallProcessingParametersResponse17sp4> SystemSubscriberGetCallProcessingParametersRequest17sp4Async(this OcipClient client, SystemSubscriberGetCallProcessingParametersRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSubscriberGetCallProcessingParametersResponse17sp4;
        }
        /// <summary>
        /// Get the system provisioning configuration for all subscribers
        /// The response is either a SystemSubscriberGetProvisioningParametersResponse
        /// or an ErrorResponse.
        /// 
        /// Replaced by: SystemSubscriberGetProvisioningParametersRequest24
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSubscriberGetProvisioningParametersRequestAsync instead.")]
        public static async Task<SystemSubscriberGetProvisioningParametersResponse> SystemSubscriberGetProvisioningParametersRequest(this OcipClient client, SystemSubscriberGetProvisioningParametersRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSubscriberGetProvisioningParametersResponse;
        }

        /// <summary>
        /// Get the system provisioning configuration for all subscribers
        /// The response is either a SystemSubscriberGetProvisioningParametersResponse
        /// or an ErrorResponse.
        /// 
        /// Replaced by: SystemSubscriberGetProvisioningParametersRequest24
        /// </summary>
        public static async Task<SystemSubscriberGetProvisioningParametersResponse> SystemSubscriberGetProvisioningParametersRequestAsync(this OcipClient client, SystemSubscriberGetProvisioningParametersRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSubscriberGetProvisioningParametersResponse;
        }
        /// <summary>
        /// Modify the system call processing configuration for all subscribers.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// The following elements are only used in AS data mode and ignored in the XS data mode:
        /// userCallingLineIdSelection
        /// isExtendedCallingLineIdActive
        /// isRingTimeOutActive
        /// ringTimeoutSeconds
        /// allowEmergencyRemoteOfficeOriginations
        /// Replaced By: SystemSubscriberModifyCallProcessingParametersRequest14sp7
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSubscriberModifyCallProcessingParametersRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemSubscriberModifyCallProcessingParametersRequest(this OcipClient client, SystemSubscriberModifyCallProcessingParametersRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the system call processing configuration for all subscribers.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// The following elements are only used in AS data mode and ignored in the XS data mode:
        /// userCallingLineIdSelection
        /// isExtendedCallingLineIdActive
        /// isRingTimeOutActive
        /// ringTimeoutSeconds
        /// allowEmergencyRemoteOfficeOriginations
        /// Replaced By: SystemSubscriberModifyCallProcessingParametersRequest14sp7
        /// </summary>
        public static async Task<SuccessResponse> SystemSubscriberModifyCallProcessingParametersRequestAsync(this OcipClient client, SystemSubscriberModifyCallProcessingParametersRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a system voice portal instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in IMS mode:
        /// publicUserIdentity, ignored in standalone mode if provided.
        /// 
        /// Replaced by: SystemSystemVoicePortalAddRequest21sp1.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSystemVoicePortalAddRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemSystemVoicePortalAddRequest(this OcipClient client, SystemSystemVoicePortalAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a system voice portal instance.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in IMS mode:
        /// publicUserIdentity, ignored in standalone mode if provided.
        /// 
        /// Replaced by: SystemSystemVoicePortalAddRequest21sp1.
        /// </summary>
        public static async Task<SuccessResponse> SystemSystemVoicePortalAddRequestAsync(this OcipClient client, SystemSystemVoicePortalAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get a system voice portal instance.
        /// The response is either SystemSystemVoicePortalGetResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemSystemVoicePortalGetRequest21sp1.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSystemVoicePortalGetRequestAsync instead.")]
        public static async Task<SystemSystemVoicePortalGetResponse> SystemSystemVoicePortalGetRequest(this OcipClient client, SystemSystemVoicePortalGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSystemVoicePortalGetResponse;
        }

        /// <summary>
        /// Request to get a system voice portal instance.
        /// The response is either SystemSystemVoicePortalGetResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemSystemVoicePortalGetRequest21sp1.
        /// </summary>
        public static async Task<SystemSystemVoicePortalGetResponse> SystemSystemVoicePortalGetRequestAsync(this OcipClient client, SystemSystemVoicePortalGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSystemVoicePortalGetResponse;
        }
        /// <summary>
        /// Request to get a system voice portal instance.
        /// The response is either SystemSystemVoicePortalGetResponse21sp1 or ErrorResponse.
        /// 
        /// Replaced by: SystemSystemVoicePortalGetRequest23.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemSystemVoicePortalGetRequest21sp1Async instead.")]
        public static async Task<SystemSystemVoicePortalGetResponse21sp1> SystemSystemVoicePortalGetRequest21sp1(this OcipClient client, SystemSystemVoicePortalGetRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemSystemVoicePortalGetResponse21sp1;
        }

        /// <summary>
        /// Request to get a system voice portal instance.
        /// The response is either SystemSystemVoicePortalGetResponse21sp1 or ErrorResponse.
        /// 
        /// Replaced by: SystemSystemVoicePortalGetRequest23.
        /// </summary>
        public static async Task<SystemSystemVoicePortalGetResponse21sp1> SystemSystemVoicePortalGetRequest21sp1Async(this OcipClient client, SystemSystemVoicePortalGetRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemSystemVoicePortalGetResponse21sp1;
        }
        /// <summary>
        /// Get the third-party emergency call service settings for the system.
        /// The response is either a SystemThirdPartyEmergencyCallingGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemThirdPartyEmergencyCallingGetRequest24
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemThirdPartyEmergencyCallingGetRequestAsync instead.")]
        public static async Task<SystemThirdPartyEmergencyCallingGetResponse> SystemThirdPartyEmergencyCallingGetRequest(this OcipClient client, SystemThirdPartyEmergencyCallingGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemThirdPartyEmergencyCallingGetResponse;
        }

        /// <summary>
        /// Get the third-party emergency call service settings for the system.
        /// The response is either a SystemThirdPartyEmergencyCallingGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: SystemThirdPartyEmergencyCallingGetRequest24
        /// </summary>
        public static async Task<SystemThirdPartyEmergencyCallingGetResponse> SystemThirdPartyEmergencyCallingGetRequestAsync(this OcipClient client, SystemThirdPartyEmergencyCallingGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemThirdPartyEmergencyCallingGetResponse;
        }
        /// <summary>
        /// Get the system Third-Party IMP service attributes.
        /// The response is either SystemThirdPartyIMPGetResponse or ErrorResponse.
        /// 
        /// Replaced by SystemThirdPartyIMPGetRequest19.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemThirdPartyIMPGetRequestAsync instead.")]
        public static async Task<SystemThirdPartyIMPGetResponse> SystemThirdPartyIMPGetRequest(this OcipClient client, SystemThirdPartyIMPGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemThirdPartyIMPGetResponse;
        }

        /// <summary>
        /// Get the system Third-Party IMP service attributes.
        /// The response is either SystemThirdPartyIMPGetResponse or ErrorResponse.
        /// 
        /// Replaced by SystemThirdPartyIMPGetRequest19.
        /// </summary>
        public static async Task<SystemThirdPartyIMPGetResponse> SystemThirdPartyIMPGetRequestAsync(this OcipClient client, SystemThirdPartyIMPGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemThirdPartyIMPGetResponse;
        }
        /// <summary>
        /// Request the system level data associated with Third-party Voice Mail Support.
        /// The response is either a SystemThirdPartyVoiceMailSupportGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemThirdPartyVoiceMailSupportGetRequest17sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemThirdPartyVoiceMailSupportGetRequestAsync instead.")]
        public static async Task<SystemThirdPartyVoiceMailSupportGetResponse> SystemThirdPartyVoiceMailSupportGetRequest(this OcipClient client, SystemThirdPartyVoiceMailSupportGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemThirdPartyVoiceMailSupportGetResponse;
        }

        /// <summary>
        /// Request the system level data associated with Third-party Voice Mail Support.
        /// The response is either a SystemThirdPartyVoiceMailSupportGetResponse or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemThirdPartyVoiceMailSupportGetRequest17sp4
        /// </summary>
        public static async Task<SystemThirdPartyVoiceMailSupportGetResponse> SystemThirdPartyVoiceMailSupportGetRequestAsync(this OcipClient client, SystemThirdPartyVoiceMailSupportGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemThirdPartyVoiceMailSupportGetResponse;
        }
        /// <summary>
        /// Add a system time schedule.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemTimeScheduleAddRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemTimeScheduleAddRequest(this OcipClient client, SystemTimeScheduleAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a system time schedule.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemTimeScheduleAddRequestAsync(this OcipClient client, SystemTimeScheduleAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Delete a system time schedule.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemTimeScheduleDeleteRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemTimeScheduleDeleteRequest(this OcipClient client, SystemTimeScheduleDeleteRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Delete a system time schedule.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemTimeScheduleDeleteRequestAsync(this OcipClient client, SystemTimeScheduleDeleteRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request a list of all system time schedules.
        /// The response is either a SystemTimeScheduleGetListResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemTimeScheduleGetListRequestAsync instead.")]
        public static async Task<SystemTimeScheduleGetListResponse> SystemTimeScheduleGetListRequest(this OcipClient client, SystemTimeScheduleGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemTimeScheduleGetListResponse;
        }

        /// <summary>
        /// Request a list of all system time schedules.
        /// The response is either a SystemTimeScheduleGetListResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SystemTimeScheduleGetListResponse> SystemTimeScheduleGetListRequestAsync(this OcipClient client, SystemTimeScheduleGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemTimeScheduleGetListResponse;
        }
        /// <summary>
        /// Request to get a system time schedule.
        /// The response is either a SystemTimeScheduleGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemTimeScheduleGetRequestAsync instead.")]
        public static async Task<SystemTimeScheduleGetResponse> SystemTimeScheduleGetRequest(this OcipClient client, SystemTimeScheduleGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemTimeScheduleGetResponse;
        }

        /// <summary>
        /// Request to get a system time schedule.
        /// The response is either a SystemTimeScheduleGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SystemTimeScheduleGetResponse> SystemTimeScheduleGetRequestAsync(this OcipClient client, SystemTimeScheduleGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemTimeScheduleGetResponse;
        }
        /// <summary>
        /// Modify a specified system time schedule.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemTimeScheduleModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemTimeScheduleModifyRequest(this OcipClient client, SystemTimeScheduleModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a specified system time schedule.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemTimeScheduleModifyRequestAsync(this OcipClient client, SystemTimeScheduleModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Requests a table of all the existing Call Blocking Service Mappings in the system.
        /// The response is either a SystemTreatmentMappingCallBlockingServiceGetListResponse19sp1 or an ErrorResponse.
        /// 
        /// Replaced by: SystemTreatmentMappingCallBlockingServiceGetListRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemTreatmentMappingCallBlockingServiceGetListRequest19sp1Async instead.")]
        public static async Task<SystemTreatmentMappingCallBlockingServiceGetListResponse19sp1> SystemTreatmentMappingCallBlockingServiceGetListRequest19sp1(this OcipClient client, SystemTreatmentMappingCallBlockingServiceGetListRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemTreatmentMappingCallBlockingServiceGetListResponse19sp1;
        }

        /// <summary>
        /// Requests a table of all the existing Call Blocking Service Mappings in the system.
        /// The response is either a SystemTreatmentMappingCallBlockingServiceGetListResponse19sp1 or an ErrorResponse.
        /// 
        /// Replaced by: SystemTreatmentMappingCallBlockingServiceGetListRequest22
        /// </summary>
        public static async Task<SystemTreatmentMappingCallBlockingServiceGetListResponse19sp1> SystemTreatmentMappingCallBlockingServiceGetListRequest19sp1Async(this OcipClient client, SystemTreatmentMappingCallBlockingServiceGetListRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemTreatmentMappingCallBlockingServiceGetListResponse19sp1;
        }
        /// <summary>
        /// Request the system level data associated with the Trunk Group service.
        /// The response is either SystemTrunkGroupGetResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemTrunkGroupGetRequest19sp1.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemTrunkGroupGetRequestAsync instead.")]
        public static async Task<SystemTrunkGroupGetResponse> SystemTrunkGroupGetRequest(this OcipClient client, SystemTrunkGroupGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemTrunkGroupGetResponse;
        }

        /// <summary>
        /// Request the system level data associated with the Trunk Group service.
        /// The response is either SystemTrunkGroupGetResponse or ErrorResponse.
        /// 
        /// Replaced by: SystemTrunkGroupGetRequest19sp1.
        /// </summary>
        public static async Task<SystemTrunkGroupGetResponse> SystemTrunkGroupGetRequestAsync(this OcipClient client, SystemTrunkGroupGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemTrunkGroupGetResponse;
        }
        /// <summary>
        /// Request the system level data associated with the Trunk Group service.
        /// The response is either SystemTrunkGroupGetResponse19sp1 or ErrorResponse.
        /// Replaced by: SystemTrunkGroupGetRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemTrunkGroupGetRequest19sp1Async instead.")]
        public static async Task<SystemTrunkGroupGetResponse19sp1> SystemTrunkGroupGetRequest19sp1(this OcipClient client, SystemTrunkGroupGetRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemTrunkGroupGetResponse19sp1;
        }

        /// <summary>
        /// Request the system level data associated with the Trunk Group service.
        /// The response is either SystemTrunkGroupGetResponse19sp1 or ErrorResponse.
        /// Replaced by: SystemTrunkGroupGetRequest21
        /// </summary>
        public static async Task<SystemTrunkGroupGetResponse19sp1> SystemTrunkGroupGetRequest19sp1Async(this OcipClient client, SystemTrunkGroupGetRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemTrunkGroupGetResponse19sp1;
        }
        /// <summary>
        /// Request the system level data associated with the Trunk Group service.
        /// The response is either SystemTrunkGroupGetResponse21 or ErrorResponse.
        /// 
        /// Replaced by: SystemTrunkGroupGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemTrunkGroupGetRequest21Async instead.")]
        public static async Task<SystemTrunkGroupGetResponse21> SystemTrunkGroupGetRequest21(this OcipClient client, SystemTrunkGroupGetRequest21 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemTrunkGroupGetResponse21;
        }

        /// <summary>
        /// Request the system level data associated with the Trunk Group service.
        /// The response is either SystemTrunkGroupGetResponse21 or ErrorResponse.
        /// 
        /// Replaced by: SystemTrunkGroupGetRequest22
        /// </summary>
        public static async Task<SystemTrunkGroupGetResponse21> SystemTrunkGroupGetRequest21Async(this OcipClient client, SystemTrunkGroupGetRequest21 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemTrunkGroupGetResponse21;
        }
        /// <summary>
        /// Request the system level data associated with the Trunk Group service.
        /// The response is either SystemTrunkGroupGetResponse22 or ErrorResponse.
        /// 
        /// Replaced by: SystemTrunkGroupGetRequest23
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemTrunkGroupGetRequest22Async instead.")]
        public static async Task<SystemTrunkGroupGetResponse22> SystemTrunkGroupGetRequest22(this OcipClient client, SystemTrunkGroupGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemTrunkGroupGetResponse22;
        }

        /// <summary>
        /// Request the system level data associated with the Trunk Group service.
        /// The response is either SystemTrunkGroupGetResponse22 or ErrorResponse.
        /// 
        /// Replaced by: SystemTrunkGroupGetRequest23
        /// </summary>
        public static async Task<SystemTrunkGroupGetResponse22> SystemTrunkGroupGetRequest22Async(this OcipClient client, SystemTrunkGroupGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemTrunkGroupGetResponse22;
        }
        /// <summary>
        /// Request the system level data associated with the Trunk Group service.
        /// The response is either SystemTrunkGroupGetResponse23 or ErrorResponse.
        /// 
        /// Replaced by: SystemTrunkGroupGetRequest24
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemTrunkGroupGetRequest23Async instead.")]
        public static async Task<SystemTrunkGroupGetResponse23> SystemTrunkGroupGetRequest23(this OcipClient client, SystemTrunkGroupGetRequest23 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemTrunkGroupGetResponse23;
        }

        /// <summary>
        /// Request the system level data associated with the Trunk Group service.
        /// The response is either SystemTrunkGroupGetResponse23 or ErrorResponse.
        /// 
        /// Replaced by: SystemTrunkGroupGetRequest24
        /// </summary>
        public static async Task<SystemTrunkGroupGetResponse23> SystemTrunkGroupGetRequest23Async(this OcipClient client, SystemTrunkGroupGetRequest23 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemTrunkGroupGetResponse23;
        }
        /// <summary>
        /// Get the list of user creation tasks in the system.
        /// The response is either SystemTrunkGroupUserCreationTaskGetListResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemTrunkGroupUserCreationTaskGetListRequestAsync instead.")]
        public static async Task<SystemTrunkGroupUserCreationTaskGetListResponse> SystemTrunkGroupUserCreationTaskGetListRequest(this OcipClient client, SystemTrunkGroupUserCreationTaskGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemTrunkGroupUserCreationTaskGetListResponse;
        }

        /// <summary>
        /// Get the list of user creation tasks in the system.
        /// The response is either SystemTrunkGroupUserCreationTaskGetListResponse or ErrorResponse.
        /// </summary>
        public static async Task<SystemTrunkGroupUserCreationTaskGetListResponse> SystemTrunkGroupUserCreationTaskGetListRequestAsync(this OcipClient client, SystemTrunkGroupUserCreationTaskGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemTrunkGroupUserCreationTaskGetListResponse;
        }
        /// <summary>
        /// Requests the system voice portal passcode rules setting.
        /// The response is either SystemVoiceMessagingGroupGetPasscodeRulesResponse14 or ErrorResponse.
        /// Replaced By: SystemPortalPasscodeRulesGetRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemVoiceMessagingGroupGetPasscodeRulesRequest14Async instead.")]
        public static async Task<SystemVoiceMessagingGroupGetPasscodeRulesResponse14> SystemVoiceMessagingGroupGetPasscodeRulesRequest14(this OcipClient client, SystemVoiceMessagingGroupGetPasscodeRulesRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemVoiceMessagingGroupGetPasscodeRulesResponse14;
        }

        /// <summary>
        /// Requests the system voice portal passcode rules setting.
        /// The response is either SystemVoiceMessagingGroupGetPasscodeRulesResponse14 or ErrorResponse.
        /// Replaced By: SystemPortalPasscodeRulesGetRequest
        /// </summary>
        public static async Task<SystemVoiceMessagingGroupGetPasscodeRulesResponse14> SystemVoiceMessagingGroupGetPasscodeRulesRequest14Async(this OcipClient client, SystemVoiceMessagingGroupGetPasscodeRulesRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemVoiceMessagingGroupGetPasscodeRulesResponse14;
        }
        /// <summary>
        /// Request the system level data associated with Voice Messaging.
        /// The response is either a SystemVoiceMessagingGroupGetResponse14 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemVoiceMessagingGroupGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemVoiceMessagingGroupGetRequest14Async instead.")]
        public static async Task<SystemVoiceMessagingGroupGetResponse14> SystemVoiceMessagingGroupGetRequest14(this OcipClient client, SystemVoiceMessagingGroupGetRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemVoiceMessagingGroupGetResponse14;
        }

        /// <summary>
        /// Request the system level data associated with Voice Messaging.
        /// The response is either a SystemVoiceMessagingGroupGetResponse14 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemVoiceMessagingGroupGetRequest16
        /// </summary>
        public static async Task<SystemVoiceMessagingGroupGetResponse14> SystemVoiceMessagingGroupGetRequest14Async(this OcipClient client, SystemVoiceMessagingGroupGetRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemVoiceMessagingGroupGetResponse14;
        }
        /// <summary>
        /// Request the system level data associated with Voice Messaging.
        /// The response is either a SystemVoiceMessagingGroupGetResponse16 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemVoiceMessagingGroupGetRequest16sp2
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemVoiceMessagingGroupGetRequest16Async instead.")]
        public static async Task<SystemVoiceMessagingGroupGetResponse16> SystemVoiceMessagingGroupGetRequest16(this OcipClient client, SystemVoiceMessagingGroupGetRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemVoiceMessagingGroupGetResponse16;
        }

        /// <summary>
        /// Request the system level data associated with Voice Messaging.
        /// The response is either a SystemVoiceMessagingGroupGetResponse16 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: SystemVoiceMessagingGroupGetRequest16sp2
        /// </summary>
        public static async Task<SystemVoiceMessagingGroupGetResponse16> SystemVoiceMessagingGroupGetRequest16Async(this OcipClient client, SystemVoiceMessagingGroupGetRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemVoiceMessagingGroupGetResponse16;
        }
        /// <summary>
        /// Request the system level data associated with Voice Messaging.
        /// The response is either a SystemVoiceMessagingGroupGetResponse20 or an ErrorResponse.
        /// Replaced by: SystemVoiceMessagingGroupGetRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemVoiceMessagingGroupGetRequest20Async instead.")]
        public static async Task<SystemVoiceMessagingGroupGetResponse20> SystemVoiceMessagingGroupGetRequest20(this OcipClient client, SystemVoiceMessagingGroupGetRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemVoiceMessagingGroupGetResponse20;
        }

        /// <summary>
        /// Request the system level data associated with Voice Messaging.
        /// The response is either a SystemVoiceMessagingGroupGetResponse20 or an ErrorResponse.
        /// Replaced by: SystemVoiceMessagingGroupGetRequest21
        /// </summary>
        public static async Task<SystemVoiceMessagingGroupGetResponse20> SystemVoiceMessagingGroupGetRequest20Async(this OcipClient client, SystemVoiceMessagingGroupGetRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemVoiceMessagingGroupGetResponse20;
        }
        /// <summary>
        /// Requests the system voice portal Menus setting.
        /// The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse14 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemVoiceMessagingGroupGetVoicePortalMenusRequest14Async instead.")]
        public static async Task<SystemVoiceMessagingGroupGetVoicePortalMenusResponse14> SystemVoiceMessagingGroupGetVoicePortalMenusRequest14(this OcipClient client, SystemVoiceMessagingGroupGetVoicePortalMenusRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemVoiceMessagingGroupGetVoicePortalMenusResponse14;
        }

        /// <summary>
        /// Requests the system voice portal Menus setting.
        /// The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse14 or ErrorResponse.
        /// </summary>
        public static async Task<SystemVoiceMessagingGroupGetVoicePortalMenusResponse14> SystemVoiceMessagingGroupGetVoicePortalMenusRequest14Async(this OcipClient client, SystemVoiceMessagingGroupGetVoicePortalMenusRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemVoiceMessagingGroupGetVoicePortalMenusResponse14;
        }
        /// <summary>
        /// Requests the system voice portal Menus setting.
        /// The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse18 or ErrorResponse.
        /// 
        /// Replaced by SystemVoiceMessagingGroupGetVoicePortalMenusRequest19
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemVoiceMessagingGroupGetVoicePortalMenusRequest18Async instead.")]
        public static async Task<SystemVoiceMessagingGroupGetVoicePortalMenusResponse18> SystemVoiceMessagingGroupGetVoicePortalMenusRequest18(this OcipClient client, SystemVoiceMessagingGroupGetVoicePortalMenusRequest18 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemVoiceMessagingGroupGetVoicePortalMenusResponse18;
        }

        /// <summary>
        /// Requests the system voice portal Menus setting.
        /// The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse18 or ErrorResponse.
        /// 
        /// Replaced by SystemVoiceMessagingGroupGetVoicePortalMenusRequest19
        /// </summary>
        public static async Task<SystemVoiceMessagingGroupGetVoicePortalMenusResponse18> SystemVoiceMessagingGroupGetVoicePortalMenusRequest18Async(this OcipClient client, SystemVoiceMessagingGroupGetVoicePortalMenusRequest18 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemVoiceMessagingGroupGetVoicePortalMenusResponse18;
        }
        /// <summary>
        /// Requests the system voice portal Menus setting.
        /// The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse18sp1 or ErrorResponse.
        /// 
        /// Replaced by SystemVoiceMessagingGroupGetVoicePortalMenusRequest19sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemVoiceMessagingGroupGetVoicePortalMenusRequest18sp1Async instead.")]
        public static async Task<SystemVoiceMessagingGroupGetVoicePortalMenusResponse18sp1> SystemVoiceMessagingGroupGetVoicePortalMenusRequest18sp1(this OcipClient client, SystemVoiceMessagingGroupGetVoicePortalMenusRequest18sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemVoiceMessagingGroupGetVoicePortalMenusResponse18sp1;
        }

        /// <summary>
        /// Requests the system voice portal Menus setting.
        /// The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse18sp1 or ErrorResponse.
        /// 
        /// Replaced by SystemVoiceMessagingGroupGetVoicePortalMenusRequest19sp1
        /// </summary>
        public static async Task<SystemVoiceMessagingGroupGetVoicePortalMenusResponse18sp1> SystemVoiceMessagingGroupGetVoicePortalMenusRequest18sp1Async(this OcipClient client, SystemVoiceMessagingGroupGetVoicePortalMenusRequest18sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemVoiceMessagingGroupGetVoicePortalMenusResponse18sp1;
        }
        /// <summary>
        /// Requests the system voice portal Menus setting.
        /// The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse19 or ErrorResponse.
        /// 
        /// Replaced by: SystemVoiceMessagingGroupGetVoicePortalMenusRequest19sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemVoiceMessagingGroupGetVoicePortalMenusRequest19Async instead.")]
        public static async Task<SystemVoiceMessagingGroupGetVoicePortalMenusResponse19> SystemVoiceMessagingGroupGetVoicePortalMenusRequest19(this OcipClient client, SystemVoiceMessagingGroupGetVoicePortalMenusRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemVoiceMessagingGroupGetVoicePortalMenusResponse19;
        }

        /// <summary>
        /// Requests the system voice portal Menus setting.
        /// The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse19 or ErrorResponse.
        /// 
        /// Replaced by: SystemVoiceMessagingGroupGetVoicePortalMenusRequest19sp1
        /// </summary>
        public static async Task<SystemVoiceMessagingGroupGetVoicePortalMenusResponse19> SystemVoiceMessagingGroupGetVoicePortalMenusRequest19Async(this OcipClient client, SystemVoiceMessagingGroupGetVoicePortalMenusRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemVoiceMessagingGroupGetVoicePortalMenusResponse19;
        }
        /// <summary>
        /// Requests the system voice portal Menus setting.
        /// The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse19sp1 or ErrorResponse.
        /// 
        /// Replaced by SystemVoiceMessagingGroupGetVoicePortalMenusRequest20
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemVoiceMessagingGroupGetVoicePortalMenusRequest19sp1Async instead.")]
        public static async Task<SystemVoiceMessagingGroupGetVoicePortalMenusResponse19sp1> SystemVoiceMessagingGroupGetVoicePortalMenusRequest19sp1(this OcipClient client, SystemVoiceMessagingGroupGetVoicePortalMenusRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemVoiceMessagingGroupGetVoicePortalMenusResponse19sp1;
        }

        /// <summary>
        /// Requests the system voice portal Menus setting.
        /// The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse19sp1 or ErrorResponse.
        /// 
        /// Replaced by SystemVoiceMessagingGroupGetVoicePortalMenusRequest20
        /// </summary>
        public static async Task<SystemVoiceMessagingGroupGetVoicePortalMenusResponse19sp1> SystemVoiceMessagingGroupGetVoicePortalMenusRequest19sp1Async(this OcipClient client, SystemVoiceMessagingGroupGetVoicePortalMenusRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemVoiceMessagingGroupGetVoicePortalMenusResponse19sp1;
        }
        /// <summary>
        /// Requests the system voice portal Menus setting.
        /// The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse20 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemVoiceMessagingGroupGetVoicePortalMenusRequest20Async instead.")]
        public static async Task<SystemVoiceMessagingGroupGetVoicePortalMenusResponse20> SystemVoiceMessagingGroupGetVoicePortalMenusRequest20(this OcipClient client, SystemVoiceMessagingGroupGetVoicePortalMenusRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemVoiceMessagingGroupGetVoicePortalMenusResponse20;
        }

        /// <summary>
        /// Requests the system voice portal Menus setting.
        /// The response is either SystemVoiceMessagingGroupGetVoicePortalMenusResponse20 or ErrorResponse.
        /// </summary>
        public static async Task<SystemVoiceMessagingGroupGetVoicePortalMenusResponse20> SystemVoiceMessagingGroupGetVoicePortalMenusRequest20Async(this OcipClient client, SystemVoiceMessagingGroupGetVoicePortalMenusRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemVoiceMessagingGroupGetVoicePortalMenusResponse20;
        }
        /// <summary>
        /// Request to modify the system voice portal passcode rules setting.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: SystemPortalPasscodeRulesModifyRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemVoiceMessagingGroupModifyPasscodeRulesRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemVoiceMessagingGroupModifyPasscodeRulesRequest(this OcipClient client, SystemVoiceMessagingGroupModifyPasscodeRulesRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify the system voice portal passcode rules setting.
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced By: SystemPortalPasscodeRulesModifyRequest
        /// </summary>
        public static async Task<SuccessResponse> SystemVoiceMessagingGroupModifyPasscodeRulesRequestAsync(this OcipClient client, SystemVoiceMessagingGroupModifyPasscodeRulesRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify the system level data associated with Voice Messaging.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemVoiceMessagingGroupModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemVoiceMessagingGroupModifyRequest(this OcipClient client, SystemVoiceMessagingGroupModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the system level data associated with Voice Messaging.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemVoiceMessagingGroupModifyRequestAsync(this OcipClient client, SystemVoiceMessagingGroupModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify the system voice portal menus setting.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemVoiceMessagingGroupModifyVoicePortalMenusRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemVoiceMessagingGroupModifyVoicePortalMenusRequest(this OcipClient client, SystemVoiceMessagingGroupModifyVoicePortalMenusRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify the system voice portal menus setting.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> SystemVoiceMessagingGroupModifyVoicePortalMenusRequestAsync(this OcipClient client, SystemVoiceMessagingGroupModifyVoicePortalMenusRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Adds a list of IP addresses to a zone
        /// The response is SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemZoneNetAddressAddListRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemZoneCallingRestrictionsNetAddressAddListRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemZoneCallingRestrictionsNetAddressAddListRequest(this OcipClient client, SystemZoneCallingRestrictionsNetAddressAddListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Adds a list of IP addresses to a zone
        /// The response is SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemZoneNetAddressAddListRequest
        /// </summary>
        public static async Task<SuccessResponse> SystemZoneCallingRestrictionsNetAddressAddListRequestAsync(this OcipClient client, SystemZoneCallingRestrictionsNetAddressAddListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Deletes a list of IP addresses from a zone
        /// The response is SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemZoneNetAddressDeleteListRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemZoneCallingRestrictionsNetAddressDeleteListRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemZoneCallingRestrictionsNetAddressDeleteListRequest(this OcipClient client, SystemZoneCallingRestrictionsNetAddressDeleteListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Deletes a list of IP addresses from a zone
        /// The response is SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemZoneNetAddressDeleteListRequest
        /// </summary>
        public static async Task<SuccessResponse> SystemZoneCallingRestrictionsNetAddressDeleteListRequestAsync(this OcipClient client, SystemZoneCallingRestrictionsNetAddressDeleteListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Gets a list of IP Addresses and/or Ranges assigned to a zone
        /// The response is SystemZoneCallingRestrictionsNetAddressGetListResponse.
        /// Replaced by: SystemZoneNetAddressGetListRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemZoneCallingRestrictionsNetAddressGetListRequestAsync instead.")]
        public static async Task<SystemZoneCallingRestrictionsNetAddressGetListResponse> SystemZoneCallingRestrictionsNetAddressGetListRequest(this OcipClient client, SystemZoneCallingRestrictionsNetAddressGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemZoneCallingRestrictionsNetAddressGetListResponse;
        }

        /// <summary>
        /// Gets a list of IP Addresses and/or Ranges assigned to a zone
        /// The response is SystemZoneCallingRestrictionsNetAddressGetListResponse.
        /// Replaced by: SystemZoneNetAddressGetListRequest
        /// </summary>
        public static async Task<SystemZoneCallingRestrictionsNetAddressGetListResponse> SystemZoneCallingRestrictionsNetAddressGetListRequestAsync(this OcipClient client, SystemZoneCallingRestrictionsNetAddressGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemZoneCallingRestrictionsNetAddressGetListResponse;
        }
        /// <summary>
        /// Add a zone.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemZoneAddRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemZoneCallingRestrictionsZoneAddRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemZoneCallingRestrictionsZoneAddRequest(this OcipClient client, SystemZoneCallingRestrictionsZoneAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a zone.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemZoneAddRequest
        /// </summary>
        public static async Task<SuccessResponse> SystemZoneCallingRestrictionsZoneAddRequestAsync(this OcipClient client, SystemZoneCallingRestrictionsZoneAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Deletes a zone from the system
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemZoneDeleteRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemZoneCallingRestrictionsZoneDeleteRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemZoneCallingRestrictionsZoneDeleteRequest(this OcipClient client, SystemZoneCallingRestrictionsZoneDeleteRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Deletes a zone from the system
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemZoneDeleteRequest
        /// </summary>
        public static async Task<SuccessResponse> SystemZoneCallingRestrictionsZoneDeleteRequestAsync(this OcipClient client, SystemZoneCallingRestrictionsZoneDeleteRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Gets a list of all zones defined in the system
        /// The response is SystemZoneCallingRestrictionsZoneGetListResponse or an ErrorResponse.
        /// Replaced by: SystemZoneGetListRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemZoneCallingRestrictionsZoneGetListRequestAsync instead.")]
        public static async Task<SystemZoneCallingRestrictionsZoneGetListResponse> SystemZoneCallingRestrictionsZoneGetListRequest(this OcipClient client, SystemZoneCallingRestrictionsZoneGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SystemZoneCallingRestrictionsZoneGetListResponse;
        }

        /// <summary>
        /// Gets a list of all zones defined in the system
        /// The response is SystemZoneCallingRestrictionsZoneGetListResponse or an ErrorResponse.
        /// Replaced by: SystemZoneGetListRequest
        /// </summary>
        public static async Task<SystemZoneCallingRestrictionsZoneGetListResponse> SystemZoneCallingRestrictionsZoneGetListRequestAsync(this OcipClient client, SystemZoneCallingRestrictionsZoneGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SystemZoneCallingRestrictionsZoneGetListResponse;
        }
        /// <summary>
        /// Modifies attributes of a zone in the system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemZonePhysicalLocationAddListRequest and
        /// SystemZonePhysicalLocationDeleteListRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use SystemZoneCallingRestrictionsZoneModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> SystemZoneCallingRestrictionsZoneModifyRequest(this OcipClient client, SystemZoneCallingRestrictionsZoneModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modifies attributes of a zone in the system.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: SystemZonePhysicalLocationAddListRequest and
        /// SystemZonePhysicalLocationDeleteListRequest
        /// </summary>
        public static async Task<SuccessResponse> SystemZoneCallingRestrictionsZoneModifyRequestAsync(this OcipClient client, SystemZoneCallingRestrictionsZoneModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a user.
        /// The domain is required in the userId.
        /// The password is not required if external authentication is enabled.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserAddRequest14Async instead.")]
        public static async Task<SuccessResponse> UserAddRequest14(this OcipClient client, UserAddRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a user.
        /// The domain is required in the userId.
        /// The password is not required if external authentication is enabled.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserAddRequest14Async(this OcipClient client, UserAddRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Replaced by: UserAddRequest17sp4
        /// 
        /// Request to add a user.
        /// The domain is required in the userId.
        /// The password is not required if external authentication is enabled.
        /// The officeZoneName and primaryZoneName elements are ignored and provided here for backwards compatibility only.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserAddRequest14sp9Async instead.")]
        public static async Task<SuccessResponse> UserAddRequest14sp9(this OcipClient client, UserAddRequest14sp9 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Replaced by: UserAddRequest17sp4
        /// 
        /// Request to add a user.
        /// The domain is required in the userId.
        /// The password is not required if external authentication is enabled.
        /// The officeZoneName and primaryZoneName elements are ignored and provided here for backwards compatibility only.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserAddRequest14sp9Async(this OcipClient client, UserAddRequest14sp9 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to add a user.
        /// The domain is required in the userId.
        /// The password is not required if external authentication is enabled.
        /// The following elements are only used in AS data mode and ignored in XS data mode:
        /// nameDialingName
        /// alternateUserId
        /// 
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by: UserAddRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use UserAddRequest17sp4Async instead.")]
        public static async Task<SuccessResponse> UserAddRequest17sp4(this OcipClient client, UserAddRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to add a user.
        /// The domain is required in the userId.
        /// The password is not required if external authentication is enabled.
        /// The following elements are only used in AS data mode and ignored in XS data mode:
        /// nameDialingName
        /// alternateUserId
        /// 
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by: UserAddRequest21
        /// </summary>
        public static async Task<SuccessResponse> UserAddRequest17sp4Async(this OcipClient client, UserAddRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request the user level data associated with Alternate Numbers.
        /// The response is either a UserAlternateNumbersGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserAlternateNumbersGetRequestAsync instead.")]
        public static async Task<UserAlternateNumbersGetResponse> UserAlternateNumbersGetRequest(this OcipClient client, UserAlternateNumbersGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserAlternateNumbersGetResponse;
        }

        /// <summary>
        /// Request the user level data associated with Alternate Numbers.
        /// The response is either a UserAlternateNumbersGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserAlternateNumbersGetResponse> UserAlternateNumbersGetRequestAsync(this OcipClient client, UserAlternateNumbersGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserAlternateNumbersGetResponse;
        }
        /// <summary>
        /// Request to get the announcement repository file information.
        /// The response is either UserAnnouncementFileGetResponse or ErrorResponse.
        /// 
        /// Replaced by: UserAnnouncementFileGetRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserAnnouncementFileGetRequestAsync instead.")]
        public static async Task<UserAnnouncementFileGetResponse> UserAnnouncementFileGetRequest(this OcipClient client, UserAnnouncementFileGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserAnnouncementFileGetResponse;
        }

        /// <summary>
        /// Request to get the announcement repository file information.
        /// The response is either UserAnnouncementFileGetResponse or ErrorResponse.
        /// 
        /// Replaced by: UserAnnouncementFileGetRequest22.
        /// </summary>
        public static async Task<UserAnnouncementFileGetResponse> UserAnnouncementFileGetRequestAsync(this OcipClient client, UserAnnouncementFileGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserAnnouncementFileGetResponse;
        }
        /// <summary>
        /// Request user's call logs.
        /// If the callLogType is not specified, all types of calls are returned.
        /// The response is either a UserBasicCallLogsGetListResponse or an ErrorResponse.
        /// Replaced By: UserBasicCallLogsGetListRequest14sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use UserBasicCallLogsGetListRequestAsync instead.")]
        public static async Task<UserBasicCallLogsGetListResponse> UserBasicCallLogsGetListRequest(this OcipClient client, UserBasicCallLogsGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserBasicCallLogsGetListResponse;
        }

        /// <summary>
        /// Request user's call logs.
        /// If the callLogType is not specified, all types of calls are returned.
        /// The response is either a UserBasicCallLogsGetListResponse or an ErrorResponse.
        /// Replaced By: UserBasicCallLogsGetListRequest14sp4
        /// </summary>
        public static async Task<UserBasicCallLogsGetListResponse> UserBasicCallLogsGetListRequestAsync(this OcipClient client, UserBasicCallLogsGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserBasicCallLogsGetListResponse;
        }
        /// <summary>
        /// Request user's attendant console settings.
        /// The response is either a UserAttendantConsoleGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserAttendantConsoleGetRequestAsync instead.")]
        public static async Task<UserAttendantConsoleGetResponse> UserAttendantConsoleGetRequest(this OcipClient client, UserAttendantConsoleGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserAttendantConsoleGetResponse;
        }

        /// <summary>
        /// Request user's attendant console settings.
        /// The response is either a UserAttendantConsoleGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserAttendantConsoleGetResponse> UserAttendantConsoleGetRequestAsync(this OcipClient client, UserAttendantConsoleGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserAttendantConsoleGetResponse;
        }
        /// <summary>
        /// Add a criteria to the user's BroadWorks Anywhere phone number.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserBroadWorksAnywhereAddSelectiveCriteriaRequestAsync instead.")]
        public static async Task<SuccessResponse> UserBroadWorksAnywhereAddSelectiveCriteriaRequest(this OcipClient client, UserBroadWorksAnywhereAddSelectiveCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a criteria to the user's BroadWorks Anywhere phone number.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserBroadWorksAnywhereAddSelectiveCriteriaRequestAsync(this OcipClient client, UserBroadWorksAnywhereAddSelectiveCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the list of all the BroadWorks Anywhere phone numbers for the user.
        /// The response is either a UserBroadWorksAnywhereGetResponse or an ErrorResponse.
        /// Replaced by: UserBroadWorksAnywhereGetRequest16sp2
        /// </summary>
        [Obsolete("This method is deprecated. Use UserBroadWorksAnywhereGetRequestAsync instead.")]
        public static async Task<UserBroadWorksAnywhereGetResponse> UserBroadWorksAnywhereGetRequest(this OcipClient client, UserBroadWorksAnywhereGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserBroadWorksAnywhereGetResponse;
        }

        /// <summary>
        /// Get the list of all the BroadWorks Anywhere phone numbers for the user.
        /// The response is either a UserBroadWorksAnywhereGetResponse or an ErrorResponse.
        /// Replaced by: UserBroadWorksAnywhereGetRequest16sp2
        /// </summary>
        public static async Task<UserBroadWorksAnywhereGetResponse> UserBroadWorksAnywhereGetRequestAsync(this OcipClient client, UserBroadWorksAnywhereGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserBroadWorksAnywhereGetResponse;
        }
        /// <summary>
        /// Get a criteria for the user's BroadWorks Anywhere phone number.
        /// The response is either a UserBroadWorksAnywhereGetSelectiveCriteriaResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserBroadWorksAnywhereGetSelectiveCriteriaRequestAsync instead.")]
        public static async Task<UserBroadWorksAnywhereGetSelectiveCriteriaResponse> UserBroadWorksAnywhereGetSelectiveCriteriaRequest(this OcipClient client, UserBroadWorksAnywhereGetSelectiveCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserBroadWorksAnywhereGetSelectiveCriteriaResponse;
        }

        /// <summary>
        /// Get a criteria for the user's BroadWorks Anywhere phone number.
        /// The response is either a UserBroadWorksAnywhereGetSelectiveCriteriaResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserBroadWorksAnywhereGetSelectiveCriteriaResponse> UserBroadWorksAnywhereGetSelectiveCriteriaRequestAsync(this OcipClient client, UserBroadWorksAnywhereGetSelectiveCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserBroadWorksAnywhereGetSelectiveCriteriaResponse;
        }
        /// <summary>
        /// Adding a new mobile identity using the Share Call Appearance.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// The request fails when the devicesToRing is set to Mobile and the mobileNumberAlerted list is empty.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserBroadworksMobilityAddMobileIdentityUsingSharedCallAppearanceRequestAsync instead.")]
        public static async Task<SuccessResponse> UserBroadworksMobilityAddMobileIdentityUsingSharedCallAppearanceRequest(this OcipClient client, UserBroadworksMobilityAddMobileIdentityUsingSharedCallAppearanceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Adding a new mobile identity using the Share Call Appearance.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// The request fails when the devicesToRing is set to Mobile and the mobileNumberAlerted list is empty.
        /// </summary>
        public static async Task<SuccessResponse> UserBroadworksMobilityAddMobileIdentityUsingSharedCallAppearanceRequestAsync(this OcipClient client, UserBroadworksMobilityAddMobileIdentityUsingSharedCallAppearanceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the user's BroadWorks Mobility service settings.
        /// The response is either a UserBroadWorksMobilityGetResponse21 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserBroadWorksMobilityGetRequest21Async instead.")]
        public static async Task<UserBroadWorksMobilityGetResponse21> UserBroadWorksMobilityGetRequest21(this OcipClient client, UserBroadWorksMobilityGetRequest21 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserBroadWorksMobilityGetResponse21;
        }

        /// <summary>
        /// Get the user's BroadWorks Mobility service settings.
        /// The response is either a UserBroadWorksMobilityGetResponse21 or an ErrorResponse.
        /// </summary>
        public static async Task<UserBroadWorksMobilityGetResponse21> UserBroadWorksMobilityGetRequest21Async(this OcipClient client, UserBroadWorksMobilityGetRequest21 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserBroadWorksMobilityGetResponse21;
        }
        /// <summary>
        /// Add a mobile identity to the user's list of mobile identities.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// The request fails when the devicesToRing is set to Mobile and the mobileNumberAlerted list is empty.
        /// 
        /// Replaced by: UserBroadWorksMobilityMobileIdentityAddRequest21sp1.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserBroadWorksMobilityMobileIdentityAddRequestAsync instead.")]
        public static async Task<SuccessResponse> UserBroadWorksMobilityMobileIdentityAddRequest(this OcipClient client, UserBroadWorksMobilityMobileIdentityAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a mobile identity to the user's list of mobile identities.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// The request fails when the devicesToRing is set to Mobile and the mobileNumberAlerted list is empty.
        /// 
        /// Replaced by: UserBroadWorksMobilityMobileIdentityAddRequest21sp1.
        /// </summary>
        public static async Task<SuccessResponse> UserBroadWorksMobilityMobileIdentityAddRequestAsync(this OcipClient client, UserBroadWorksMobilityMobileIdentityAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a mobile identity to the user's list of mobile identities.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// The request fails when the devicesToRing is set to Mobile and the mobileNumberAlerted list is empty.
        /// 
        /// Replaced by: UserBroadWorksMobilityMobileIdentityAddRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserBroadWorksMobilityMobileIdentityAddRequest21sp1Async instead.")]
        public static async Task<SuccessResponse> UserBroadWorksMobilityMobileIdentityAddRequest21sp1(this OcipClient client, UserBroadWorksMobilityMobileIdentityAddRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a mobile identity to the user's list of mobile identities.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// The request fails when the devicesToRing is set to Mobile and the mobileNumberAlerted list is empty.
        /// 
        /// Replaced by: UserBroadWorksMobilityMobileIdentityAddRequest22.
        /// </summary>
        public static async Task<SuccessResponse> UserBroadWorksMobilityMobileIdentityAddRequest21sp1Async(this OcipClient client, UserBroadWorksMobilityMobileIdentityAddRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a mobile identity to the user's list of mobile identities.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// The request fails when the devicesToRing is set to Mobile and the mobileNumberAlerted list is empty.
        /// Replaced By: UserBroadWorksMobilityMobileIdentityAddRequest22V2
        /// </summary>
        [Obsolete("This method is deprecated. Use UserBroadWorksMobilityMobileIdentityAddRequest22Async instead.")]
        public static async Task<SuccessResponse> UserBroadWorksMobilityMobileIdentityAddRequest22(this OcipClient client, UserBroadWorksMobilityMobileIdentityAddRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a mobile identity to the user's list of mobile identities.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// The request fails when the devicesToRing is set to Mobile and the mobileNumberAlerted list is empty.
        /// Replaced By: UserBroadWorksMobilityMobileIdentityAddRequest22V2
        /// </summary>
        public static async Task<SuccessResponse> UserBroadWorksMobilityMobileIdentityAddRequest22Async(this OcipClient client, UserBroadWorksMobilityMobileIdentityAddRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a mobile identity to the user's list of mobile identities.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// The request fails when the devicesToRing is set to Mobile and the mobileNumberAlerted list is empty.
        /// Replaced By: UserBroadWorksMobilityMobileIdentityConsolidatedAddRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use UserBroadWorksMobilityMobileIdentityConsolidatedAddRequestAsync instead.")]
        public static async Task<SuccessResponse> UserBroadWorksMobilityMobileIdentityConsolidatedAddRequest(this OcipClient client, UserBroadWorksMobilityMobileIdentityConsolidatedAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a mobile identity to the user's list of mobile identities.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// The request fails when the devicesToRing is set to Mobile and the mobileNumberAlerted list is empty.
        /// Replaced By: UserBroadWorksMobilityMobileIdentityConsolidatedAddRequest22
        /// </summary>
        public static async Task<SuccessResponse> UserBroadWorksMobilityMobileIdentityConsolidatedAddRequestAsync(this OcipClient client, UserBroadWorksMobilityMobileIdentityConsolidatedAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the settings for a user's specified mobile identity.
        /// The response is either a UserBroadWorksMobilityMobileIdentityGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: UserBroadWorksMobilityMobileIdentityGetRequest21sp1.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserBroadWorksMobilityMobileIdentityGetRequestAsync instead.")]
        public static async Task<UserBroadWorksMobilityMobileIdentityGetResponse> UserBroadWorksMobilityMobileIdentityGetRequest(this OcipClient client, UserBroadWorksMobilityMobileIdentityGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserBroadWorksMobilityMobileIdentityGetResponse;
        }

        /// <summary>
        /// Get the settings for a user's specified mobile identity.
        /// The response is either a UserBroadWorksMobilityMobileIdentityGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: UserBroadWorksMobilityMobileIdentityGetRequest21sp1.
        /// </summary>
        public static async Task<UserBroadWorksMobilityMobileIdentityGetResponse> UserBroadWorksMobilityMobileIdentityGetRequestAsync(this OcipClient client, UserBroadWorksMobilityMobileIdentityGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserBroadWorksMobilityMobileIdentityGetResponse;
        }
        /// <summary>
        /// Get the settings for a user's specified mobile identity.
        /// The response is either a UserBroadWorksMobilityMobileIdentityGetResponse21sp1 or an ErrorResponse.
        /// 
        /// Replaced by: UserBroadWorksMobilityMobileIdentityGetRequest21sp1V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserBroadWorksMobilityMobileIdentityGetRequest21sp1Async instead.")]
        public static async Task<UserBroadWorksMobilityMobileIdentityGetResponse21sp1> UserBroadWorksMobilityMobileIdentityGetRequest21sp1(this OcipClient client, UserBroadWorksMobilityMobileIdentityGetRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserBroadWorksMobilityMobileIdentityGetResponse21sp1;
        }

        /// <summary>
        /// Get the settings for a user's specified mobile identity.
        /// The response is either a UserBroadWorksMobilityMobileIdentityGetResponse21sp1 or an ErrorResponse.
        /// 
        /// Replaced by: UserBroadWorksMobilityMobileIdentityGetRequest21sp1V2.
        /// </summary>
        public static async Task<UserBroadWorksMobilityMobileIdentityGetResponse21sp1> UserBroadWorksMobilityMobileIdentityGetRequest21sp1Async(this OcipClient client, UserBroadWorksMobilityMobileIdentityGetRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserBroadWorksMobilityMobileIdentityGetResponse21sp1;
        }
        /// <summary>
        /// Get the settings for a user's specified mobile identity.
        /// The response is either a UserBroadWorksMobilityMobileIdentityGetResponse21sp1V2 or an ErrorResponse.
        /// 
        /// Replaced by: UserBroadWorksMobilityMobileIdentityGetRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserBroadWorksMobilityMobileIdentityGetRequest21sp1V2Async instead.")]
        public static async Task<UserBroadWorksMobilityMobileIdentityGetResponse21sp1V2> UserBroadWorksMobilityMobileIdentityGetRequest21sp1V2(this OcipClient client, UserBroadWorksMobilityMobileIdentityGetRequest21sp1V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserBroadWorksMobilityMobileIdentityGetResponse21sp1V2;
        }

        /// <summary>
        /// Get the settings for a user's specified mobile identity.
        /// The response is either a UserBroadWorksMobilityMobileIdentityGetResponse21sp1V2 or an ErrorResponse.
        /// 
        /// Replaced by: UserBroadWorksMobilityMobileIdentityGetRequest22.
        /// </summary>
        public static async Task<UserBroadWorksMobilityMobileIdentityGetResponse21sp1V2> UserBroadWorksMobilityMobileIdentityGetRequest21sp1V2Async(this OcipClient client, UserBroadWorksMobilityMobileIdentityGetRequest21sp1V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserBroadWorksMobilityMobileIdentityGetResponse21sp1V2;
        }
        /// <summary>
        /// Get the settings for a user's specified mobile identity.
        /// The response is either a UserBroadWorksMobilityMobileIdentityGetResponse22 or an ErrorResponse.
        /// Replaced by UserBroadWorksMobilityMobileIdentityGetRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserBroadWorksMobilityMobileIdentityGetRequest22Async instead.")]
        public static async Task<UserBroadWorksMobilityMobileIdentityGetResponse22> UserBroadWorksMobilityMobileIdentityGetRequest22(this OcipClient client, UserBroadWorksMobilityMobileIdentityGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserBroadWorksMobilityMobileIdentityGetResponse22;
        }

        /// <summary>
        /// Get the settings for a user's specified mobile identity.
        /// The response is either a UserBroadWorksMobilityMobileIdentityGetResponse22 or an ErrorResponse.
        /// Replaced by UserBroadWorksMobilityMobileIdentityGetRequest22V2.
        /// </summary>
        public static async Task<UserBroadWorksMobilityMobileIdentityGetResponse22> UserBroadWorksMobilityMobileIdentityGetRequest22Async(this OcipClient client, UserBroadWorksMobilityMobileIdentityGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserBroadWorksMobilityMobileIdentityGetResponse22;
        }
        /// <summary>
        /// Get the settings for a user's specified mobile identity.
        /// The response is either a UserBroadWorksMobilityMobileIdentityGetResponse22V2 or an ErrorResponse.
        /// Replaced By: UserBroadWorksMobilityMobileIdentityGetRequest22V3
        /// </summary>
        [Obsolete("This method is deprecated. Use UserBroadWorksMobilityMobileIdentityGetRequest22V2Async instead.")]
        public static async Task<UserBroadWorksMobilityMobileIdentityGetResponse22V2> UserBroadWorksMobilityMobileIdentityGetRequest22V2(this OcipClient client, UserBroadWorksMobilityMobileIdentityGetRequest22V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserBroadWorksMobilityMobileIdentityGetResponse22V2;
        }

        /// <summary>
        /// Get the settings for a user's specified mobile identity.
        /// The response is either a UserBroadWorksMobilityMobileIdentityGetResponse22V2 or an ErrorResponse.
        /// Replaced By: UserBroadWorksMobilityMobileIdentityGetRequest22V3
        /// </summary>
        public static async Task<UserBroadWorksMobilityMobileIdentityGetResponse22V2> UserBroadWorksMobilityMobileIdentityGetRequest22V2Async(this OcipClient client, UserBroadWorksMobilityMobileIdentityGetRequest22V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserBroadWorksMobilityMobileIdentityGetResponse22V2;
        }
        /// <summary>
        /// Request the settings for the busy lamp field service.
        /// The response is either a UserBusyLampFieldGetResponse or an ErrorResponse.
        /// Replaced by: UserBusyLampFieldGetRequest16sp2
        /// </summary>
        [Obsolete("This method is deprecated. Use UserBusyLampFieldGetRequestAsync instead.")]
        public static async Task<UserBusyLampFieldGetResponse> UserBusyLampFieldGetRequest(this OcipClient client, UserBusyLampFieldGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserBusyLampFieldGetResponse;
        }

        /// <summary>
        /// Request the settings for the busy lamp field service.
        /// The response is either a UserBusyLampFieldGetResponse or an ErrorResponse.
        /// Replaced by: UserBusyLampFieldGetRequest16sp2
        /// </summary>
        public static async Task<UserBusyLampFieldGetResponse> UserBusyLampFieldGetRequestAsync(this OcipClient client, UserBusyLampFieldGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserBusyLampFieldGetResponse;
        }
        /// <summary>
        /// Get the list of call centers the specified user belongs to.
        /// The response is either a UserCallCenterGetListResponse or an ErrorResponse.
        /// Replaced By: UserCallCenterGetRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallCenterGetListRequestAsync instead.")]
        public static async Task<UserCallCenterGetListResponse> UserCallCenterGetListRequest(this OcipClient client, UserCallCenterGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallCenterGetListResponse;
        }

        /// <summary>
        /// Get the list of call centers the specified user belongs to.
        /// The response is either a UserCallCenterGetListResponse or an ErrorResponse.
        /// Replaced By: UserCallCenterGetRequest
        /// </summary>
        public static async Task<UserCallCenterGetListResponse> UserCallCenterGetListRequestAsync(this OcipClient client, UserCallCenterGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallCenterGetListResponse;
        }
        /// <summary>
        /// Get the user's ACD state and the list of call centers the specified user belongs to.
        /// The response is either a UserCallCenterGetResponse or an ErrorResponse.
        /// 
        /// Replaced By: UserCallCenterGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallCenterGetRequestAsync instead.")]
        public static async Task<UserCallCenterGetResponse> UserCallCenterGetRequest(this OcipClient client, UserCallCenterGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallCenterGetResponse;
        }

        /// <summary>
        /// Get the user's ACD state and the list of call centers the specified user belongs to.
        /// The response is either a UserCallCenterGetResponse or an ErrorResponse.
        /// 
        /// Replaced By: UserCallCenterGetRequest16
        /// </summary>
        public static async Task<UserCallCenterGetResponse> UserCallCenterGetRequestAsync(this OcipClient client, UserCallCenterGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallCenterGetResponse;
        }
        /// <summary>
        /// Get the user's call center settings and the list of call centers the specified user belongs to.
        /// The response is either a UserCallCenterGetResponse16 or an ErrorResponse.
        /// 
        /// Replaced by: UserCallCenterGetRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallCenterGetRequest16Async instead.")]
        public static async Task<UserCallCenterGetResponse16> UserCallCenterGetRequest16(this OcipClient client, UserCallCenterGetRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallCenterGetResponse16;
        }

        /// <summary>
        /// Get the user's call center settings and the list of call centers the specified user belongs to.
        /// The response is either a UserCallCenterGetResponse16 or an ErrorResponse.
        /// 
        /// Replaced by: UserCallCenterGetRequest17
        /// </summary>
        public static async Task<UserCallCenterGetResponse16> UserCallCenterGetRequest16Async(this OcipClient client, UserCallCenterGetRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallCenterGetResponse16;
        }
        /// <summary>
        /// Get the user's call center settings and the list of call centers the specified user belongs to.
        /// The response is either a UserCallCenterGetResponse17 or an ErrorResponse.
        /// 
        /// Replaced by UserCallCenterGetRequest17sp4.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallCenterGetRequest17Async instead.")]
        public static async Task<UserCallCenterGetResponse17> UserCallCenterGetRequest17(this OcipClient client, UserCallCenterGetRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallCenterGetResponse17;
        }

        /// <summary>
        /// Get the user's call center settings and the list of call centers the specified user belongs to.
        /// The response is either a UserCallCenterGetResponse17 or an ErrorResponse.
        /// 
        /// Replaced by UserCallCenterGetRequest17sp4.
        /// </summary>
        public static async Task<UserCallCenterGetResponse17> UserCallCenterGetRequest17Async(this OcipClient client, UserCallCenterGetRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallCenterGetResponse17;
        }
        /// <summary>
        /// Get the user's call center settings and the list of call centers the specified user belongs to.
        /// The response is either a UserCallCenterGetResponse17sp4 or an ErrorResponse.
        /// 
        /// Replaced by UserCallCenterGetRequest19
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallCenterGetRequest17sp4Async instead.")]
        public static async Task<UserCallCenterGetResponse17sp4> UserCallCenterGetRequest17sp4(this OcipClient client, UserCallCenterGetRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallCenterGetResponse17sp4;
        }

        /// <summary>
        /// Get the user's call center settings and the list of call centers the specified user belongs to.
        /// The response is either a UserCallCenterGetResponse17sp4 or an ErrorResponse.
        /// 
        /// Replaced by UserCallCenterGetRequest19
        /// </summary>
        public static async Task<UserCallCenterGetResponse17sp4> UserCallCenterGetRequest17sp4Async(this OcipClient client, UserCallCenterGetRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallCenterGetResponse17sp4;
        }
        /// <summary>
        /// Request for an agent to login or logout of one or more Call Centers.
        /// Contains a list specifing the desired login status of one or more call centers.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: UserCallCenterModifyRequest17sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallCenterModifyAvailabilityListRequestAsync instead.")]
        public static async Task<SuccessResponse> UserCallCenterModifyAvailabilityListRequest(this OcipClient client, UserCallCenterModifyAvailabilityListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request for an agent to login or logout of one or more Call Centers.
        /// Contains a list specifing the desired login status of one or more call centers.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: UserCallCenterModifyRequest17sp4
        /// </summary>
        public static async Task<SuccessResponse> UserCallCenterModifyAvailabilityListRequestAsync(this OcipClient client, UserCallCenterModifyAvailabilityListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modifies the agents call center settings and the availability for an agent in one or more Call Centers.
        /// Contains a list specifying the desired availability status of one or more call centers.
        /// A default unavailable code will be used if the parameter agentUnavailableCode is not active, included or is invalid.
        /// Changing the agentACDState from unavailable to any other state will automatically clear the unavailable code.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by UserCallCenterModifyRequest17sp4.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallCenterModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> UserCallCenterModifyRequest(this OcipClient client, UserCallCenterModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modifies the agents call center settings and the availability for an agent in one or more Call Centers.
        /// Contains a list specifying the desired availability status of one or more call centers.
        /// A default unavailable code will be used if the parameter agentUnavailableCode is not active, included or is invalid.
        /// Changing the agentACDState from unavailable to any other state will automatically clear the unavailable code.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by UserCallCenterModifyRequest17sp4.
        /// </summary>
        public static async Task<SuccessResponse> UserCallCenterModifyRequestAsync(this OcipClient client, UserCallCenterModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modifies the agents call center settings and the availability for an agent in one or more Call Centers.
        /// Contains a list specifying the desired availability status of one or more call centers.
        /// A default unavailable code will be used if the parameter agentUnavailableCode is not active, included or is invalid.
        /// Changing the agentACDState from unavailable to any other state will automatically clear the unavailable code.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by UserCallCenterModifyRequest19.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallCenterModifyRequest17sp4Async instead.")]
        public static async Task<SuccessResponse> UserCallCenterModifyRequest17sp4(this OcipClient client, UserCallCenterModifyRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modifies the agents call center settings and the availability for an agent in one or more Call Centers.
        /// Contains a list specifying the desired availability status of one or more call centers.
        /// A default unavailable code will be used if the parameter agentUnavailableCode is not active, included or is invalid.
        /// Changing the agentACDState from unavailable to any other state will automatically clear the unavailable code.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by UserCallCenterModifyRequest19.
        /// </summary>
        public static async Task<SuccessResponse> UserCallCenterModifyRequest17sp4Async(this OcipClient client, UserCallCenterModifyRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request the user's Call Center Monitoring settings.
        /// The response is either a UserCallCenterMonitoringGetResponse or an ErrorResponse.
        /// Replaced by UserCallCenterMonitoringGetRequest23
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallCenterMonitoringGetRequestAsync instead.")]
        public static async Task<UserCallCenterMonitoringGetResponse> UserCallCenterMonitoringGetRequest(this OcipClient client, UserCallCenterMonitoringGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallCenterMonitoringGetResponse;
        }

        /// <summary>
        /// Request the user's Call Center Monitoring settings.
        /// The response is either a UserCallCenterMonitoringGetResponse or an ErrorResponse.
        /// Replaced by UserCallCenterMonitoringGetRequest23
        /// </summary>
        public static async Task<UserCallCenterMonitoringGetResponse> UserCallCenterMonitoringGetRequestAsync(this OcipClient client, UserCallCenterMonitoringGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallCenterMonitoringGetResponse;
        }
        /// <summary>
        /// Add a criteria to the user's call forwarding selective service.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallForwardingSelectiveAddCriteriaRequestAsync instead.")]
        public static async Task<SuccessResponse> UserCallForwardingSelectiveAddCriteriaRequest(this OcipClient client, UserCallForwardingSelectiveAddCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a criteria to the user's call forwarding selective service.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserCallForwardingSelectiveAddCriteriaRequestAsync(this OcipClient client, UserCallForwardingSelectiveAddCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a criteria for the user's call forwarding selective service.
        /// The response is either a UserCallForwardingSelectiveGetCriteriaResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallForwardingSelectiveGetCriteriaRequestAsync instead.")]
        public static async Task<UserCallForwardingSelectiveGetCriteriaResponse> UserCallForwardingSelectiveGetCriteriaRequest(this OcipClient client, UserCallForwardingSelectiveGetCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallForwardingSelectiveGetCriteriaResponse;
        }

        /// <summary>
        /// Get a criteria for the user's call forwarding selective service.
        /// The response is either a UserCallForwardingSelectiveGetCriteriaResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserCallForwardingSelectiveGetCriteriaResponse> UserCallForwardingSelectiveGetCriteriaRequestAsync(this OcipClient client, UserCallForwardingSelectiveGetCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallForwardingSelectiveGetCriteriaResponse;
        }
        /// <summary>
        /// Get the user's call forwarding selective service setting.
        /// The response is either a UserCallForwardingSelectiveGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallForwardingSelectiveGetRequestAsync instead.")]
        public static async Task<UserCallForwardingSelectiveGetResponse> UserCallForwardingSelectiveGetRequest(this OcipClient client, UserCallForwardingSelectiveGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallForwardingSelectiveGetResponse;
        }

        /// <summary>
        /// Get the user's call forwarding selective service setting.
        /// The response is either a UserCallForwardingSelectiveGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserCallForwardingSelectiveGetResponse> UserCallForwardingSelectiveGetRequestAsync(this OcipClient client, UserCallForwardingSelectiveGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallForwardingSelectiveGetResponse;
        }
        /// <summary>
        /// Request the user level data associated with Calling Party Category.
        /// The response is either a UserCallingPartyCategoryGetResponse or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallingPartyCategoryGetRequestAsync instead.")]
        public static async Task<UserCallingPartyCategoryGetResponse> UserCallingPartyCategoryGetRequest(this OcipClient client, UserCallingPartyCategoryGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallingPartyCategoryGetResponse;
        }

        /// <summary>
        /// Request the user level data associated with Calling Party Category.
        /// The response is either a UserCallingPartyCategoryGetResponse or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<UserCallingPartyCategoryGetResponse> UserCallingPartyCategoryGetRequestAsync(this OcipClient client, UserCallingPartyCategoryGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallingPartyCategoryGetResponse;
        }
        /// <summary>
        /// Modify the user level data associated with Calling Party Category.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallingPartyCategoryModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> UserCallingPartyCategoryModifyRequest(this OcipClient client, UserCallingPartyCategoryModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the user level data associated with Calling Party Category.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserCallingPartyCategoryModifyRequestAsync(this OcipClient client, UserCallingPartyCategoryModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Clear a user's call logs associated with Basic Call Logs and Enhanced
        /// Call Logs features.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: UserCallLogsClearRequest14sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallLogsClearRequestAsync instead.")]
        public static async Task<SuccessResponse> UserCallLogsClearRequest(this OcipClient client, UserCallLogsClearRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Clear a user's call logs associated with Basic Call Logs and Enhanced
        /// Call Logs features.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: UserCallLogsClearRequest14sp4
        /// </summary>
        public static async Task<SuccessResponse> UserCallLogsClearRequestAsync(this OcipClient client, UserCallLogsClearRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a criteria to the user's call notify service.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallNotifyAddCriteriaRequestAsync instead.")]
        public static async Task<SuccessResponse> UserCallNotifyAddCriteriaRequest(this OcipClient client, UserCallNotifyAddCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a criteria to the user's call notify service.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserCallNotifyAddCriteriaRequestAsync(this OcipClient client, UserCallNotifyAddCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a criteria for the user's call notify service.
        /// The response is either a UserCallNotifyGetCriteriaResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallNotifyGetCriteriaRequestAsync instead.")]
        public static async Task<UserCallNotifyGetCriteriaResponse> UserCallNotifyGetCriteriaRequest(this OcipClient client, UserCallNotifyGetCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallNotifyGetCriteriaResponse;
        }

        /// <summary>
        /// Get a criteria for the user's call notify service.
        /// The response is either a UserCallNotifyGetCriteriaResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserCallNotifyGetCriteriaResponse> UserCallNotifyGetCriteriaRequestAsync(this OcipClient client, UserCallNotifyGetCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallNotifyGetCriteriaResponse;
        }
        /// <summary>
        /// Request the user level data associated with Call Policies.
        /// The response is either a UserCallPoliciesGetResponse
        /// or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallPoliciesGetRequestAsync instead.")]
        public static async Task<UserCallPoliciesGetResponse> UserCallPoliciesGetRequest(this OcipClient client, UserCallPoliciesGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallPoliciesGetResponse;
        }

        /// <summary>
        /// Request the user level data associated with Call Policies.
        /// The response is either a UserCallPoliciesGetResponse
        /// or an ErrorResponse.
        /// </summary>
        public static async Task<UserCallPoliciesGetResponse> UserCallPoliciesGetRequestAsync(this OcipClient client, UserCallPoliciesGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallPoliciesGetResponse;
        }
        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse14 or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallProcessingGetPolicyRequest14Async instead.")]
        public static async Task<UserCallProcessingGetPolicyResponse14> UserCallProcessingGetPolicyRequest14(this OcipClient client, UserCallProcessingGetPolicyRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse14;
        }

        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse14 or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<UserCallProcessingGetPolicyResponse14> UserCallProcessingGetPolicyRequest14Async(this OcipClient client, UserCallProcessingGetPolicyRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse14;
        }
        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse14sp1 or an
        /// ErrorResponse.
        /// Replaced By: UserCallProcessingGetPolicyRequest14sp7
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallProcessingGetPolicyRequest14sp1Async instead.")]
        public static async Task<UserCallProcessingGetPolicyResponse14sp1> UserCallProcessingGetPolicyRequest14sp1(this OcipClient client, UserCallProcessingGetPolicyRequest14sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse14sp1;
        }

        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse14sp1 or an
        /// ErrorResponse.
        /// Replaced By: UserCallProcessingGetPolicyRequest14sp7
        /// </summary>
        public static async Task<UserCallProcessingGetPolicyResponse14sp1> UserCallProcessingGetPolicyRequest14sp1Async(this OcipClient client, UserCallProcessingGetPolicyRequest14sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse14sp1;
        }
        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse14sp7 or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallProcessingGetPolicyRequest14sp7Async instead.")]
        public static async Task<UserCallProcessingGetPolicyResponse14sp7> UserCallProcessingGetPolicyRequest14sp7(this OcipClient client, UserCallProcessingGetPolicyRequest14sp7 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse14sp7;
        }

        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse14sp7 or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<UserCallProcessingGetPolicyResponse14sp7> UserCallProcessingGetPolicyRequest14sp7Async(this OcipClient client, UserCallProcessingGetPolicyRequest14sp7 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse14sp7;
        }
        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse16 or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallProcessingGetPolicyRequest16Async instead.")]
        public static async Task<UserCallProcessingGetPolicyResponse16> UserCallProcessingGetPolicyRequest16(this OcipClient client, UserCallProcessingGetPolicyRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse16;
        }

        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse16 or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<UserCallProcessingGetPolicyResponse16> UserCallProcessingGetPolicyRequest16Async(this OcipClient client, UserCallProcessingGetPolicyRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse16;
        }
        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse16 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: UserCallProcessingGetPolicyRequest17sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallProcessingGetPolicyRequest16sp2Async instead.")]
        public static async Task<UserCallProcessingGetPolicyResponse16> UserCallProcessingGetPolicyRequest16sp2(this OcipClient client, UserCallProcessingGetPolicyRequest16sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse16;
        }

        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse16 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: UserCallProcessingGetPolicyRequest17sp4
        /// </summary>
        public static async Task<UserCallProcessingGetPolicyResponse16> UserCallProcessingGetPolicyRequest16sp2Async(this OcipClient client, UserCallProcessingGetPolicyRequest16sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse16;
        }
        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse17 or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallProcessingGetPolicyRequest17Async instead.")]
        public static async Task<UserCallProcessingGetPolicyResponse17> UserCallProcessingGetPolicyRequest17(this OcipClient client, UserCallProcessingGetPolicyRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse17;
        }

        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse17 or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<UserCallProcessingGetPolicyResponse17> UserCallProcessingGetPolicyRequest17Async(this OcipClient client, UserCallProcessingGetPolicyRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse17;
        }
        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse17sp3 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: UserCallProcessingGetPolicyRequest17Sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallProcessingGetPolicyRequest17sp3Async instead.")]
        public static async Task<UserCallProcessingGetPolicyResponse17sp3> UserCallProcessingGetPolicyRequest17sp3(this OcipClient client, UserCallProcessingGetPolicyRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse17sp3;
        }

        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse17sp3 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: UserCallProcessingGetPolicyRequest17Sp4
        /// </summary>
        public static async Task<UserCallProcessingGetPolicyResponse17sp3> UserCallProcessingGetPolicyRequest17sp3Async(this OcipClient client, UserCallProcessingGetPolicyRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse17sp3;
        }
        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse17sp4 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: UserCallProcessingGetPolicyRequest18
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallProcessingGetPolicyRequest17sp4Async instead.")]
        public static async Task<UserCallProcessingGetPolicyResponse17sp4> UserCallProcessingGetPolicyRequest17sp4(this OcipClient client, UserCallProcessingGetPolicyRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse17sp4;
        }

        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse17sp4 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: UserCallProcessingGetPolicyRequest18
        /// </summary>
        public static async Task<UserCallProcessingGetPolicyResponse17sp4> UserCallProcessingGetPolicyRequest17sp4Async(this OcipClient client, UserCallProcessingGetPolicyRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse17sp4;
        }
        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse18 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: UserCallProcessingGetPolicyRequest19sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallProcessingGetPolicyRequest18Async instead.")]
        public static async Task<UserCallProcessingGetPolicyResponse18> UserCallProcessingGetPolicyRequest18(this OcipClient client, UserCallProcessingGetPolicyRequest18 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse18;
        }

        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse18 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: UserCallProcessingGetPolicyRequest19sp1
        /// </summary>
        public static async Task<UserCallProcessingGetPolicyResponse18> UserCallProcessingGetPolicyRequest18Async(this OcipClient client, UserCallProcessingGetPolicyRequest18 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse18;
        }
        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse19sp1 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: UserCallProcessingGetPolicyRequest21sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallProcessingGetPolicyRequest19sp1Async instead.")]
        public static async Task<UserCallProcessingGetPolicyResponse19sp1> UserCallProcessingGetPolicyRequest19sp1(this OcipClient client, UserCallProcessingGetPolicyRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse19sp1;
        }

        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse19sp1 or an
        /// ErrorResponse.
        /// 
        /// Replaced by: UserCallProcessingGetPolicyRequest21sp1
        /// </summary>
        public static async Task<UserCallProcessingGetPolicyResponse19sp1> UserCallProcessingGetPolicyRequest19sp1Async(this OcipClient client, UserCallProcessingGetPolicyRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse19sp1;
        }
        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse21sp1 or an
        /// ErrorResponse.
        /// Replaced by: UserCallProcessingGetPolicyRequest21sp2
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallProcessingGetPolicyRequest21sp1Async instead.")]
        public static async Task<UserCallProcessingGetPolicyResponse21sp1> UserCallProcessingGetPolicyRequest21sp1(this OcipClient client, UserCallProcessingGetPolicyRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse21sp1;
        }

        /// <summary>
        /// Request the user level data associated with Call Processing Policy.
        /// The response is either a UserCallProcessingGetPolicyResponse21sp1 or an
        /// ErrorResponse.
        /// Replaced by: UserCallProcessingGetPolicyRequest21sp2
        /// </summary>
        public static async Task<UserCallProcessingGetPolicyResponse21sp1> UserCallProcessingGetPolicyRequest21sp1Async(this OcipClient client, UserCallProcessingGetPolicyRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallProcessingGetPolicyResponse21sp1;
        }
        /// <summary>
        /// Modify the user level data associated with Call Processing Policy.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: UserCallProcessingModifyPolicyRequest14sp7
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallProcessingModifyPolicyRequest14Async instead.")]
        public static async Task<SuccessResponse> UserCallProcessingModifyPolicyRequest14(this OcipClient client, UserCallProcessingModifyPolicyRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the user level data associated with Call Processing Policy.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: UserCallProcessingModifyPolicyRequest14sp7
        /// </summary>
        public static async Task<SuccessResponse> UserCallProcessingModifyPolicyRequest14Async(this OcipClient client, UserCallProcessingModifyPolicyRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the Call Recording attributes for a user.
        /// The response is either a UserCallRecordingGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallRecordingGetRequestAsync instead.")]
        public static async Task<UserCallRecordingGetResponse> UserCallRecordingGetRequest(this OcipClient client, UserCallRecordingGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallRecordingGetResponse;
        }

        /// <summary>
        /// Get the Call Recording attributes for a user.
        /// The response is either a UserCallRecordingGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserCallRecordingGetResponse> UserCallRecordingGetRequestAsync(this OcipClient client, UserCallRecordingGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallRecordingGetResponse;
        }
        /// <summary>
        /// Get the Call Recording attributes for a user.
        /// The response is either a UserCallRecordingGetResponse20 or an ErrorResponse.
        /// 
        /// The following parameters are not returned for service instance:
        /// - pauseResumeNotification
        /// - enableCallRecordingAnnouncement
        /// - enableRecordCallRepeatWarningTone
        /// - recordCallRepeatWarningToneTimerSeconds
        /// 
        /// Replaced by: UserCallRecordingGetRequest23.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallRecordingGetRequest20Async instead.")]
        public static async Task<UserCallRecordingGetResponse20> UserCallRecordingGetRequest20(this OcipClient client, UserCallRecordingGetRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallRecordingGetResponse20;
        }

        /// <summary>
        /// Get the Call Recording attributes for a user.
        /// The response is either a UserCallRecordingGetResponse20 or an ErrorResponse.
        /// 
        /// The following parameters are not returned for service instance:
        /// - pauseResumeNotification
        /// - enableCallRecordingAnnouncement
        /// - enableRecordCallRepeatWarningTone
        /// - recordCallRepeatWarningToneTimerSeconds
        /// 
        /// Replaced by: UserCallRecordingGetRequest23.
        /// </summary>
        public static async Task<UserCallRecordingGetResponse20> UserCallRecordingGetRequest20Async(this OcipClient client, UserCallRecordingGetRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallRecordingGetResponse20;
        }
        /// <summary>
        /// Request the user level data associated with Call Transfer.
        /// The response is either a UserCallTransferGetResponse or an ErrorResponse.
        /// Replaced By: UserCallTransferGetRequest14Sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallTransferGetRequestAsync instead.")]
        public static async Task<UserCallTransferGetResponse> UserCallTransferGetRequest(this OcipClient client, UserCallTransferGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallTransferGetResponse;
        }

        /// <summary>
        /// Request the user level data associated with Call Transfer.
        /// The response is either a UserCallTransferGetResponse or an ErrorResponse.
        /// Replaced By: UserCallTransferGetRequest14Sp4
        /// </summary>
        public static async Task<UserCallTransferGetResponse> UserCallTransferGetRequestAsync(this OcipClient client, UserCallTransferGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallTransferGetResponse;
        }
        /// <summary>
        /// Request the user level data associated with Call Waiting.
        /// The response is either a UserCallWaitingGetResponse or an
        /// ErrorResponse.
        /// Replaced by: UserCallWaitingGetRequest17sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCallWaitingGetRequestAsync instead.")]
        public static async Task<UserCallWaitingGetResponse> UserCallWaitingGetRequest(this OcipClient client, UserCallWaitingGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCallWaitingGetResponse;
        }

        /// <summary>
        /// Request the user level data associated with Call Waiting.
        /// The response is either a UserCallWaitingGetResponse or an
        /// ErrorResponse.
        /// Replaced by: UserCallWaitingGetRequest17sp4
        /// </summary>
        public static async Task<UserCallWaitingGetResponse> UserCallWaitingGetRequestAsync(this OcipClient client, UserCallWaitingGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCallWaitingGetResponse;
        }
        /// <summary>
        /// Request the user level data associated with Charge Number.
        /// The response is either a UserChargeNumberGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserChargeNumberGetRequestAsync instead.")]
        public static async Task<UserChargeNumberGetResponse> UserChargeNumberGetRequest(this OcipClient client, UserChargeNumberGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserChargeNumberGetResponse;
        }

        /// <summary>
        /// Request the user level data associated with Charge Number.
        /// The response is either a UserChargeNumberGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserChargeNumberGetResponse> UserChargeNumberGetRequestAsync(this OcipClient client, UserChargeNumberGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserChargeNumberGetResponse;
        }
        /// <summary>
        /// Request the collaborate bridged assigned to the user. The user can only be assigned to one collaborate bridge at any given time.
        /// The response is either UserCollaborateBridgeGetResponse or ErrorResponse.
        /// 
        /// Replaced by: UserCollaborateBridgeGetRequest20sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCollaborateBridgeGetRequestAsync instead.")]
        public static async Task<UserCollaborateBridgeGetResponse> UserCollaborateBridgeGetRequest(this OcipClient client, UserCollaborateBridgeGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCollaborateBridgeGetResponse;
        }

        /// <summary>
        /// Request the collaborate bridged assigned to the user. The user can only be assigned to one collaborate bridge at any given time.
        /// The response is either UserCollaborateBridgeGetResponse or ErrorResponse.
        /// 
        /// Replaced by: UserCollaborateBridgeGetRequest20sp1
        /// </summary>
        public static async Task<UserCollaborateBridgeGetResponse> UserCollaborateBridgeGetRequestAsync(this OcipClient client, UserCollaborateBridgeGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCollaborateBridgeGetResponse;
        }
        /// <summary>
        /// Request to modify a user.
        /// If deleteExistingDevices is set to true, when the devices for the main endpoint or SCA service are changed, devices with no more endpoint will be deleted if the command is executed with the correct priviledge.
        /// Group administrator or above running this command can delete any group level devices.
        /// Service provider administrator or above can delete any service provider and group devices.
        /// Provisioning administrator or above can delete any devices.
        /// An ErrorResponse will be returned if any device cannot be deleted because of insufficient privilege.
        /// 
        /// When phone numbers are un-assigned from the user, the unused numbers may be un-assigned from the group and service provider. If UnassignPhoneNumbersLevel is set to 'Group', the user's primary phone number, fax number and any alternate numbers, will be un-assigned from the group if the command is executed by a service provider administrator or above.
        /// When set to 'Service Provider', they will be un-assigned from the group and service provider if the command is executed by a provisioning administrator or above.
        /// When omitted, the number(s) will be left assigned to the group.
        /// An ErrorResponse will be returned if any number cannot be unassigned because of insufficient privilege.
        /// If the phoneNumber has not been assigned to the group and addPhoneNumberToGroup is set to true, it will be added to group if needed if the command is executed by a service provider administrator and above. The command will fail otherwise.
        /// 
        /// Alternate user ids can be added by a group level administrator or above.
        /// 
        /// The password is not required if external authentication is enabled.
        /// When sharedCallAppearanceAccessDeviceEndpoint element is included and the Shared Call Appearance service is not assigned after this request, the request will fail.
        /// 
        /// The userService/servicePackwill be authorized to the group if it has not been authorized to the group and the command is excuted by a service provider administrator. The request will fail otherwise.
        /// If not present, the authorizedQuantity will be set to unlimited if allowed.
        /// 
        /// If any of the third party voice mail elements are included but the service is not assigned after this request, the request will fail.
        /// 
        /// If the sip authentication elements are included but the SPI Authentication service is not assigned after this request, the request will fail.
        /// If the impPassword element is included but the Integrated IMP service is not assigned after this request, the request will fail.
        /// The following elements are ignored in XS data mode:
        /// nameDialingName
        /// alternateUserIdList
        /// passcode
        /// trunkAddressing
        /// thirdPartyVoiceMailServerSelection
        /// thirdPartyVoiceMailServerUserServer
        /// thirdPartyVoiceMailServerMailboxIdType
        /// thirdPartyVoiceMailMailboxURL
        /// sipAuthenticationData
        /// newUserExternalId
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by: UserConsolidatedModifyRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use UserConsolidatedModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> UserConsolidatedModifyRequest(this OcipClient client, UserConsolidatedModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a user.
        /// If deleteExistingDevices is set to true, when the devices for the main endpoint or SCA service are changed, devices with no more endpoint will be deleted if the command is executed with the correct priviledge.
        /// Group administrator or above running this command can delete any group level devices.
        /// Service provider administrator or above can delete any service provider and group devices.
        /// Provisioning administrator or above can delete any devices.
        /// An ErrorResponse will be returned if any device cannot be deleted because of insufficient privilege.
        /// 
        /// When phone numbers are un-assigned from the user, the unused numbers may be un-assigned from the group and service provider. If UnassignPhoneNumbersLevel is set to 'Group', the user's primary phone number, fax number and any alternate numbers, will be un-assigned from the group if the command is executed by a service provider administrator or above.
        /// When set to 'Service Provider', they will be un-assigned from the group and service provider if the command is executed by a provisioning administrator or above.
        /// When omitted, the number(s) will be left assigned to the group.
        /// An ErrorResponse will be returned if any number cannot be unassigned because of insufficient privilege.
        /// If the phoneNumber has not been assigned to the group and addPhoneNumberToGroup is set to true, it will be added to group if needed if the command is executed by a service provider administrator and above. The command will fail otherwise.
        /// 
        /// Alternate user ids can be added by a group level administrator or above.
        /// 
        /// The password is not required if external authentication is enabled.
        /// When sharedCallAppearanceAccessDeviceEndpoint element is included and the Shared Call Appearance service is not assigned after this request, the request will fail.
        /// 
        /// The userService/servicePackwill be authorized to the group if it has not been authorized to the group and the command is excuted by a service provider administrator. The request will fail otherwise.
        /// If not present, the authorizedQuantity will be set to unlimited if allowed.
        /// 
        /// If any of the third party voice mail elements are included but the service is not assigned after this request, the request will fail.
        /// 
        /// If the sip authentication elements are included but the SPI Authentication service is not assigned after this request, the request will fail.
        /// If the impPassword element is included but the Integrated IMP service is not assigned after this request, the request will fail.
        /// The following elements are ignored in XS data mode:
        /// nameDialingName
        /// alternateUserIdList
        /// passcode
        /// trunkAddressing
        /// thirdPartyVoiceMailServerSelection
        /// thirdPartyVoiceMailServerUserServer
        /// thirdPartyVoiceMailServerMailboxIdType
        /// thirdPartyVoiceMailMailboxURL
        /// sipAuthenticationData
        /// newUserExternalId
        /// The response is either SuccessResponse or ErrorResponse.
        /// Replaced by: UserConsolidatedModifyRequest22
        /// </summary>
        public static async Task<SuccessResponse> UserConsolidatedModifyRequestAsync(this OcipClient client, UserConsolidatedModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a criteria to the user's custom ringback service.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCustomRingbackUserAddCriteriaRequestAsync instead.")]
        public static async Task<SuccessResponse> UserCustomRingbackUserAddCriteriaRequest(this OcipClient client, UserCustomRingbackUserAddCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a criteria to the user's custom ringback service.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserCustomRingbackUserAddCriteriaRequestAsync(this OcipClient client, UserCustomRingbackUserAddCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a criteria for the user's custom ringback service.
        /// The response is either a UserCustomRingbackUserGetCriteriaResponse or an ErrorResponse.
        /// Replaced By: UserCustomRingbackUserGetCriteriaRequest15Sp2
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCustomRingbackUserGetCriteriaRequestAsync instead.")]
        public static async Task<UserCustomRingbackUserGetCriteriaResponse> UserCustomRingbackUserGetCriteriaRequest(this OcipClient client, UserCustomRingbackUserGetCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCustomRingbackUserGetCriteriaResponse;
        }

        /// <summary>
        /// Get a criteria for the user's custom ringback service.
        /// The response is either a UserCustomRingbackUserGetCriteriaResponse or an ErrorResponse.
        /// Replaced By: UserCustomRingbackUserGetCriteriaRequest15Sp2
        /// </summary>
        public static async Task<UserCustomRingbackUserGetCriteriaResponse> UserCustomRingbackUserGetCriteriaRequestAsync(this OcipClient client, UserCustomRingbackUserGetCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCustomRingbackUserGetCriteriaResponse;
        }
        /// <summary>
        /// Get a criteria for the user's custom ringback service.
        /// The response is either a UserCustomRingbackUserGetCriteriaResponse15sp2 or an ErrorResponse.
        /// Replaced By: UserCustomRingbackUserGetCriteriaRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCustomRingbackUserGetCriteriaRequest15sp2Async instead.")]
        public static async Task<UserCustomRingbackUserGetCriteriaResponse15sp2> UserCustomRingbackUserGetCriteriaRequest15sp2(this OcipClient client, UserCustomRingbackUserGetCriteriaRequest15sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCustomRingbackUserGetCriteriaResponse15sp2;
        }

        /// <summary>
        /// Get a criteria for the user's custom ringback service.
        /// The response is either a UserCustomRingbackUserGetCriteriaResponse15sp2 or an ErrorResponse.
        /// Replaced By: UserCustomRingbackUserGetCriteriaRequest16
        /// </summary>
        public static async Task<UserCustomRingbackUserGetCriteriaResponse15sp2> UserCustomRingbackUserGetCriteriaRequest15sp2Async(this OcipClient client, UserCustomRingbackUserGetCriteriaRequest15sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCustomRingbackUserGetCriteriaResponse15sp2;
        }
        /// <summary>
        /// Get a criteria for the user's custom ringback service.
        /// The response is either a UserCustomRingbackUserGetCriteriaResponse20 or an ErrorResponse.
        /// Replaced by: UserCustomRingbackUserGetCriteriaRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCustomRingbackUserGetCriteriaRequest20Async instead.")]
        public static async Task<UserCustomRingbackUserGetCriteriaResponse20> UserCustomRingbackUserGetCriteriaRequest20(this OcipClient client, UserCustomRingbackUserGetCriteriaRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserCustomRingbackUserGetCriteriaResponse20;
        }

        /// <summary>
        /// Get a criteria for the user's custom ringback service.
        /// The response is either a UserCustomRingbackUserGetCriteriaResponse20 or an ErrorResponse.
        /// Replaced by: UserCustomRingbackUserGetCriteriaRequest21
        /// </summary>
        public static async Task<UserCustomRingbackUserGetCriteriaResponse20> UserCustomRingbackUserGetCriteriaRequest20Async(this OcipClient client, UserCustomRingbackUserGetCriteriaRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserCustomRingbackUserGetCriteriaResponse20;
        }
        /// <summary>
        /// Modify a criteria for the user's custom ringback service.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: UserCustomRingbackUserModifyCriteriaRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use UserCustomRingbackUserModifyCriteriaRequestAsync instead.")]
        public static async Task<SuccessResponse> UserCustomRingbackUserModifyCriteriaRequest(this OcipClient client, UserCustomRingbackUserModifyCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a criteria for the user's custom ringback service.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: UserCustomRingbackUserModifyCriteriaRequest16
        /// </summary>
        public static async Task<SuccessResponse> UserCustomRingbackUserModifyCriteriaRequestAsync(this OcipClient client, UserCustomRingbackUserModifyCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request the user level data associated with Device Policy.
        /// The response is either a UserDevicePoliciesGetResponse or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserDevicePoliciesGetRequestAsync instead.")]
        public static async Task<UserDevicePoliciesGetResponse> UserDevicePoliciesGetRequest(this OcipClient client, UserDevicePoliciesGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserDevicePoliciesGetResponse;
        }

        /// <summary>
        /// Request the user level data associated with Device Policy.
        /// The response is either a UserDevicePoliciesGetResponse or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<UserDevicePoliciesGetResponse> UserDevicePoliciesGetRequestAsync(this OcipClient client, UserDevicePoliciesGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserDevicePoliciesGetResponse;
        }
        /// <summary>
        /// Request the user level data associated with Device Policy.
        /// The response is either a UserDevicePoliciesGetResponse19sp1 or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserDevicePoliciesGetRequest19sp1Async instead.")]
        public static async Task<UserDevicePoliciesGetResponse19sp1> UserDevicePoliciesGetRequest19sp1(this OcipClient client, UserDevicePoliciesGetRequest19sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserDevicePoliciesGetResponse19sp1;
        }

        /// <summary>
        /// Request the user level data associated with Device Policy.
        /// The response is either a UserDevicePoliciesGetResponse19sp1 or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<UserDevicePoliciesGetResponse19sp1> UserDevicePoliciesGetRequest19sp1Async(this OcipClient client, UserDevicePoliciesGetRequest19sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserDevicePoliciesGetResponse19sp1;
        }
        /// <summary>
        /// Request the user level data associated with Device Policy.
        /// The response is either a UserDevicePoliciesGetResponse20 or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserDevicePoliciesGetRequest20Async instead.")]
        public static async Task<UserDevicePoliciesGetResponse20> UserDevicePoliciesGetRequest20(this OcipClient client, UserDevicePoliciesGetRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserDevicePoliciesGetResponse20;
        }

        /// <summary>
        /// Request the user level data associated with Device Policy.
        /// The response is either a UserDevicePoliciesGetResponse20 or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<UserDevicePoliciesGetResponse20> UserDevicePoliciesGetRequest20Async(this OcipClient client, UserDevicePoliciesGetRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserDevicePoliciesGetResponse20;
        }
        /// <summary>
        /// Request the user level data associated with Directed Call Pickup With Barge In.
        /// The response is either a UserDirectedCallPickupWithBargeInGetResponse or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserDirectedCallPickupWithBargeInGetRequestAsync instead.")]
        public static async Task<UserDirectedCallPickupWithBargeInGetResponse> UserDirectedCallPickupWithBargeInGetRequest(this OcipClient client, UserDirectedCallPickupWithBargeInGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserDirectedCallPickupWithBargeInGetResponse;
        }

        /// <summary>
        /// Request the user level data associated with Directed Call Pickup With Barge In.
        /// The response is either a UserDirectedCallPickupWithBargeInGetResponse or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<UserDirectedCallPickupWithBargeInGetResponse> UserDirectedCallPickupWithBargeInGetRequestAsync(this OcipClient client, UserDirectedCallPickupWithBargeInGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserDirectedCallPickupWithBargeInGetResponse;
        }
        /// <summary>
        /// Request user's call logs. It is possible to get a subset of the total list of calls
        /// by specifying a starting offset and the number of calls to get.
        /// If the callLogType is not specified, all types of calls are returned.
        /// The response is either a UserEnhancedCallLogsGetListResponse or an ErrorResponse.
        /// Replaced By: UserEnhancedCallLogsGetListRequest14sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use UserEnhancedCallLogsGetListRequestAsync instead.")]
        public static async Task<UserEnhancedCallLogsGetListResponse> UserEnhancedCallLogsGetListRequest(this OcipClient client, UserEnhancedCallLogsGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserEnhancedCallLogsGetListResponse;
        }

        /// <summary>
        /// Request user's call logs. It is possible to get a subset of the total list of calls
        /// by specifying a starting offset and the number of calls to get.
        /// If the callLogType is not specified, all types of calls are returned.
        /// The response is either a UserEnhancedCallLogsGetListResponse or an ErrorResponse.
        /// Replaced By: UserEnhancedCallLogsGetListRequest14sp4
        /// </summary>
        public static async Task<UserEnhancedCallLogsGetListResponse> UserEnhancedCallLogsGetListRequestAsync(this OcipClient client, UserEnhancedCallLogsGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserEnhancedCallLogsGetListResponse;
        }
        /// <summary>
        /// Request user's call logs. It is possible to get a subset of the total list of calls
        /// by specifying a starting offset and the number of calls to get.
        /// If the callLogType is not specified, all types of calls are returned.
        /// The response is either a UserEnhancedCallLogsGetListResponse14sp4 or an ErrorResponse.
        /// Replaced by:
        /// UserEnhancedCallLogsGetListRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use UserEnhancedCallLogsGetListRequest14sp4Async instead.")]
        public static async Task<UserEnhancedCallLogsGetListResponse14sp4> UserEnhancedCallLogsGetListRequest14sp4(this OcipClient client, UserEnhancedCallLogsGetListRequest14sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserEnhancedCallLogsGetListResponse14sp4;
        }

        /// <summary>
        /// Request user's call logs. It is possible to get a subset of the total list of calls
        /// by specifying a starting offset and the number of calls to get.
        /// If the callLogType is not specified, all types of calls are returned.
        /// The response is either a UserEnhancedCallLogsGetListResponse14sp4 or an ErrorResponse.
        /// Replaced by:
        /// UserEnhancedCallLogsGetListRequest16
        /// </summary>
        public static async Task<UserEnhancedCallLogsGetListResponse14sp4> UserEnhancedCallLogsGetListRequest14sp4Async(this OcipClient client, UserEnhancedCallLogsGetListRequest14sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserEnhancedCallLogsGetListResponse14sp4;
        }
        /// <summary>
        /// Request user's call logs.
        /// If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.
        /// It is possible to restrict the number of rows returned using responsePagingControl.
        /// The response is either a UserEnhancedCallLogsGetListResponse16 or an ErrorResponse.
        /// 
        /// Replaced by UserEnhancedCallLogsGetListRequest17sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use UserEnhancedCallLogsGetListRequest16Async instead.")]
        public static async Task<UserEnhancedCallLogsGetListResponse16> UserEnhancedCallLogsGetListRequest16(this OcipClient client, UserEnhancedCallLogsGetListRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserEnhancedCallLogsGetListResponse16;
        }

        /// <summary>
        /// Request user's call logs.
        /// If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.
        /// It is possible to restrict the number of rows returned using responsePagingControl.
        /// The response is either a UserEnhancedCallLogsGetListResponse16 or an ErrorResponse.
        /// 
        /// Replaced by UserEnhancedCallLogsGetListRequest17sp4
        /// </summary>
        public static async Task<UserEnhancedCallLogsGetListResponse16> UserEnhancedCallLogsGetListRequest16Async(this OcipClient client, UserEnhancedCallLogsGetListRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserEnhancedCallLogsGetListResponse16;
        }
        /// <summary>
        /// Request user's call logs.
        /// If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.
        /// The filters "dateTimeRange", "numberFilter", "redirectedNumberFilter", accountAuthorizationCodeFilter"
        /// and ""subscriberType" are ignored if call logs are stored in CDS. When "ReceivedOrMissed" is specified
        /// as "callLogType" and call logs are stored in CDS, all call logs including placed will be returned.
        /// It is possible to restrict the number of rows returned using responsePagingControl. If responsePagingControl
        /// is not specified, the value of Enhanced Call Logs system parameter maxNonPagedResponseSize will control
        /// the maximum number of call logs can be returned.
        /// The response is either a UserEnhancedCallLogsGetListResponse17sp4 or an ErrorResponse.
        /// Replaced by UserEnhancedCallLogsGetListRequest17sp4V2.
        /// Originally deprecated in release 20.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserEnhancedCallLogsGetListRequest17sp4Async instead.")]
        public static async Task<UserEnhancedCallLogsGetListResponse17sp4> UserEnhancedCallLogsGetListRequest17sp4(this OcipClient client, UserEnhancedCallLogsGetListRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserEnhancedCallLogsGetListResponse17sp4;
        }

        /// <summary>
        /// Request user's call logs.
        /// If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.
        /// The filters "dateTimeRange", "numberFilter", "redirectedNumberFilter", accountAuthorizationCodeFilter"
        /// and ""subscriberType" are ignored if call logs are stored in CDS. When "ReceivedOrMissed" is specified
        /// as "callLogType" and call logs are stored in CDS, all call logs including placed will be returned.
        /// It is possible to restrict the number of rows returned using responsePagingControl. If responsePagingControl
        /// is not specified, the value of Enhanced Call Logs system parameter maxNonPagedResponseSize will control
        /// the maximum number of call logs can be returned.
        /// The response is either a UserEnhancedCallLogsGetListResponse17sp4 or an ErrorResponse.
        /// Replaced by UserEnhancedCallLogsGetListRequest17sp4V2.
        /// Originally deprecated in release 20.
        /// </summary>
        public static async Task<UserEnhancedCallLogsGetListResponse17sp4> UserEnhancedCallLogsGetListRequest17sp4Async(this OcipClient client, UserEnhancedCallLogsGetListRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserEnhancedCallLogsGetListResponse17sp4;
        }
        /// <summary>
        /// Request user's call logs.
        /// If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.
        /// The filters "dateTimeRange", "numberFilter", "redirectedNumberFilter", "accountAuthorizationCodeFilter"
        /// "callAuthorizationCodeFilter" and "subscriberType" are ignored if call logs are stored in CDS. When
        /// "ReceivedOrMissed" is specified as "callLogType" and call logs are stored in CDS, all call logs including
        /// placed will be returned.
        /// It is possible to restrict the number of rows returned using responsePagingControl. If responsePagingControl
        /// is not specified, the value of Enhanced Call Logs system parameter maxNonPagedResponseSize will control
        /// the maximum number of call logs can be returned.
        /// The response is either a UserEnhancedCallLogsGetListResponse17sp4V2 or an ErrorResponse.
        /// The following elements are only used in AS data mode and not returned in XS data mode:
        /// callAuthorizationCodeFilter
        /// </summary>
        [Obsolete("This method is deprecated. Use UserEnhancedCallLogsGetListRequest17sp4V2Async instead.")]
        public static async Task<UserEnhancedCallLogsGetListResponse17sp4V2> UserEnhancedCallLogsGetListRequest17sp4V2(this OcipClient client, UserEnhancedCallLogsGetListRequest17sp4V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserEnhancedCallLogsGetListResponse17sp4V2;
        }

        /// <summary>
        /// Request user's call logs.
        /// If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.
        /// The filters "dateTimeRange", "numberFilter", "redirectedNumberFilter", "accountAuthorizationCodeFilter"
        /// "callAuthorizationCodeFilter" and "subscriberType" are ignored if call logs are stored in CDS. When
        /// "ReceivedOrMissed" is specified as "callLogType" and call logs are stored in CDS, all call logs including
        /// placed will be returned.
        /// It is possible to restrict the number of rows returned using responsePagingControl. If responsePagingControl
        /// is not specified, the value of Enhanced Call Logs system parameter maxNonPagedResponseSize will control
        /// the maximum number of call logs can be returned.
        /// The response is either a UserEnhancedCallLogsGetListResponse17sp4V2 or an ErrorResponse.
        /// The following elements are only used in AS data mode and not returned in XS data mode:
        /// callAuthorizationCodeFilter
        /// </summary>
        public static async Task<UserEnhancedCallLogsGetListResponse17sp4V2> UserEnhancedCallLogsGetListRequest17sp4V2Async(this OcipClient client, UserEnhancedCallLogsGetListRequest17sp4V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserEnhancedCallLogsGetListResponse17sp4V2;
        }
        /// <summary>
        /// Request user's call logs.
        /// If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.
        /// The filters "dateTimeRange", "numberFilter", "redirectedNumberFilter", "accountAuthorizationCodeFilter"
        /// "callAuthorizationCodeFilter" and "subscriberType" are ignored if call logs are stored in CDS. When
        /// "ReceivedOrMissed" is specified as "callLogType" and call logs are stored in CDS, all call logs including
        /// placed will be returned.
        /// It is possible to restrict the number of rows returned using responsePagingControl. If responsePagingControl
        /// is not specified, the value of Enhanced Call Logs system parameter maxNonPagedResponseSize will control
        /// the maximum number of call logs can be returned.
        /// The response is either a UserEnhancedCallLogsGetListResponse20 or an ErrorResponse.
        /// The following elements are only used in AS data mode and not returned in XS data mode:
        /// callAuthorizationCodeFilter
        /// </summary>
        [Obsolete("This method is deprecated. Use UserEnhancedCallLogsGetListRequest20Async instead.")]
        public static async Task<UserEnhancedCallLogsGetListResponse20> UserEnhancedCallLogsGetListRequest20(this OcipClient client, UserEnhancedCallLogsGetListRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserEnhancedCallLogsGetListResponse20;
        }

        /// <summary>
        /// Request user's call logs.
        /// If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.
        /// The filters "dateTimeRange", "numberFilter", "redirectedNumberFilter", "accountAuthorizationCodeFilter"
        /// "callAuthorizationCodeFilter" and "subscriberType" are ignored if call logs are stored in CDS. When
        /// "ReceivedOrMissed" is specified as "callLogType" and call logs are stored in CDS, all call logs including
        /// placed will be returned.
        /// It is possible to restrict the number of rows returned using responsePagingControl. If responsePagingControl
        /// is not specified, the value of Enhanced Call Logs system parameter maxNonPagedResponseSize will control
        /// the maximum number of call logs can be returned.
        /// The response is either a UserEnhancedCallLogsGetListResponse20 or an ErrorResponse.
        /// The following elements are only used in AS data mode and not returned in XS data mode:
        /// callAuthorizationCodeFilter
        /// </summary>
        public static async Task<UserEnhancedCallLogsGetListResponse20> UserEnhancedCallLogsGetListRequest20Async(this OcipClient client, UserEnhancedCallLogsGetListRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserEnhancedCallLogsGetListResponse20;
        }
        /// <summary>
        /// Request user's call logs.
        /// If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.
        /// The filters "dateTimeRange", "numberFilter", "redirectedNumberFilter", "accountAuthorizationCodeFilter"
        /// "callAuthorizationCodeFilter" and "subscriberType" are ignored if call logs are stored in CDS. When
        /// "ReceivedOrMissed" is specified as "callLogType" and call logs are stored in CDS, all call logs including
        /// placed will be returned.
        /// It is possible to restrict the number of rows returned using responsePagingControl. If responsePagingControl
        /// is not specified, the value of Enhanced Call Logs system parameter maxNonPagedResponseSize will control
        /// the maximum number of call logs can be returned.
        /// The response is either a UserEnhancedCallLogsGetListResponse20sp1 or an ErrorResponse.
        /// The following elements are only used in AS data mode:
        /// callAuthorizationCodeFilter
        /// callSecurityClassification
        /// </summary>
        [Obsolete("This method is deprecated. Use UserEnhancedCallLogsGetListRequest20sp1Async instead.")]
        public static async Task<UserEnhancedCallLogsGetListResponse20sp1> UserEnhancedCallLogsGetListRequest20sp1(this OcipClient client, UserEnhancedCallLogsGetListRequest20sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserEnhancedCallLogsGetListResponse20sp1;
        }

        /// <summary>
        /// Request user's call logs.
        /// If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.
        /// The filters "dateTimeRange", "numberFilter", "redirectedNumberFilter", "accountAuthorizationCodeFilter"
        /// "callAuthorizationCodeFilter" and "subscriberType" are ignored if call logs are stored in CDS. When
        /// "ReceivedOrMissed" is specified as "callLogType" and call logs are stored in CDS, all call logs including
        /// placed will be returned.
        /// It is possible to restrict the number of rows returned using responsePagingControl. If responsePagingControl
        /// is not specified, the value of Enhanced Call Logs system parameter maxNonPagedResponseSize will control
        /// the maximum number of call logs can be returned.
        /// The response is either a UserEnhancedCallLogsGetListResponse20sp1 or an ErrorResponse.
        /// The following elements are only used in AS data mode:
        /// callAuthorizationCodeFilter
        /// callSecurityClassification
        /// </summary>
        public static async Task<UserEnhancedCallLogsGetListResponse20sp1> UserEnhancedCallLogsGetListRequest20sp1Async(this OcipClient client, UserEnhancedCallLogsGetListRequest20sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserEnhancedCallLogsGetListResponse20sp1;
        }
        /// <summary>
        /// Request user's call logs.
        /// If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.
        /// The filters "dateTimeRange", "numberFilter", "redirectedNumberFilter", "accountAuthorizationCodeFilter"
        /// "callAuthorizationCodeFilter" and "subscriberType" are ignored if call logs are stored in CDS. When
        /// "ReceivedOrMissed" is specified as "callLogType" and call logs are stored in CDS, all call logs including
        /// placed will be returned.
        /// It is possible to restrict the number of rows returned using responsePagingControl. If responsePagingControl
        /// is not specified, the value of Enhanced Call Logs system parameter maxNonPagedResponseSize will control
        /// the maximum number of call logs can be returned.
        /// The response is either a UserEnhancedCallLogsGetListResponse21 or an ErrorResponse.
        /// The following elements are only used in AS data mode and not returned in XS data mode:
        /// callAuthorizationCodeFilter
        /// 
        /// Replaced by: UserEnhancedCallLogsGetListRequest21Sp1 in AS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use UserEnhancedCallLogsGetListRequest21Async instead.")]
        public static async Task<UserEnhancedCallLogsGetListResponse21> UserEnhancedCallLogsGetListRequest21(this OcipClient client, UserEnhancedCallLogsGetListRequest21 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserEnhancedCallLogsGetListResponse21;
        }

        /// <summary>
        /// Request user's call logs.
        /// If the callLogType is not specified, all types of calls logs (placed, received, missed) are returned.
        /// The filters "dateTimeRange", "numberFilter", "redirectedNumberFilter", "accountAuthorizationCodeFilter"
        /// "callAuthorizationCodeFilter" and "subscriberType" are ignored if call logs are stored in CDS. When
        /// "ReceivedOrMissed" is specified as "callLogType" and call logs are stored in CDS, all call logs including
        /// placed will be returned.
        /// It is possible to restrict the number of rows returned using responsePagingControl. If responsePagingControl
        /// is not specified, the value of Enhanced Call Logs system parameter maxNonPagedResponseSize will control
        /// the maximum number of call logs can be returned.
        /// The response is either a UserEnhancedCallLogsGetListResponse21 or an ErrorResponse.
        /// The following elements are only used in AS data mode and not returned in XS data mode:
        /// callAuthorizationCodeFilter
        /// 
        /// Replaced by: UserEnhancedCallLogsGetListRequest21Sp1 in AS data mode
        /// </summary>
        public static async Task<UserEnhancedCallLogsGetListResponse21> UserEnhancedCallLogsGetListRequest21Async(this OcipClient client, UserEnhancedCallLogsGetListRequest21 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserEnhancedCallLogsGetListResponse21;
        }
        /// <summary>
        /// Get a filtering criteria for an executive user.
        /// Both executive and the executive assistant can run this command.
        /// The response is either UserExecutiveGetFilteringSelectiveCriteriaResponse or ErrorResponse.
        /// Replaced by: UserExecutiveGetFilteringSelectiveCriteriaRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use UserExecutiveGetFilteringSelectiveCriteriaRequestAsync instead.")]
        public static async Task<UserExecutiveGetFilteringSelectiveCriteriaResponse> UserExecutiveGetFilteringSelectiveCriteriaRequest(this OcipClient client, UserExecutiveGetFilteringSelectiveCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserExecutiveGetFilteringSelectiveCriteriaResponse;
        }

        /// <summary>
        /// Get a filtering criteria for an executive user.
        /// Both executive and the executive assistant can run this command.
        /// The response is either UserExecutiveGetFilteringSelectiveCriteriaResponse or ErrorResponse.
        /// Replaced by: UserExecutiveGetFilteringSelectiveCriteriaRequest21
        /// </summary>
        public static async Task<UserExecutiveGetFilteringSelectiveCriteriaResponse> UserExecutiveGetFilteringSelectiveCriteriaRequestAsync(this OcipClient client, UserExecutiveGetFilteringSelectiveCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserExecutiveGetFilteringSelectiveCriteriaResponse;
        }
        /// <summary>
        /// Request the user level data associated with Fax Messaging.
        /// The response is either a UserFaxMessagingGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserFaxMessagingGetRequestAsync instead.")]
        public static async Task<UserFaxMessagingGetResponse> UserFaxMessagingGetRequest(this OcipClient client, UserFaxMessagingGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserFaxMessagingGetResponse;
        }

        /// <summary>
        /// Request the user level data associated with Fax Messaging.
        /// The response is either a UserFaxMessagingGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserFaxMessagingGetResponse> UserFaxMessagingGetRequestAsync(this OcipClient client, UserFaxMessagingGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserFaxMessagingGetResponse;
        }
        /// <summary>
        /// Request the user level data associated with Fax Messaging.
        /// The response is either a UserFaxMessagingGetResponse17 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserFaxMessagingGetRequest17Async instead.")]
        public static async Task<UserFaxMessagingGetResponse17> UserFaxMessagingGetRequest17(this OcipClient client, UserFaxMessagingGetRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserFaxMessagingGetResponse17;
        }

        /// <summary>
        /// Request the user level data associated with Fax Messaging.
        /// The response is either a UserFaxMessagingGetResponse17 or an ErrorResponse.
        /// </summary>
        public static async Task<UserFaxMessagingGetResponse17> UserFaxMessagingGetRequest17Async(this OcipClient client, UserFaxMessagingGetRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserFaxMessagingGetResponse17;
        }
        /// <summary>
        /// Get the list of feature access codes for a user.
        /// The response is either a UserFeatureAccessCodeGetListResponse20 or an ErrorResponse.
        /// In release 20 the "Call Recording" FAC name is changed to
        /// "Call Recording Start".
        /// Replaced by: UserFeatureAccessCodeGetListRequest21 in AS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use UserFeatureAccessCodeGetListRequest20Async instead.")]
        public static async Task<UserFeatureAccessCodeGetListResponse20> UserFeatureAccessCodeGetListRequest20(this OcipClient client, UserFeatureAccessCodeGetListRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserFeatureAccessCodeGetListResponse20;
        }

        /// <summary>
        /// Get the list of feature access codes for a user.
        /// The response is either a UserFeatureAccessCodeGetListResponse20 or an ErrorResponse.
        /// In release 20 the "Call Recording" FAC name is changed to
        /// "Call Recording Start".
        /// Replaced by: UserFeatureAccessCodeGetListRequest21 in AS data mode
        /// </summary>
        public static async Task<UserFeatureAccessCodeGetListResponse20> UserFeatureAccessCodeGetListRequest20Async(this OcipClient client, UserFeatureAccessCodeGetListRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserFeatureAccessCodeGetListResponse20;
        }
        /// <summary>
        /// Request the user level data associated with flexible seating guest.
        /// The response is either a UserFlexibleSeatingGuestGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: UserFlexibleSeatingGuestGetRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserFlexibleSeatingGuestGetRequestAsync instead.")]
        public static async Task<UserFlexibleSeatingGuestGetResponse> UserFlexibleSeatingGuestGetRequest(this OcipClient client, UserFlexibleSeatingGuestGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserFlexibleSeatingGuestGetResponse;
        }

        /// <summary>
        /// Request the user level data associated with flexible seating guest.
        /// The response is either a UserFlexibleSeatingGuestGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: UserFlexibleSeatingGuestGetRequest22.
        /// </summary>
        public static async Task<UserFlexibleSeatingGuestGetResponse> UserFlexibleSeatingGuestGetRequestAsync(this OcipClient client, UserFlexibleSeatingGuestGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserFlexibleSeatingGuestGetResponse;
        }
        /// <summary>
        /// Modify the user level data associated with flexible seating guest.
        /// accessDeviceEndpoint can only be configured by group or a higher level administrator.
        /// The request fails if isActive is set to false and the guest is associated to a host.
        /// The request fails when enableAssociationLimit, associationLimitHours, unlockPhonePINCode are changed when the guest is associated to a host.
        /// The request fails when accessDeviceEndpoint is set in the request when the guest is associated to a host.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: UserFlexibleSeatingGuestModifyRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserFlexibleSeatingGuestModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> UserFlexibleSeatingGuestModifyRequest(this OcipClient client, UserFlexibleSeatingGuestModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the user level data associated with flexible seating guest.
        /// accessDeviceEndpoint can only be configured by group or a higher level administrator.
        /// The request fails if isActive is set to false and the guest is associated to a host.
        /// The request fails when enableAssociationLimit, associationLimitHours, unlockPhonePINCode are changed when the guest is associated to a host.
        /// The request fails when accessDeviceEndpoint is set in the request when the guest is associated to a host.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// 
        /// Replaced by: UserFlexibleSeatingGuestModifyRequest22.
        /// </summary>
        public static async Task<SuccessResponse> UserFlexibleSeatingGuestModifyRequestAsync(this OcipClient client, UserFlexibleSeatingGuestModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// UserGetLoginInfoRequest is used to access login information for a user
        /// either by a userId or dn.
        /// The phone number may be any DN associated with a user.
        /// 
        /// The response is a UserGetLoginInfoResponse or an ErrorResponse
        /// 
        /// Replaced by UserGetLoginInfoRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetLoginInfoRequestAsync instead.")]
        public static async Task<UserGetLoginInfoResponse> UserGetLoginInfoRequest(this OcipClient client, UserGetLoginInfoRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetLoginInfoResponse;
        }

        /// <summary>
        /// UserGetLoginInfoRequest is used to access login information for a user
        /// either by a userId or dn.
        /// The phone number may be any DN associated with a user.
        /// 
        /// The response is a UserGetLoginInfoResponse or an ErrorResponse
        /// 
        /// Replaced by UserGetLoginInfoRequest22.
        /// </summary>
        public static async Task<UserGetLoginInfoResponse> UserGetLoginInfoRequestAsync(this OcipClient client, UserGetLoginInfoRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetLoginInfoResponse;
        }
        /// <summary>
        /// UserGetLoginInfoRequest21sp1 is used to access login information for a user
        /// either by a userId, dn or lineport.
        /// The phone number may be any DN associated with a user.
        /// The lineport may be any lineport associated with a user.
        /// 
        /// The response is a UserGetLoginInfoResponse21sp1 or an ErrorResponse
        /// 
        /// Replaced by UserGetLoginInfoRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetLoginInfoRequest21sp1Async instead.")]
        public static async Task<UserGetLoginInfoResponse21sp1> UserGetLoginInfoRequest21sp1(this OcipClient client, UserGetLoginInfoRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetLoginInfoResponse21sp1;
        }

        /// <summary>
        /// UserGetLoginInfoRequest21sp1 is used to access login information for a user
        /// either by a userId, dn or lineport.
        /// The phone number may be any DN associated with a user.
        /// The lineport may be any lineport associated with a user.
        /// 
        /// The response is a UserGetLoginInfoResponse21sp1 or an ErrorResponse
        /// 
        /// Replaced by UserGetLoginInfoRequest22V2.
        /// </summary>
        public static async Task<UserGetLoginInfoResponse21sp1> UserGetLoginInfoRequest21sp1Async(this OcipClient client, UserGetLoginInfoRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetLoginInfoResponse21sp1;
        }
        /// <summary>
        /// UserGetLoginInfoRequest22 is used to access login information for a user
        /// either by a userId, dn or lineport.
        /// The phone number may be any DN associated with a user.
        /// The lineport may be any lineport associated with a user.
        /// 
        /// The response is a UserGetLoginInfoResponse22 or an ErrorResponse
        /// Replaced by UserGetLoginInfoRequest22V2.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetLoginInfoRequest22Async instead.")]
        public static async Task<UserGetLoginInfoResponse22> UserGetLoginInfoRequest22(this OcipClient client, UserGetLoginInfoRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetLoginInfoResponse22;
        }

        /// <summary>
        /// UserGetLoginInfoRequest22 is used to access login information for a user
        /// either by a userId, dn or lineport.
        /// The phone number may be any DN associated with a user.
        /// The lineport may be any lineport associated with a user.
        /// 
        /// The response is a UserGetLoginInfoResponse22 or an ErrorResponse
        /// Replaced by UserGetLoginInfoRequest22V2.
        /// </summary>
        public static async Task<UserGetLoginInfoResponse22> UserGetLoginInfoRequest22Async(this OcipClient client, UserGetLoginInfoRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetLoginInfoResponse22;
        }
        /// <summary>
        /// UserGetLoginInfoRequest22V2 is used to access login information for a user
        /// either by a userId, dn or lineport.
        /// The phone number may be any DN associated with a user.
        /// The lineport may be any lineport associated with a user.
        /// 
        /// The response is a UserGetLoginInfoResponse22V2 or an ErrorResponse
        /// 
        /// Replaced by UserGetLoginInfoRequest22V3.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetLoginInfoRequest22V2Async instead.")]
        public static async Task<UserGetLoginInfoResponse22V2> UserGetLoginInfoRequest22V2(this OcipClient client, UserGetLoginInfoRequest22V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetLoginInfoResponse22V2;
        }

        /// <summary>
        /// UserGetLoginInfoRequest22V2 is used to access login information for a user
        /// either by a userId, dn or lineport.
        /// The phone number may be any DN associated with a user.
        /// The lineport may be any lineport associated with a user.
        /// 
        /// The response is a UserGetLoginInfoResponse22V2 or an ErrorResponse
        /// 
        /// Replaced by UserGetLoginInfoRequest22V3.
        /// </summary>
        public static async Task<UserGetLoginInfoResponse22V2> UserGetLoginInfoRequest22V2Async(this OcipClient client, UserGetLoginInfoRequest22V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetLoginInfoResponse22V2;
        }
        /// <summary>
        /// UserGetLoginInfoRequest22V3 is used to access login information for a user
        /// either by a userId, dn or lineport.
        /// The phone number may be any DN associated with a user.
        /// The lineport may be any lineport associated with a user.
        /// 
        /// The response is a UserGetLoginInfoResponse22V3 or an ErrorResponse.
        /// 
        /// The following elements are only used in AS data mode and ignored in XS and Amplify data mode.
        /// loginRole
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetLoginInfoRequest22V3Async instead.")]
        public static async Task<UserGetLoginInfoResponse22V3> UserGetLoginInfoRequest22V3(this OcipClient client, UserGetLoginInfoRequest22V3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetLoginInfoResponse22V3;
        }

        /// <summary>
        /// UserGetLoginInfoRequest22V3 is used to access login information for a user
        /// either by a userId, dn or lineport.
        /// The phone number may be any DN associated with a user.
        /// The lineport may be any lineport associated with a user.
        /// 
        /// The response is a UserGetLoginInfoResponse22V3 or an ErrorResponse.
        /// 
        /// The following elements are only used in AS data mode and ignored in XS and Amplify data mode.
        /// loginRole
        /// </summary>
        public static async Task<UserGetLoginInfoResponse22V3> UserGetLoginInfoRequest22V3Async(this OcipClient client, UserGetLoginInfoRequest22V3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetLoginInfoResponse22V3;
        }
        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse14
        /// or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetRequest14Async instead.")]
        public static async Task<UserGetResponse14> UserGetRequest14(this OcipClient client, UserGetRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetResponse14;
        }

        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse14
        /// or ErrorResponse.
        /// </summary>
        public static async Task<UserGetResponse14> UserGetRequest14Async(this OcipClient client, UserGetRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetResponse14;
        }
        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse14sp4
        /// or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetRequest14sp4Async instead.")]
        public static async Task<UserGetResponse14sp4> UserGetRequest14sp4(this OcipClient client, UserGetRequest14sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetResponse14sp4;
        }

        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse14sp4
        /// or ErrorResponse.
        /// </summary>
        public static async Task<UserGetResponse14sp4> UserGetRequest14sp4Async(this OcipClient client, UserGetRequest14sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetResponse14sp4;
        }
        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse14sp4
        /// or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetRequest14sp9Async instead.")]
        public static async Task<UserGetResponse14sp4> UserGetRequest14sp9(this OcipClient client, UserGetRequest14sp9 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetResponse14sp4;
        }

        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse14sp4
        /// or ErrorResponse.
        /// </summary>
        public static async Task<UserGetResponse14sp4> UserGetRequest14sp9Async(this OcipClient client, UserGetRequest14sp9 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetResponse14sp4;
        }
        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse15sp2 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetRequest15sp2Async instead.")]
        public static async Task<UserGetResponse15sp2> UserGetRequest15sp2(this OcipClient client, UserGetRequest15sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetResponse15sp2;
        }

        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse15sp2 or ErrorResponse.
        /// </summary>
        public static async Task<UserGetResponse15sp2> UserGetRequest15sp2Async(this OcipClient client, UserGetRequest15sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetResponse15sp2;
        }
        /// <summary>
        /// Replaced by: UserGetRequest17sp4
        /// 
        /// Request to get the user information.  The response is either UserGetResponse17 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetRequest17Async instead.")]
        public static async Task<UserGetResponse17> UserGetRequest17(this OcipClient client, UserGetRequest17 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetResponse17;
        }

        /// <summary>
        /// Replaced by: UserGetRequest17sp4
        /// 
        /// Request to get the user information.  The response is either UserGetResponse17 or ErrorResponse.
        /// </summary>
        public static async Task<UserGetResponse17> UserGetRequest17Async(this OcipClient client, UserGetRequest17 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetResponse17;
        }
        /// <summary>
        /// Replaced by: UserGetRequest18
        /// 
        /// Request to get the user information.  The response is either UserGetResponse17sp3 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetRequest17sp3Async instead.")]
        public static async Task<UserGetResponse17sp3> UserGetRequest17sp3(this OcipClient client, UserGetRequest17sp3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetResponse17sp3;
        }

        /// <summary>
        /// Replaced by: UserGetRequest18
        /// 
        /// Request to get the user information.  The response is either UserGetResponse17sp3 or ErrorResponse.
        /// </summary>
        public static async Task<UserGetResponse17sp3> UserGetRequest17sp3Async(this OcipClient client, UserGetRequest17sp3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetResponse17sp3;
        }
        /// <summary>
        /// Replaced by: UserGetRequest18
        /// 
        /// Request to get the user information.  The response is either UserGetResponse17sp4 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetRequest17sp4Async instead.")]
        public static async Task<UserGetResponse17sp4> UserGetRequest17sp4(this OcipClient client, UserGetRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetResponse17sp4;
        }

        /// <summary>
        /// Replaced by: UserGetRequest18
        /// 
        /// Request to get the user information.  The response is either UserGetResponse17sp4 or ErrorResponse.
        /// </summary>
        public static async Task<UserGetResponse17sp4> UserGetRequest17sp4Async(this OcipClient client, UserGetRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetResponse17sp4;
        }
        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse18 or ErrorResponse.
        /// 
        /// Replaced by: UserGetRequest19.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetRequest18Async instead.")]
        public static async Task<UserGetResponse18> UserGetRequest18(this OcipClient client, UserGetRequest18 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetResponse18;
        }

        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse18 or ErrorResponse.
        /// 
        /// Replaced by: UserGetRequest19.
        /// </summary>
        public static async Task<UserGetResponse18> UserGetRequest18Async(this OcipClient client, UserGetRequest18 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetResponse18;
        }
        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse19 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetRequest19Async instead.")]
        public static async Task<UserGetResponse19> UserGetRequest19(this OcipClient client, UserGetRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetResponse19;
        }

        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse19 or ErrorResponse.
        /// </summary>
        public static async Task<UserGetResponse19> UserGetRequest19Async(this OcipClient client, UserGetRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetResponse19;
        }
        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse20 or ErrorResponse.
        /// Replaced by: UserGetRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetRequest20Async instead.")]
        public static async Task<UserGetResponse20> UserGetRequest20(this OcipClient client, UserGetRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetResponse20;
        }

        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse20 or ErrorResponse.
        /// Replaced by: UserGetRequest21
        /// </summary>
        public static async Task<UserGetResponse20> UserGetRequest20Async(this OcipClient client, UserGetRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetResponse20;
        }
        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse21 or ErrorResponse.
        /// 
        /// Replaced by UserGetRequest21sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetRequest21Async instead.")]
        public static async Task<UserGetResponse21> UserGetRequest21(this OcipClient client, UserGetRequest21 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetResponse21;
        }

        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse21 or ErrorResponse.
        /// 
        /// Replaced by UserGetRequest21sp1
        /// </summary>
        public static async Task<UserGetResponse21> UserGetRequest21Async(this OcipClient client, UserGetRequest21 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetResponse21;
        }
        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse21sp1 or ErrorResponse.
        /// 
        /// Replaced by UserGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetRequest21sp1Async instead.")]
        public static async Task<UserGetResponse21sp1> UserGetRequest21sp1(this OcipClient client, UserGetRequest21sp1 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetResponse21sp1;
        }

        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse21sp1 or ErrorResponse.
        /// 
        /// Replaced by UserGetRequest22
        /// </summary>
        public static async Task<UserGetResponse21sp1> UserGetRequest21sp1Async(this OcipClient client, UserGetRequest21sp1 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetResponse21sp1;
        }
        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse21sp1V2 or ErrorResponse.
        /// 
        /// Replaced by UserGetRequest22V3 in AS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetRequest21sp1V2Async instead.")]
        public static async Task<UserGetResponse21sp1V2> UserGetRequest21sp1V2(this OcipClient client, UserGetRequest21sp1V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetResponse21sp1V2;
        }

        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse21sp1V2 or ErrorResponse.
        /// 
        /// Replaced by UserGetRequest22V3 in AS data mode
        /// </summary>
        public static async Task<UserGetResponse21sp1V2> UserGetRequest21sp1V2Async(this OcipClient client, UserGetRequest21sp1V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetResponse21sp1V2;
        }
        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse22 or ErrorResponse.
        /// 
        /// Replaced by UserGetRequest22V2
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetRequest22Async instead.")]
        public static async Task<UserGetResponse22> UserGetRequest22(this OcipClient client, UserGetRequest22 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetResponse22;
        }

        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse22 or ErrorResponse.
        /// 
        /// Replaced by UserGetRequest22V2
        /// </summary>
        public static async Task<UserGetResponse22> UserGetRequest22Async(this OcipClient client, UserGetRequest22 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetResponse22;
        }
        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse22V2 or ErrorResponse.
        /// 
        /// Replaced by UserGetRequest22V3.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetRequest22V2Async instead.")]
        public static async Task<UserGetResponse22V2> UserGetRequest22V2(this OcipClient client, UserGetRequest22V2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetResponse22V2;
        }

        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse22V2 or ErrorResponse.
        /// 
        /// Replaced by UserGetRequest22V3.
        /// </summary>
        public static async Task<UserGetResponse22V2> UserGetRequest22V2Async(this OcipClient client, UserGetRequest22V2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetResponse22V2;
        }
        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse22V3 or ErrorResponse.
        /// 
        /// Replaced by: UserGetRequest22V4
        /// </summary>
        [Obsolete("This method is deprecated. Use UserGetRequest22V3Async instead.")]
        public static async Task<UserGetResponse22V3> UserGetRequest22V3(this OcipClient client, UserGetRequest22V3 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserGetResponse22V3;
        }

        /// <summary>
        /// Request to get the user information.  The response is either UserGetResponse22V3 or ErrorResponse.
        /// 
        /// Replaced by: UserGetRequest22V4
        /// </summary>
        public static async Task<UserGetResponse22V3> UserGetRequest22V3Async(this OcipClient client, UserGetRequest22V3 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserGetResponse22V3;
        }
        /// <summary>
        /// Add a holiday schedule to a user.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserHolidayScheduleAddRequestAsync instead.")]
        public static async Task<SuccessResponse> UserHolidayScheduleAddRequest(this OcipClient client, UserHolidayScheduleAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a holiday schedule to a user.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserHolidayScheduleAddRequestAsync(this OcipClient client, UserHolidayScheduleAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Delete a holiday schedule from a user.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserHolidayScheduleDeleteRequestAsync instead.")]
        public static async Task<SuccessResponse> UserHolidayScheduleDeleteRequest(this OcipClient client, UserHolidayScheduleDeleteRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Delete a holiday schedule from a user.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserHolidayScheduleDeleteRequestAsync(this OcipClient client, UserHolidayScheduleDeleteRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a holiday schedule list for a user.
        /// The response is either a UserHolidayScheduleGetListResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserHolidayScheduleGetListRequestAsync instead.")]
        public static async Task<UserHolidayScheduleGetListResponse> UserHolidayScheduleGetListRequest(this OcipClient client, UserHolidayScheduleGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserHolidayScheduleGetListResponse;
        }

        /// <summary>
        /// Get a holiday schedule list for a user.
        /// The response is either a UserHolidayScheduleGetListResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserHolidayScheduleGetListResponse> UserHolidayScheduleGetListRequestAsync(this OcipClient client, UserHolidayScheduleGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserHolidayScheduleGetListResponse;
        }
        /// <summary>
        /// Get a holiday schedule a user.
        /// The response is either a UserHolidayScheduleGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserHolidayScheduleGetRequestAsync instead.")]
        public static async Task<UserHolidayScheduleGetResponse> UserHolidayScheduleGetRequest(this OcipClient client, UserHolidayScheduleGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserHolidayScheduleGetResponse;
        }

        /// <summary>
        /// Get a holiday schedule a user.
        /// The response is either a UserHolidayScheduleGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserHolidayScheduleGetResponse> UserHolidayScheduleGetRequestAsync(this OcipClient client, UserHolidayScheduleGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserHolidayScheduleGetResponse;
        }
        /// <summary>
        /// Modify a holiday schedule for a user.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserHolidayScheduleModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> UserHolidayScheduleModifyRequest(this OcipClient client, UserHolidayScheduleModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a holiday schedule for a user.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserHolidayScheduleModifyRequestAsync(this OcipClient client, UserHolidayScheduleModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request the user level data associated with Hoteling Guest.
        /// The response is either a UserHotelingGuestGetResponse14 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserHotelingGuestGetRequest14Async instead.")]
        public static async Task<UserHotelingGuestGetResponse14> UserHotelingGuestGetRequest14(this OcipClient client, UserHotelingGuestGetRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserHotelingGuestGetResponse14;
        }

        /// <summary>
        /// Request the user level data associated with Hoteling Guest.
        /// The response is either a UserHotelingGuestGetResponse14 or an ErrorResponse.
        /// </summary>
        public static async Task<UserHotelingGuestGetResponse14> UserHotelingGuestGetRequest14Async(this OcipClient client, UserHotelingGuestGetRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserHotelingGuestGetResponse14;
        }
        /// <summary>
        /// Request the user level data associated with Hoteling Guest.
        /// The response is either a UserHotelingGuestGetResponse14 or an ErrorResponse.
        /// Replaced by: UserHotelingGuestGetRequest14sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use UserHotelingGuestGetRequest14sp2Async instead.")]
        public static async Task<UserHotelingGuestGetResponse14> UserHotelingGuestGetRequest14sp2(this OcipClient client, UserHotelingGuestGetRequest14sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserHotelingGuestGetResponse14;
        }

        /// <summary>
        /// Request the user level data associated with Hoteling Guest.
        /// The response is either a UserHotelingGuestGetResponse14 or an ErrorResponse.
        /// Replaced by: UserHotelingGuestGetRequest14sp4
        /// </summary>
        public static async Task<UserHotelingGuestGetResponse14> UserHotelingGuestGetRequest14sp2Async(this OcipClient client, UserHotelingGuestGetRequest14sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserHotelingGuestGetResponse14;
        }
        /// <summary>
        /// Request the user level data associated with Hoteling Host.
        /// The response is either a UserHotelingHostGetResponse14 or an ErrorResponse.
        /// Replaced by: UserHotelingHostGetRequest14sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use UserHotelingHostGetRequest14Async instead.")]
        public static async Task<UserHotelingHostGetResponse14> UserHotelingHostGetRequest14(this OcipClient client, UserHotelingHostGetRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserHotelingHostGetResponse14;
        }

        /// <summary>
        /// Request the user level data associated with Hoteling Host.
        /// The response is either a UserHotelingHostGetResponse14 or an ErrorResponse.
        /// Replaced by: UserHotelingHostGetRequest14sp4
        /// </summary>
        public static async Task<UserHotelingHostGetResponse14> UserHotelingHostGetRequest14Async(this OcipClient client, UserHotelingHostGetRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserHotelingHostGetResponse14;
        }
        /// <summary>
        /// Request the user level data associated with Hoteling Host.
        /// The response is either a UserHotelingHostGetResponse14sp4 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserHotelingHostGetRequest14sp4Async instead.")]
        public static async Task<UserHotelingHostGetResponse14sp4> UserHotelingHostGetRequest14sp4(this OcipClient client, UserHotelingHostGetRequest14sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserHotelingHostGetResponse14sp4;
        }

        /// <summary>
        /// Request the user level data associated with Hoteling Host.
        /// The response is either a UserHotelingHostGetResponse14sp4 or an ErrorResponse.
        /// </summary>
        public static async Task<UserHotelingHostGetResponse14sp4> UserHotelingHostGetRequest14sp4Async(this OcipClient client, UserHotelingHostGetRequest14sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserHotelingHostGetResponse14sp4;
        }
        /// <summary>
        /// Get the user's intercept user service settings.
        /// The response is either a UserInterceptUserGetResponse or an ErrorResponse.
        /// Replaced By: UserInterceptUserGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use UserInterceptUserGetRequestAsync instead.")]
        public static async Task<UserInterceptUserGetResponse> UserInterceptUserGetRequest(this OcipClient client, UserInterceptUserGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserInterceptUserGetResponse;
        }

        /// <summary>
        /// Get the user's intercept user service settings.
        /// The response is either a UserInterceptUserGetResponse or an ErrorResponse.
        /// Replaced By: UserInterceptUserGetRequest16
        /// </summary>
        public static async Task<UserInterceptUserGetResponse> UserInterceptUserGetRequestAsync(this OcipClient client, UserInterceptUserGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserInterceptUserGetResponse;
        }
        /// <summary>
        /// Get the user's intercept user service settings.
        /// The response is either a UserInterceptUserGetResponse16 or an ErrorResponse.
        /// Replaced By: UserInterceptUserGetRequest16sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use UserInterceptUserGetRequest16Async instead.")]
        public static async Task<UserInterceptUserGetResponse16> UserInterceptUserGetRequest16(this OcipClient client, UserInterceptUserGetRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserInterceptUserGetResponse16;
        }

        /// <summary>
        /// Get the user's intercept user service settings.
        /// The response is either a UserInterceptUserGetResponse16 or an ErrorResponse.
        /// Replaced By: UserInterceptUserGetRequest16sp1
        /// </summary>
        public static async Task<UserInterceptUserGetResponse16> UserInterceptUserGetRequest16Async(this OcipClient client, UserInterceptUserGetRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserInterceptUserGetResponse16;
        }
        /// <summary>
        /// Modify the user's intercept user service settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: UserInterceptUserModifyRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use UserInterceptUserModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> UserInterceptUserModifyRequest(this OcipClient client, UserInterceptUserModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the user's intercept user service settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: UserInterceptUserModifyRequest16
        /// </summary>
        public static async Task<SuccessResponse> UserInterceptUserModifyRequestAsync(this OcipClient client, UserInterceptUserModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a Meet-Me conference.
        /// The response is either UserMeetMeConferencingAddConferenceResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserMeetMeConferencingAddConferenceRequestAsync instead.")]
        public static async Task<UserMeetMeConferencingAddConferenceResponse> UserMeetMeConferencingAddConferenceRequest(this OcipClient client, UserMeetMeConferencingAddConferenceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserMeetMeConferencingAddConferenceResponse;
        }

        /// <summary>
        /// Add a Meet-Me conference.
        /// The response is either UserMeetMeConferencingAddConferenceResponse or ErrorResponse.
        /// </summary>
        public static async Task<UserMeetMeConferencingAddConferenceResponse> UserMeetMeConferencingAddConferenceRequestAsync(this OcipClient client, UserMeetMeConferencingAddConferenceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserMeetMeConferencingAddConferenceResponse;
        }
        /// <summary>
        /// Add a Meet-Me conference.
        /// The response is either UserMeetMeConferencingAddConferenceResponse19 or ErrorResponse.
        /// The startTime element is adjusted to the first occurrence of the recurrent schedule that comes at or after the startTime.
        /// The startTime, endTime and recurrence information for a conferenceSchedule element will be adjusted to the user Host time zone.
        /// 
        /// Replaced by: UserMeetMeConferencingAddConferenceRequest23
        /// </summary>
        [Obsolete("This method is deprecated. Use UserMeetMeConferencingAddConferenceRequest19Async instead.")]
        public static async Task<UserMeetMeConferencingAddConferenceResponse19> UserMeetMeConferencingAddConferenceRequest19(this OcipClient client, UserMeetMeConferencingAddConferenceRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserMeetMeConferencingAddConferenceResponse19;
        }

        /// <summary>
        /// Add a Meet-Me conference.
        /// The response is either UserMeetMeConferencingAddConferenceResponse19 or ErrorResponse.
        /// The startTime element is adjusted to the first occurrence of the recurrent schedule that comes at or after the startTime.
        /// The startTime, endTime and recurrence information for a conferenceSchedule element will be adjusted to the user Host time zone.
        /// 
        /// Replaced by: UserMeetMeConferencingAddConferenceRequest23
        /// </summary>
        public static async Task<UserMeetMeConferencingAddConferenceResponse19> UserMeetMeConferencingAddConferenceRequest19Async(this OcipClient client, UserMeetMeConferencingAddConferenceRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserMeetMeConferencingAddConferenceResponse19;
        }
        /// <summary>
        /// Get the information of a conference custom greeting.
        /// The response is either UserMeetMeConferencingGetConferenceGreetingResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserMeetMeConferencingGetConferenceGreetingRequestAsync instead.")]
        public static async Task<UserMeetMeConferencingGetConferenceGreetingResponse> UserMeetMeConferencingGetConferenceGreetingRequest(this OcipClient client, UserMeetMeConferencingGetConferenceGreetingRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserMeetMeConferencingGetConferenceGreetingResponse;
        }

        /// <summary>
        /// Get the information of a conference custom greeting.
        /// The response is either UserMeetMeConferencingGetConferenceGreetingResponse or ErrorResponse.
        /// </summary>
        public static async Task<UserMeetMeConferencingGetConferenceGreetingResponse> UserMeetMeConferencingGetConferenceGreetingRequestAsync(this OcipClient client, UserMeetMeConferencingGetConferenceGreetingRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserMeetMeConferencingGetConferenceGreetingResponse;
        }
        /// <summary>
        /// Get the information of a conference owned by the user.
        /// The response is either UserMeetMeConferencingGetConferenceResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserMeetMeConferencingGetConferenceRequestAsync instead.")]
        public static async Task<UserMeetMeConferencingGetConferenceResponse> UserMeetMeConferencingGetConferenceRequest(this OcipClient client, UserMeetMeConferencingGetConferenceRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserMeetMeConferencingGetConferenceResponse;
        }

        /// <summary>
        /// Get the information of a conference owned by the user.
        /// The response is either UserMeetMeConferencingGetConferenceResponse or ErrorResponse.
        /// </summary>
        public static async Task<UserMeetMeConferencingGetConferenceResponse> UserMeetMeConferencingGetConferenceRequestAsync(this OcipClient client, UserMeetMeConferencingGetConferenceRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserMeetMeConferencingGetConferenceResponse;
        }
        /// <summary>
        /// Get the information of a conference owned by the user.
        /// The response is either UserMeetMeConferencingGetConferenceResponse19 or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserMeetMeConferencingGetConferenceRequest19Async instead.")]
        public static async Task<UserMeetMeConferencingGetConferenceResponse19> UserMeetMeConferencingGetConferenceRequest19(this OcipClient client, UserMeetMeConferencingGetConferenceRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserMeetMeConferencingGetConferenceResponse19;
        }

        /// <summary>
        /// Get the information of a conference owned by the user.
        /// The response is either UserMeetMeConferencingGetConferenceResponse19 or ErrorResponse.
        /// </summary>
        public static async Task<UserMeetMeConferencingGetConferenceResponse19> UserMeetMeConferencingGetConferenceRequest19Async(this OcipClient client, UserMeetMeConferencingGetConferenceRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserMeetMeConferencingGetConferenceResponse19;
        }
        /// <summary>
        /// Get the information of a conference owned by the user.
        /// The response is either UserMeetMeConferencingGetConferenceResponse20 or ErrorResponse.
        /// 
        /// Replaced by: UserMeetMeConferencingGetConferenceRequest23
        /// </summary>
        [Obsolete("This method is deprecated. Use UserMeetMeConferencingGetConferenceRequest20Async instead.")]
        public static async Task<UserMeetMeConferencingGetConferenceResponse20> UserMeetMeConferencingGetConferenceRequest20(this OcipClient client, UserMeetMeConferencingGetConferenceRequest20 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserMeetMeConferencingGetConferenceResponse20;
        }

        /// <summary>
        /// Get the information of a conference owned by the user.
        /// The response is either UserMeetMeConferencingGetConferenceResponse20 or ErrorResponse.
        /// 
        /// Replaced by: UserMeetMeConferencingGetConferenceRequest23
        /// </summary>
        public static async Task<UserMeetMeConferencingGetConferenceResponse20> UserMeetMeConferencingGetConferenceRequest20Async(this OcipClient client, UserMeetMeConferencingGetConferenceRequest20 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserMeetMeConferencingGetConferenceResponse20;
        }
        /// <summary>
        /// Modify an existing custom greeting audio file.
        /// The response is either SuccessResponse or
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserMeetMeConferencingModifyConferenceGreetingRequestAsync instead.")]
        public static async Task<SuccessResponse> UserMeetMeConferencingModifyConferenceGreetingRequest(this OcipClient client, UserMeetMeConferencingModifyConferenceGreetingRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify an existing custom greeting audio file.
        /// The response is either SuccessResponse or
        /// ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserMeetMeConferencingModifyConferenceGreetingRequestAsync(this OcipClient client, UserMeetMeConferencingModifyConferenceGreetingRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify a user. The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserModifyRequest14Async instead.")]
        public static async Task<SuccessResponse> UserModifyRequest14(this OcipClient client, UserModifyRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a user. The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserModifyRequest14Async(this OcipClient client, UserModifyRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify a user. The response is either SuccessResponse or ErrorResponse.
        /// Replaced by: UserModifyRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use UserModifyRequest14sp9Async instead.")]
        public static async Task<SuccessResponse> UserModifyRequest14sp9(this OcipClient client, UserModifyRequest14sp9 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a user. The response is either SuccessResponse or ErrorResponse.
        /// Replaced by: UserModifyRequest16
        /// </summary>
        public static async Task<SuccessResponse> UserModifyRequest14sp9Async(this OcipClient client, UserModifyRequest14sp9 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Replaced by: UserModifyRequest17sp4
        /// 
        /// Request to modify a user.
        /// When oldPassword is specified, all password rule applies. If oldPassword in not specified,
        /// any password rule related to old password does not apply.
        /// The request will fail if officeZoneName or primaryZoneName is present but the Location-Based Calling Restrictions service is not assigned to the user.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserModifyRequest16Async instead.")]
        public static async Task<SuccessResponse> UserModifyRequest16(this OcipClient client, UserModifyRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Replaced by: UserModifyRequest17sp4
        /// 
        /// Request to modify a user.
        /// When oldPassword is specified, all password rule applies. If oldPassword in not specified,
        /// any password rule related to old password does not apply.
        /// The request will fail if officeZoneName or primaryZoneName is present but the Location-Based Calling Restrictions service is not assigned to the user.
        /// The response is either SuccessResponse or ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserModifyRequest16Async(this OcipClient client, UserModifyRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to modify a user.
        /// When oldPassword is specified, all password rule applies. If oldPassword in not specified,
        /// any password rule related to old password does not apply.
        /// The request will fail if officeZoneName or primaryZoneName is present but the Location-Based Calling Restrictions service is not assigned to the user.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in AS data mode and ignored in XS data mode:
        /// contact[2]-contact[5]
        /// nameDialingName
        /// alternateUserIdList
        /// The impId and impPassword are accepted when the Third-Party IMP service is assigned to the user;
        /// when Integrated IMP service is assigned to the user and active, only the impPassword is accepted;
        /// all other cases, the request fails if either field is changed.
        /// 
        /// Replaced by: UserModifyRequest21
        /// </summary>
        [Obsolete("This method is deprecated. Use UserModifyRequest17sp4Async instead.")]
        public static async Task<SuccessResponse> UserModifyRequest17sp4(this OcipClient client, UserModifyRequest17sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Request to modify a user.
        /// When oldPassword is specified, all password rule applies. If oldPassword in not specified,
        /// any password rule related to old password does not apply.
        /// The request will fail if officeZoneName or primaryZoneName is present but the Location-Based Calling Restrictions service is not assigned to the user.
        /// The response is either SuccessResponse or ErrorResponse.
        /// The following elements are only used in AS data mode and ignored in XS data mode:
        /// contact[2]-contact[5]
        /// nameDialingName
        /// alternateUserIdList
        /// The impId and impPassword are accepted when the Third-Party IMP service is assigned to the user;
        /// when Integrated IMP service is assigned to the user and active, only the impPassword is accepted;
        /// all other cases, the request fails if either field is changed.
        /// 
        /// Replaced by: UserModifyRequest21
        /// </summary>
        public static async Task<SuccessResponse> UserModifyRequest17sp4Async(this OcipClient client, UserModifyRequest17sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request the user level data associated with Music On Hold User.
        /// The response is either a UserMusicOnHoldUserGetResponse or an
        /// ErrorResponse.
        /// Replaced By: UserMusicOnHoldUserGetRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use UserMusicOnHoldUserGetRequestAsync instead.")]
        public static async Task<UserMusicOnHoldUserGetResponse> UserMusicOnHoldUserGetRequest(this OcipClient client, UserMusicOnHoldUserGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserMusicOnHoldUserGetResponse;
        }

        /// <summary>
        /// Request the user level data associated with Music On Hold User.
        /// The response is either a UserMusicOnHoldUserGetResponse or an
        /// ErrorResponse.
        /// Replaced By: UserMusicOnHoldUserGetRequest16
        /// </summary>
        public static async Task<UserMusicOnHoldUserGetResponse> UserMusicOnHoldUserGetRequestAsync(this OcipClient client, UserMusicOnHoldUserGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserMusicOnHoldUserGetResponse;
        }
        /// <summary>
        /// Modify data for Music On Hold User.
        /// The response is either a SuccessResponse or an
        /// ErrorResponse.
        /// Replaced By: UserMusicOnHoldUserModifyRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use UserMusicOnHoldUserModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> UserMusicOnHoldUserModifyRequest(this OcipClient client, UserMusicOnHoldUserModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify data for Music On Hold User.
        /// The response is either a SuccessResponse or an
        /// ErrorResponse.
        /// Replaced By: UserMusicOnHoldUserModifyRequest16
        /// </summary>
        public static async Task<SuccessResponse> UserMusicOnHoldUserModifyRequestAsync(this OcipClient client, UserMusicOnHoldUserModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Request to get the User Personal Assistant information.
        /// The response is either a UserPersonalAssistantGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: UserPersonalAssistantGetRequest22
        /// </summary>
        [Obsolete("This method is deprecated. Use UserPersonalAssistantGetRequestAsync instead.")]
        public static async Task<UserPersonalAssistantGetResponse> UserPersonalAssistantGetRequest(this OcipClient client, UserPersonalAssistantGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserPersonalAssistantGetResponse;
        }

        /// <summary>
        /// Request to get the User Personal Assistant information.
        /// The response is either a UserPersonalAssistantGetResponse or an ErrorResponse.
        /// 
        /// Replaced by: UserPersonalAssistantGetRequest22
        /// </summary>
        public static async Task<UserPersonalAssistantGetResponse> UserPersonalAssistantGetRequestAsync(this OcipClient client, UserPersonalAssistantGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserPersonalAssistantGetResponse;
        }
        /// <summary>
        /// Add a criteria to the user's priority alert service.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserPriorityAlertAddCriteriaRequestAsync instead.")]
        public static async Task<SuccessResponse> UserPriorityAlertAddCriteriaRequest(this OcipClient client, UserPriorityAlertAddCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a criteria to the user's priority alert service.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserPriorityAlertAddCriteriaRequestAsync(this OcipClient client, UserPriorityAlertAddCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a criteria for the user's priority alert service.
        /// The response is either a UserPriorityAlertGetCriteriaResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserPriorityAlertGetCriteriaRequestAsync instead.")]
        public static async Task<UserPriorityAlertGetCriteriaResponse> UserPriorityAlertGetCriteriaRequest(this OcipClient client, UserPriorityAlertGetCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserPriorityAlertGetCriteriaResponse;
        }

        /// <summary>
        /// Get a criteria for the user's priority alert service.
        /// The response is either a UserPriorityAlertGetCriteriaResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserPriorityAlertGetCriteriaResponse> UserPriorityAlertGetCriteriaRequestAsync(this OcipClient client, UserPriorityAlertGetCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserPriorityAlertGetCriteriaResponse;
        }
        /// <summary>
        /// Request the user level data associated with Privacy.
        /// The response is either a UserPrivacyGetResponse or an
        /// ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserPrivacyGetRequestAsync instead.")]
        public static async Task<UserPrivacyGetResponse> UserPrivacyGetRequest(this OcipClient client, UserPrivacyGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserPrivacyGetResponse;
        }

        /// <summary>
        /// Request the user level data associated with Privacy.
        /// The response is either a UserPrivacyGetResponse or an
        /// ErrorResponse.
        /// </summary>
        public static async Task<UserPrivacyGetResponse> UserPrivacyGetRequestAsync(this OcipClient client, UserPrivacyGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserPrivacyGetResponse;
        }
        /// <summary>
        /// Get the push notification settings for a user.
        /// The response is either UserPushNotificationGetResponse or ErrorResponse.
        /// 
        /// Replaced by: UserPushNotificationRequest24
        /// </summary>
        [Obsolete("This method is deprecated. Use UserPushNotificationGetRequestAsync instead.")]
        public static async Task<UserPushNotificationGetResponse> UserPushNotificationGetRequest(this OcipClient client, UserPushNotificationGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserPushNotificationGetResponse;
        }

        /// <summary>
        /// Get the push notification settings for a user.
        /// The response is either UserPushNotificationGetResponse or ErrorResponse.
        /// 
        /// Replaced by: UserPushNotificationRequest24
        /// </summary>
        public static async Task<UserPushNotificationGetResponse> UserPushNotificationGetRequestAsync(this OcipClient client, UserPushNotificationGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserPushNotificationGetResponse;
        }
        /// <summary>
        /// Get the list of a user schedules. The list can be filtered by schedule type.
        /// The response is either a UserScheduleGetListResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserScheduleGetListRequestAsync instead.")]
        public static async Task<UserScheduleGetListResponse> UserScheduleGetListRequest(this OcipClient client, UserScheduleGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserScheduleGetListResponse;
        }

        /// <summary>
        /// Get the list of a user schedules. The list can be filtered by schedule type.
        /// The response is either a UserScheduleGetListResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserScheduleGetListResponse> UserScheduleGetListRequestAsync(this OcipClient client, UserScheduleGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserScheduleGetListResponse;
        }
        /// <summary>
        /// Get a user's Security Classifications configuration.
        /// The response is either UserSecurityClassificationGetResponse or ErrorResponse.
        /// 
        /// Replaced By: UserSecurityClassificationGetRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSecurityClassificationGetRequestAsync instead.")]
        public static async Task<UserSecurityClassificationGetResponse> UserSecurityClassificationGetRequest(this OcipClient client, UserSecurityClassificationGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserSecurityClassificationGetResponse;
        }

        /// <summary>
        /// Get a user's Security Classifications configuration.
        /// The response is either UserSecurityClassificationGetResponse or ErrorResponse.
        /// 
        /// Replaced By: UserSecurityClassificationGetRequest22.
        /// </summary>
        public static async Task<UserSecurityClassificationGetResponse> UserSecurityClassificationGetRequestAsync(this OcipClient client, UserSecurityClassificationGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserSecurityClassificationGetResponse;
        }
        /// <summary>
        /// Add a criteria to the user's selective call acceptance service.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSelectiveCallAcceptanceAddCriteriaRequestAsync instead.")]
        public static async Task<SuccessResponse> UserSelectiveCallAcceptanceAddCriteriaRequest(this OcipClient client, UserSelectiveCallAcceptanceAddCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a criteria to the user's selective call acceptance service.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserSelectiveCallAcceptanceAddCriteriaRequestAsync(this OcipClient client, UserSelectiveCallAcceptanceAddCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a criteria for the user's selective call acceptance service.
        /// The response is either a UserSelectiveCallAcceptanceGetCriteriaResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSelectiveCallAcceptanceGetCriteriaRequestAsync instead.")]
        public static async Task<UserSelectiveCallAcceptanceGetCriteriaResponse> UserSelectiveCallAcceptanceGetCriteriaRequest(this OcipClient client, UserSelectiveCallAcceptanceGetCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserSelectiveCallAcceptanceGetCriteriaResponse;
        }

        /// <summary>
        /// Get a criteria for the user's selective call acceptance service.
        /// The response is either a UserSelectiveCallAcceptanceGetCriteriaResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserSelectiveCallAcceptanceGetCriteriaResponse> UserSelectiveCallAcceptanceGetCriteriaRequestAsync(this OcipClient client, UserSelectiveCallAcceptanceGetCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserSelectiveCallAcceptanceGetCriteriaResponse;
        }
        /// <summary>
        /// Add a criteria to the user's selective call rejection service.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSelectiveCallRejectionAddCriteriaRequestAsync instead.")]
        public static async Task<SuccessResponse> UserSelectiveCallRejectionAddCriteriaRequest(this OcipClient client, UserSelectiveCallRejectionAddCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a criteria to the user's selective call rejection service.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserSelectiveCallRejectionAddCriteriaRequestAsync(this OcipClient client, UserSelectiveCallRejectionAddCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a criteria for the user's selective call rejection service.
        /// The response is either a UserSelectiveCallRejectionGetCriteriaResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSelectiveCallRejectionGetCriteriaRequestAsync instead.")]
        public static async Task<UserSelectiveCallRejectionGetCriteriaResponse> UserSelectiveCallRejectionGetCriteriaRequest(this OcipClient client, UserSelectiveCallRejectionGetCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserSelectiveCallRejectionGetCriteriaResponse;
        }

        /// <summary>
        /// Get a criteria for the user's selective call rejection service.
        /// The response is either a UserSelectiveCallRejectionGetCriteriaResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserSelectiveCallRejectionGetCriteriaResponse> UserSelectiveCallRejectionGetCriteriaRequestAsync(this OcipClient client, UserSelectiveCallRejectionGetCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserSelectiveCallRejectionGetCriteriaResponse;
        }
        /// <summary>
        /// Get a criteria for the user's selective call rejection service.
        /// The response is either a UserSelectiveCallRejectionGetCriteriaResponse16 or an ErrorResponse.
        /// Replaced by: UserSelectiveCallRejectionGetCriteriaRequest16sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSelectiveCallRejectionGetCriteriaRequest16Async instead.")]
        public static async Task<UserSelectiveCallRejectionGetCriteriaResponse16> UserSelectiveCallRejectionGetCriteriaRequest16(this OcipClient client, UserSelectiveCallRejectionGetCriteriaRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserSelectiveCallRejectionGetCriteriaResponse16;
        }

        /// <summary>
        /// Get a criteria for the user's selective call rejection service.
        /// The response is either a UserSelectiveCallRejectionGetCriteriaResponse16 or an ErrorResponse.
        /// Replaced by: UserSelectiveCallRejectionGetCriteriaRequest16sp1
        /// </summary>
        public static async Task<UserSelectiveCallRejectionGetCriteriaResponse16> UserSelectiveCallRejectionGetCriteriaRequest16Async(this OcipClient client, UserSelectiveCallRejectionGetCriteriaRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserSelectiveCallRejectionGetCriteriaResponse16;
        }
        /// <summary>
        /// Modify a criteria for the user's selective call rejection service.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSelectiveCallRejectionModifyCriteriaRequestAsync instead.")]
        public static async Task<SuccessResponse> UserSelectiveCallRejectionModifyCriteriaRequest(this OcipClient client, UserSelectiveCallRejectionModifyCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a criteria for the user's selective call rejection service.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserSelectiveCallRejectionModifyCriteriaRequestAsync(this OcipClient client, UserSelectiveCallRejectionModifyCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a criteria to the user's sequential ring service.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSequentialRingAddCriteriaRequestAsync instead.")]
        public static async Task<SuccessResponse> UserSequentialRingAddCriteriaRequest(this OcipClient client, UserSequentialRingAddCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a criteria to the user's sequential ring service.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserSequentialRingAddCriteriaRequestAsync(this OcipClient client, UserSequentialRingAddCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get a criteria for the user's sequential ring service.
        /// The response is either a UserSequentialRingGetCriteriaResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSequentialRingGetCriteriaRequestAsync instead.")]
        public static async Task<UserSequentialRingGetCriteriaResponse> UserSequentialRingGetCriteriaRequest(this OcipClient client, UserSequentialRingGetCriteriaRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserSequentialRingGetCriteriaResponse;
        }

        /// <summary>
        /// Get a criteria for the user's sequential ring service.
        /// The response is either a UserSequentialRingGetCriteriaResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserSequentialRingGetCriteriaResponse> UserSequentialRingGetCriteriaRequestAsync(this OcipClient client, UserSequentialRingGetCriteriaRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserSequentialRingGetCriteriaResponse;
        }
        /// <summary>
        /// Get the user's sequential ring service setting.
        /// The response is either a UserSequentialRingGetResponse13mp16 or an ErrorResponse.
        /// Replaced By: UserSequentialRingGetRequest14sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSequentialRingGetRequest13mp16Async instead.")]
        public static async Task<UserSequentialRingGetResponse13mp16> UserSequentialRingGetRequest13mp16(this OcipClient client, UserSequentialRingGetRequest13mp16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserSequentialRingGetResponse13mp16;
        }

        /// <summary>
        /// Get the user's sequential ring service setting.
        /// The response is either a UserSequentialRingGetResponse13mp16 or an ErrorResponse.
        /// Replaced By: UserSequentialRingGetRequest14sp4
        /// </summary>
        public static async Task<UserSequentialRingGetResponse13mp16> UserSequentialRingGetRequest13mp16Async(this OcipClient client, UserSequentialRingGetRequest13mp16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserSequentialRingGetResponse13mp16;
        }
        /// <summary>
        /// Associate an access device instance to the user's Shared Call Appearance.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSharedCallAppearanceAddEndpointRequest14Async instead.")]
        public static async Task<SuccessResponse> UserSharedCallAppearanceAddEndpointRequest14(this OcipClient client, UserSharedCallAppearanceAddEndpointRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Associate an access device instance to the user's Shared Call Appearance.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserSharedCallAppearanceAddEndpointRequest14Async(this OcipClient client, UserSharedCallAppearanceAddEndpointRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Associate an access device instance to the user's Shared Call Appearance.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: UserSharedCallAppearanceAddEndpointRequest21 in XS data mode
        /// Replaced by: UserSharedCallAppearanceAddEndpointRequest22 in AS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSharedCallAppearanceAddEndpointRequest14sp2Async instead.")]
        public static async Task<SuccessResponse> UserSharedCallAppearanceAddEndpointRequest14sp2(this OcipClient client, UserSharedCallAppearanceAddEndpointRequest14sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Associate an access device instance to the user's Shared Call Appearance.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced by: UserSharedCallAppearanceAddEndpointRequest21 in XS data mode
        /// Replaced by: UserSharedCallAppearanceAddEndpointRequest22 in AS data mode
        /// </summary>
        public static async Task<SuccessResponse> UserSharedCallAppearanceAddEndpointRequest14sp2Async(this OcipClient client, UserSharedCallAppearanceAddEndpointRequest14sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the user's Shared Call Appearance endpoint setting.
        /// The response is either a UserSharedCallAppearanceGetEndpointResponse or an ErrorResponse.
        /// Replaced by: UserSharedCallAppearanceGetEndpointRequest21 in XS data mode
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSharedCallAppearanceGetEndpointRequestAsync instead.")]
        public static async Task<UserSharedCallAppearanceGetEndpointResponse> UserSharedCallAppearanceGetEndpointRequest(this OcipClient client, UserSharedCallAppearanceGetEndpointRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserSharedCallAppearanceGetEndpointResponse;
        }

        /// <summary>
        /// Get the user's Shared Call Appearance endpoint setting.
        /// The response is either a UserSharedCallAppearanceGetEndpointResponse or an ErrorResponse.
        /// Replaced by: UserSharedCallAppearanceGetEndpointRequest21 in XS data mode
        /// </summary>
        public static async Task<UserSharedCallAppearanceGetEndpointResponse> UserSharedCallAppearanceGetEndpointRequestAsync(this OcipClient client, UserSharedCallAppearanceGetEndpointRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserSharedCallAppearanceGetEndpointResponse;
        }
        /// <summary>
        /// Get the user's Shared Call Appearance service setting.
        /// The response is either a UserSharedCallAppearanceGetResponse14 or an ErrorResponse.
        /// Replaced By: UserSharedCallAppearanceGetRequest14sp2
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSharedCallAppearanceGetRequest14Async instead.")]
        public static async Task<UserSharedCallAppearanceGetResponse14> UserSharedCallAppearanceGetRequest14(this OcipClient client, UserSharedCallAppearanceGetRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserSharedCallAppearanceGetResponse14;
        }

        /// <summary>
        /// Get the user's Shared Call Appearance service setting.
        /// The response is either a UserSharedCallAppearanceGetResponse14 or an ErrorResponse.
        /// Replaced By: UserSharedCallAppearanceGetRequest14sp2
        /// </summary>
        public static async Task<UserSharedCallAppearanceGetResponse14> UserSharedCallAppearanceGetRequest14Async(this OcipClient client, UserSharedCallAppearanceGetRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserSharedCallAppearanceGetResponse14;
        }
        /// <summary>
        /// Get the user's Shared Call Appearance service setting.
        /// The response is either a UserSharedCallAppearanceGetResponse14sp2 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSharedCallAppearanceGetRequest14sp2Async instead.")]
        public static async Task<UserSharedCallAppearanceGetResponse14sp2> UserSharedCallAppearanceGetRequest14sp2(this OcipClient client, UserSharedCallAppearanceGetRequest14sp2 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserSharedCallAppearanceGetResponse14sp2;
        }

        /// <summary>
        /// Get the user's Shared Call Appearance service setting.
        /// The response is either a UserSharedCallAppearanceGetResponse14sp2 or an ErrorResponse.
        /// </summary>
        public static async Task<UserSharedCallAppearanceGetResponse14sp2> UserSharedCallAppearanceGetRequest14sp2Async(this OcipClient client, UserSharedCallAppearanceGetRequest14sp2 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserSharedCallAppearanceGetResponse14sp2;
        }
        /// <summary>
        /// Add a new phone number and set the answer confirmation setting.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSimultaneousRingFamilyAddPhoneNumberRequestAsync instead.")]
        public static async Task<SuccessResponse> UserSimultaneousRingFamilyAddPhoneNumberRequest(this OcipClient client, UserSimultaneousRingFamilyAddPhoneNumberRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a new phone number and set the answer confirmation setting.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserSimultaneousRingFamilyAddPhoneNumberRequestAsync(this OcipClient client, UserSimultaneousRingFamilyAddPhoneNumberRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Delete the phone number specified.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSimultaneousRingFamilyDeletePhoneNumberRequestAsync instead.")]
        public static async Task<SuccessResponse> UserSimultaneousRingFamilyDeletePhoneNumberRequest(this OcipClient client, UserSimultaneousRingFamilyDeletePhoneNumberRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Delete the phone number specified.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserSimultaneousRingFamilyDeletePhoneNumberRequestAsync(this OcipClient client, UserSimultaneousRingFamilyDeletePhoneNumberRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the answer confirmation setting for the phone number specified.
        /// The response is either a UserSimultaneousRingFamilyGetPhoneNumberResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSimultaneousRingFamilyGetPhoneNumberRequestAsync instead.")]
        public static async Task<UserSimultaneousRingFamilyGetPhoneNumberResponse> UserSimultaneousRingFamilyGetPhoneNumberRequest(this OcipClient client, UserSimultaneousRingFamilyGetPhoneNumberRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserSimultaneousRingFamilyGetPhoneNumberResponse;
        }

        /// <summary>
        /// Get the answer confirmation setting for the phone number specified.
        /// The response is either a UserSimultaneousRingFamilyGetPhoneNumberResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserSimultaneousRingFamilyGetPhoneNumberResponse> UserSimultaneousRingFamilyGetPhoneNumberRequestAsync(this OcipClient client, UserSimultaneousRingFamilyGetPhoneNumberRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserSimultaneousRingFamilyGetPhoneNumberResponse;
        }
        /// <summary>
        /// Get the user's simultaneous ring service family setting.
        /// The response is either a UserSimultaneousRingFamilyGetResponse or an ErrorResponse.
        /// Replaced By: UserSimultaneousRingFamilyGetRequest14sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSimultaneousRingFamilyGetRequestAsync instead.")]
        public static async Task<UserSimultaneousRingFamilyGetResponse> UserSimultaneousRingFamilyGetRequest(this OcipClient client, UserSimultaneousRingFamilyGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserSimultaneousRingFamilyGetResponse;
        }

        /// <summary>
        /// Get the user's simultaneous ring service family setting.
        /// The response is either a UserSimultaneousRingFamilyGetResponse or an ErrorResponse.
        /// Replaced By: UserSimultaneousRingFamilyGetRequest14sp4
        /// </summary>
        public static async Task<UserSimultaneousRingFamilyGetResponse> UserSimultaneousRingFamilyGetRequestAsync(this OcipClient client, UserSimultaneousRingFamilyGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserSimultaneousRingFamilyGetResponse;
        }
        /// <summary>
        /// Get the user's simultaneous ring service Family setting.
        /// The response is either a UserSimultaneousRingFamilyGetResponse14sp4 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSimultaneousRingFamilyGetRequest14sp4Async instead.")]
        public static async Task<UserSimultaneousRingFamilyGetResponse14sp4> UserSimultaneousRingFamilyGetRequest14sp4(this OcipClient client, UserSimultaneousRingFamilyGetRequest14sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserSimultaneousRingFamilyGetResponse14sp4;
        }

        /// <summary>
        /// Get the user's simultaneous ring service Family setting.
        /// The response is either a UserSimultaneousRingFamilyGetResponse14sp4 or an ErrorResponse.
        /// </summary>
        public static async Task<UserSimultaneousRingFamilyGetResponse14sp4> UserSimultaneousRingFamilyGetRequest14sp4Async(this OcipClient client, UserSimultaneousRingFamilyGetRequest14sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserSimultaneousRingFamilyGetResponse14sp4;
        }
        /// <summary>
        /// Modify the require confirmation setting for the destination.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSimultaneousRingFamilyModifyPhoneNumberRequestAsync instead.")]
        public static async Task<SuccessResponse> UserSimultaneousRingFamilyModifyPhoneNumberRequest(this OcipClient client, UserSimultaneousRingFamilyModifyPhoneNumberRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the require confirmation setting for the destination.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserSimultaneousRingFamilyModifyPhoneNumberRequestAsync(this OcipClient client, UserSimultaneousRingFamilyModifyPhoneNumberRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify the user's simultaneous ring family service setting.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: UserSimultaneousRingFamilyModifyRequest14sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSimultaneousRingFamilyModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> UserSimultaneousRingFamilyModifyRequest(this OcipClient client, UserSimultaneousRingFamilyModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the user's simultaneous ring family service setting.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: UserSimultaneousRingFamilyModifyRequest14sp4
        /// </summary>
        public static async Task<SuccessResponse> UserSimultaneousRingFamilyModifyRequestAsync(this OcipClient client, UserSimultaneousRingFamilyModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify the user's simultaneous ring family service setting.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSimultaneousRingFamilyModifyRequest14sp4Async instead.")]
        public static async Task<SuccessResponse> UserSimultaneousRingFamilyModifyRequest14sp4(this OcipClient client, UserSimultaneousRingFamilyModifyRequest14sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the user's simultaneous ring family service setting.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserSimultaneousRingFamilyModifyRequest14sp4Async(this OcipClient client, UserSimultaneousRingFamilyModifyRequest14sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Add a new phone number and set the answer confirmation setting.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSimultaneousRingPersonalAddPhoneNumberRequestAsync instead.")]
        public static async Task<SuccessResponse> UserSimultaneousRingPersonalAddPhoneNumberRequest(this OcipClient client, UserSimultaneousRingPersonalAddPhoneNumberRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a new phone number and set the answer confirmation setting.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserSimultaneousRingPersonalAddPhoneNumberRequestAsync(this OcipClient client, UserSimultaneousRingPersonalAddPhoneNumberRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Delete the phone number specified.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSimultaneousRingPersonalDeletePhoneNumberRequestAsync instead.")]
        public static async Task<SuccessResponse> UserSimultaneousRingPersonalDeletePhoneNumberRequest(this OcipClient client, UserSimultaneousRingPersonalDeletePhoneNumberRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Delete the phone number specified.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserSimultaneousRingPersonalDeletePhoneNumberRequestAsync(this OcipClient client, UserSimultaneousRingPersonalDeletePhoneNumberRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the answer confirmation setting for the phone number specified.
        /// The response is either a UserSimultaneousRingPersonalGetPhoneNumberResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSimultaneousRingPersonalGetPhoneNumberRequestAsync instead.")]
        public static async Task<UserSimultaneousRingPersonalGetPhoneNumberResponse> UserSimultaneousRingPersonalGetPhoneNumberRequest(this OcipClient client, UserSimultaneousRingPersonalGetPhoneNumberRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserSimultaneousRingPersonalGetPhoneNumberResponse;
        }

        /// <summary>
        /// Get the answer confirmation setting for the phone number specified.
        /// The response is either a UserSimultaneousRingPersonalGetPhoneNumberResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserSimultaneousRingPersonalGetPhoneNumberResponse> UserSimultaneousRingPersonalGetPhoneNumberRequestAsync(this OcipClient client, UserSimultaneousRingPersonalGetPhoneNumberRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserSimultaneousRingPersonalGetPhoneNumberResponse;
        }
        /// <summary>
        /// Get the user's simultaneous ring service personal setting.
        /// The response is either a UserSimultaneousRingPersonalGetResponse or an ErrorResponse.
        /// Replaced By: UserSimultaneousRingPersonalGetRequest14sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSimultaneousRingPersonalGetRequestAsync instead.")]
        public static async Task<UserSimultaneousRingPersonalGetResponse> UserSimultaneousRingPersonalGetRequest(this OcipClient client, UserSimultaneousRingPersonalGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserSimultaneousRingPersonalGetResponse;
        }

        /// <summary>
        /// Get the user's simultaneous ring service personal setting.
        /// The response is either a UserSimultaneousRingPersonalGetResponse or an ErrorResponse.
        /// Replaced By: UserSimultaneousRingPersonalGetRequest14sp4
        /// </summary>
        public static async Task<UserSimultaneousRingPersonalGetResponse> UserSimultaneousRingPersonalGetRequestAsync(this OcipClient client, UserSimultaneousRingPersonalGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserSimultaneousRingPersonalGetResponse;
        }
        /// <summary>
        /// Get the user's simultaneous ring service personal setting.
        /// The response is either a UserSimultaneousRingPersonalGetResponse14sp4 or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSimultaneousRingPersonalGetRequest14sp4Async instead.")]
        public static async Task<UserSimultaneousRingPersonalGetResponse14sp4> UserSimultaneousRingPersonalGetRequest14sp4(this OcipClient client, UserSimultaneousRingPersonalGetRequest14sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserSimultaneousRingPersonalGetResponse14sp4;
        }

        /// <summary>
        /// Get the user's simultaneous ring service personal setting.
        /// The response is either a UserSimultaneousRingPersonalGetResponse14sp4 or an ErrorResponse.
        /// </summary>
        public static async Task<UserSimultaneousRingPersonalGetResponse14sp4> UserSimultaneousRingPersonalGetRequest14sp4Async(this OcipClient client, UserSimultaneousRingPersonalGetRequest14sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserSimultaneousRingPersonalGetResponse14sp4;
        }
        /// <summary>
        /// Modify the require confirmation setting for the destination.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSimultaneousRingPersonalModifyPhoneNumberRequestAsync instead.")]
        public static async Task<SuccessResponse> UserSimultaneousRingPersonalModifyPhoneNumberRequest(this OcipClient client, UserSimultaneousRingPersonalModifyPhoneNumberRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the require confirmation setting for the destination.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserSimultaneousRingPersonalModifyPhoneNumberRequestAsync(this OcipClient client, UserSimultaneousRingPersonalModifyPhoneNumberRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify the user's simultaneous ring personal service setting.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: UserSimultaneousRingPersonalModifyRequest14sp4
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSimultaneousRingPersonalModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> UserSimultaneousRingPersonalModifyRequest(this OcipClient client, UserSimultaneousRingPersonalModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the user's simultaneous ring personal service setting.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Replaced By: UserSimultaneousRingPersonalModifyRequest14sp4
        /// </summary>
        public static async Task<SuccessResponse> UserSimultaneousRingPersonalModifyRequestAsync(this OcipClient client, UserSimultaneousRingPersonalModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify the user's simultaneous ring personal service setting.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSimultaneousRingPersonalModifyRequest14sp4Async instead.")]
        public static async Task<SuccessResponse> UserSimultaneousRingPersonalModifyRequest14sp4(this OcipClient client, UserSimultaneousRingPersonalModifyRequest14sp4 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the user's simultaneous ring personal service setting.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserSimultaneousRingPersonalModifyRequest14sp4Async(this OcipClient client, UserSimultaneousRingPersonalModifyRequest14sp4 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the speed dial 100 settings for a user.
        /// The response is either a UserSpeedDial100GetListResponse or an ErrorResponse.
        /// 
        /// Replaced by: UserSpeedDial100GetListRequest17Sp1
        /// </summary>
        [Obsolete("This method is deprecated. Use UserSpeedDial100GetListRequestAsync instead.")]
        public static async Task<UserSpeedDial100GetListResponse> UserSpeedDial100GetListRequest(this OcipClient client, UserSpeedDial100GetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserSpeedDial100GetListResponse;
        }

        /// <summary>
        /// Get the speed dial 100 settings for a user.
        /// The response is either a UserSpeedDial100GetListResponse or an ErrorResponse.
        /// 
        /// Replaced by: UserSpeedDial100GetListRequest17Sp1
        /// </summary>
        public static async Task<UserSpeedDial100GetListResponse> UserSpeedDial100GetListRequestAsync(this OcipClient client, UserSpeedDial100GetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserSpeedDial100GetListResponse;
        }
        /// <summary>
        /// Request the user level data associated with Third-Party Voice Mail Support.
        /// The response is either a UserThirdPartyVoiceMailSupportGetResponse13mp16 or an
        /// ErrorResponse.
        /// Replaced by: UserThirdPartyVoiceMailSupportGetRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use UserThirdPartyVoiceMailSupportGetRequest13mp16Async instead.")]
        public static async Task<UserThirdPartyVoiceMailSupportGetResponse13mp16> UserThirdPartyVoiceMailSupportGetRequest13mp16(this OcipClient client, UserThirdPartyVoiceMailSupportGetRequest13mp16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserThirdPartyVoiceMailSupportGetResponse13mp16;
        }

        /// <summary>
        /// Request the user level data associated with Third-Party Voice Mail Support.
        /// The response is either a UserThirdPartyVoiceMailSupportGetResponse13mp16 or an
        /// ErrorResponse.
        /// Replaced by: UserThirdPartyVoiceMailSupportGetRequest17
        /// </summary>
        public static async Task<UserThirdPartyVoiceMailSupportGetResponse13mp16> UserThirdPartyVoiceMailSupportGetRequest13mp16Async(this OcipClient client, UserThirdPartyVoiceMailSupportGetRequest13mp16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserThirdPartyVoiceMailSupportGetResponse13mp16;
        }
        /// <summary>
        /// Add a time schedule for a user.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserTimeScheduleAddRequestAsync instead.")]
        public static async Task<SuccessResponse> UserTimeScheduleAddRequest(this OcipClient client, UserTimeScheduleAddRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Add a time schedule for a user.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserTimeScheduleAddRequestAsync(this OcipClient client, UserTimeScheduleAddRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Delete a user time schedule.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserTimeScheduleDeleteRequestAsync instead.")]
        public static async Task<SuccessResponse> UserTimeScheduleDeleteRequest(this OcipClient client, UserTimeScheduleDeleteRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Delete a user time schedule.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserTimeScheduleDeleteRequestAsync(this OcipClient client, UserTimeScheduleDeleteRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get all time schedules for a user. This includes the user's personal schedules and user's group's
        /// schedules.
        /// The response is either a UserTimeScheduleGetListResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserTimeScheduleGetListRequestAsync instead.")]
        public static async Task<UserTimeScheduleGetListResponse> UserTimeScheduleGetListRequest(this OcipClient client, UserTimeScheduleGetListRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserTimeScheduleGetListResponse;
        }

        /// <summary>
        /// Get all time schedules for a user. This includes the user's personal schedules and user's group's
        /// schedules.
        /// The response is either a UserTimeScheduleGetListResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserTimeScheduleGetListResponse> UserTimeScheduleGetListRequestAsync(this OcipClient client, UserTimeScheduleGetListRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserTimeScheduleGetListResponse;
        }
        /// <summary>
        /// Request to get a user time schedule.
        /// The response is either a UserTimeScheduleGetResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserTimeScheduleGetRequestAsync instead.")]
        public static async Task<UserTimeScheduleGetResponse> UserTimeScheduleGetRequest(this OcipClient client, UserTimeScheduleGetRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserTimeScheduleGetResponse;
        }

        /// <summary>
        /// Request to get a user time schedule.
        /// The response is either a UserTimeScheduleGetResponse or an ErrorResponse.
        /// </summary>
        public static async Task<UserTimeScheduleGetResponse> UserTimeScheduleGetRequestAsync(this OcipClient client, UserTimeScheduleGetRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserTimeScheduleGetResponse;
        }
        /// <summary>
        /// Modify a user time schedule.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserTimeScheduleModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> UserTimeScheduleModifyRequest(this OcipClient client, UserTimeScheduleModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify a user time schedule.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserTimeScheduleModifyRequestAsync(this OcipClient client, UserTimeScheduleModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Get the user's Video Add-On service setting.
        /// The response is either a UserVideoAddOnGetResponse14 or an ErrorResponse.
        /// 
        /// Replaced by: UserVideoAddOnGetRequest19.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserVideoAddOnGetRequest14Async instead.")]
        public static async Task<UserVideoAddOnGetResponse14> UserVideoAddOnGetRequest14(this OcipClient client, UserVideoAddOnGetRequest14 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserVideoAddOnGetResponse14;
        }

        /// <summary>
        /// Get the user's Video Add-On service setting.
        /// The response is either a UserVideoAddOnGetResponse14 or an ErrorResponse.
        /// 
        /// Replaced by: UserVideoAddOnGetRequest19.
        /// </summary>
        public static async Task<UserVideoAddOnGetResponse14> UserVideoAddOnGetRequest14Async(this OcipClient client, UserVideoAddOnGetRequest14 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserVideoAddOnGetResponse14;
        }
        /// <summary>
        /// Get the user's Video Add-On service setting.
        /// The response is either a UserVideoAddOnGetResponse19 or an ErrorResponse.
        /// 
        /// Replaced by: UserVideoAddOnGetRequest22.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserVideoAddOnGetRequest19Async instead.")]
        public static async Task<UserVideoAddOnGetResponse19> UserVideoAddOnGetRequest19(this OcipClient client, UserVideoAddOnGetRequest19 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserVideoAddOnGetResponse19;
        }

        /// <summary>
        /// Get the user's Video Add-On service setting.
        /// The response is either a UserVideoAddOnGetResponse19 or an ErrorResponse.
        /// 
        /// Replaced by: UserVideoAddOnGetRequest22.
        /// </summary>
        public static async Task<UserVideoAddOnGetResponse19> UserVideoAddOnGetRequest19Async(this OcipClient client, UserVideoAddOnGetRequest19 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserVideoAddOnGetResponse19;
        }
        /// <summary>
        /// Get the user's voice messaging advanced voice management service setting.
        /// The response is either a UserVoiceMessagingUserGetAdvancedVoiceManagementResponse or an ErrorResponse.
        /// Replaced By: UserVoiceMessagingUserGetAdvancedVoiceManagementRequest14sp3
        /// </summary>
        [Obsolete("This method is deprecated. Use UserVoiceMessagingUserGetAdvancedVoiceManagementRequestAsync instead.")]
        public static async Task<UserVoiceMessagingUserGetAdvancedVoiceManagementResponse> UserVoiceMessagingUserGetAdvancedVoiceManagementRequest(this OcipClient client, UserVoiceMessagingUserGetAdvancedVoiceManagementRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserVoiceMessagingUserGetAdvancedVoiceManagementResponse;
        }

        /// <summary>
        /// Get the user's voice messaging advanced voice management service setting.
        /// The response is either a UserVoiceMessagingUserGetAdvancedVoiceManagementResponse or an ErrorResponse.
        /// Replaced By: UserVoiceMessagingUserGetAdvancedVoiceManagementRequest14sp3
        /// </summary>
        public static async Task<UserVoiceMessagingUserGetAdvancedVoiceManagementResponse> UserVoiceMessagingUserGetAdvancedVoiceManagementRequestAsync(this OcipClient client, UserVoiceMessagingUserGetAdvancedVoiceManagementRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserVoiceMessagingUserGetAdvancedVoiceManagementResponse;
        }
        /// <summary>
        /// Get the user's voice messaging greeting information.
        /// The response is either a UserVoiceMessagingUserGetGreetingResponse13mp16 or an ErrorResponse.
        /// Replaced By: UserVoiceMessagingUserGetGreetingRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use UserVoiceMessagingUserGetGreetingRequest13mp16Async instead.")]
        public static async Task<UserVoiceMessagingUserGetGreetingResponse13mp16> UserVoiceMessagingUserGetGreetingRequest13mp16(this OcipClient client, UserVoiceMessagingUserGetGreetingRequest13mp16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserVoiceMessagingUserGetGreetingResponse13mp16;
        }

        /// <summary>
        /// Get the user's voice messaging greeting information.
        /// The response is either a UserVoiceMessagingUserGetGreetingResponse13mp16 or an ErrorResponse.
        /// Replaced By: UserVoiceMessagingUserGetGreetingRequest16
        /// </summary>
        public static async Task<UserVoiceMessagingUserGetGreetingResponse13mp16> UserVoiceMessagingUserGetGreetingRequest13mp16Async(this OcipClient client, UserVoiceMessagingUserGetGreetingRequest13mp16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserVoiceMessagingUserGetGreetingResponse13mp16;
        }
        /// <summary>
        /// Get the user's voice messaging greeting information.
        /// The response is either a UserVoiceMessagingUserGetGreetingResponse16 or an ErrorResponse.
        /// 
        /// Replaced by: UserVoiceMessagingUserGetGreetingRequest18
        /// </summary>
        [Obsolete("This method is deprecated. Use UserVoiceMessagingUserGetGreetingRequest16Async instead.")]
        public static async Task<UserVoiceMessagingUserGetGreetingResponse16> UserVoiceMessagingUserGetGreetingRequest16(this OcipClient client, UserVoiceMessagingUserGetGreetingRequest16 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserVoiceMessagingUserGetGreetingResponse16;
        }

        /// <summary>
        /// Get the user's voice messaging greeting information.
        /// The response is either a UserVoiceMessagingUserGetGreetingResponse16 or an ErrorResponse.
        /// 
        /// Replaced by: UserVoiceMessagingUserGetGreetingRequest18
        /// </summary>
        public static async Task<UserVoiceMessagingUserGetGreetingResponse16> UserVoiceMessagingUserGetGreetingRequest16Async(this OcipClient client, UserVoiceMessagingUserGetGreetingRequest16 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserVoiceMessagingUserGetGreetingResponse16;
        }
        /// <summary>
        /// Get the user's voice messaging voice management service settings.
        /// The response is either a UserVoiceMessagingUserGetVoiceManagementResponse13mp8 or an ErrorResponse.
        /// Replaced by: UserVoiceMessagingUserGetVoiceManagementRequest17
        /// </summary>
        [Obsolete("This method is deprecated. Use UserVoiceMessagingUserGetVoiceManagementRequest13mp8Async instead.")]
        public static async Task<UserVoiceMessagingUserGetVoiceManagementResponse13mp8> UserVoiceMessagingUserGetVoiceManagementRequest13mp8(this OcipClient client, UserVoiceMessagingUserGetVoiceManagementRequest13mp8 request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserVoiceMessagingUserGetVoiceManagementResponse13mp8;
        }

        /// <summary>
        /// Get the user's voice messaging voice management service settings.
        /// The response is either a UserVoiceMessagingUserGetVoiceManagementResponse13mp8 or an ErrorResponse.
        /// Replaced by: UserVoiceMessagingUserGetVoiceManagementRequest17
        /// </summary>
        public static async Task<UserVoiceMessagingUserGetVoiceManagementResponse13mp8> UserVoiceMessagingUserGetVoiceManagementRequest13mp8Async(this OcipClient client, UserVoiceMessagingUserGetVoiceManagementRequest13mp8 request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserVoiceMessagingUserGetVoiceManagementResponse13mp8;
        }
        /// <summary>
        /// Request the user's voice portal password information.
        /// The response is either a UserVoiceMessagingUserGetVoicePortalPasswordInfoResponse or an ErrorResponse.
        /// Replaced By: UserPortalPasscodeGetInfoRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use UserVoiceMessagingUserGetVoicePortalPasswordInfoRequestAsync instead.")]
        public static async Task<UserVoiceMessagingUserGetVoicePortalPasswordInfoResponse> UserVoiceMessagingUserGetVoicePortalPasswordInfoRequest(this OcipClient client, UserVoiceMessagingUserGetVoicePortalPasswordInfoRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserVoiceMessagingUserGetVoicePortalPasswordInfoResponse;
        }

        /// <summary>
        /// Request the user's voice portal password information.
        /// The response is either a UserVoiceMessagingUserGetVoicePortalPasswordInfoResponse or an ErrorResponse.
        /// Replaced By: UserPortalPasscodeGetInfoRequest
        /// </summary>
        public static async Task<UserVoiceMessagingUserGetVoicePortalPasswordInfoResponse> UserVoiceMessagingUserGetVoicePortalPasswordInfoRequestAsync(this OcipClient client, UserVoiceMessagingUserGetVoicePortalPasswordInfoRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserVoiceMessagingUserGetVoicePortalPasswordInfoResponse;
        }
        /// <summary>
        /// Get the user's voice messaging voice portal settings.
        /// The response is either a UserVoiceMessagingUserGetVoicePortalResponse or an ErrorResponse.
        /// Replaced By: UserVoiceMessagingUserGetVoicePortalRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use UserVoiceMessagingUserGetVoicePortalRequestAsync instead.")]
        public static async Task<UserVoiceMessagingUserGetVoicePortalResponse> UserVoiceMessagingUserGetVoicePortalRequest(this OcipClient client, UserVoiceMessagingUserGetVoicePortalRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as UserVoiceMessagingUserGetVoicePortalResponse;
        }

        /// <summary>
        /// Get the user's voice messaging voice portal settings.
        /// The response is either a UserVoiceMessagingUserGetVoicePortalResponse or an ErrorResponse.
        /// Replaced By: UserVoiceMessagingUserGetVoicePortalRequest16
        /// </summary>
        public static async Task<UserVoiceMessagingUserGetVoicePortalResponse> UserVoiceMessagingUserGetVoicePortalRequestAsync(this OcipClient client, UserVoiceMessagingUserGetVoicePortalRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as UserVoiceMessagingUserGetVoicePortalResponse;
        }
        /// <summary>
        /// Modify the user's voice messaging greeting.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Engineering Note: This command is used internally by Call Processing.
        /// Replaced By: UserVoiceMessagingUserModifyGreetingRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use UserVoiceMessagingUserModifyGreetingRequestAsync instead.")]
        public static async Task<SuccessResponse> UserVoiceMessagingUserModifyGreetingRequest(this OcipClient client, UserVoiceMessagingUserModifyGreetingRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the user's voice messaging greeting.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Engineering Note: This command is used internally by Call Processing.
        /// Replaced By: UserVoiceMessagingUserModifyGreetingRequest16
        /// </summary>
        public static async Task<SuccessResponse> UserVoiceMessagingUserModifyGreetingRequestAsync(this OcipClient client, UserVoiceMessagingUserModifyGreetingRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify the user's voice messaging advanced voice management service setting.
        /// Modify a voice mail distribution list for a users voice message.
        /// Modify the user's voice messaging greeting.
        /// Modify the user's voice messaging outgoing message waiting indicator service setting.
        /// Modify the user's voice messaging voice portal settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        [Obsolete("This method is deprecated. Use UserVoiceMessagingUserModifyRequestAsync instead.")]
        public static async Task<SuccessResponse> UserVoiceMessagingUserModifyRequest(this OcipClient client, UserVoiceMessagingUserModifyRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the user's voice messaging advanced voice management service setting.
        /// Modify a voice mail distribution list for a users voice message.
        /// Modify the user's voice messaging greeting.
        /// Modify the user's voice messaging outgoing message waiting indicator service setting.
        /// Modify the user's voice messaging voice portal settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// </summary>
        public static async Task<SuccessResponse> UserVoiceMessagingUserModifyRequestAsync(this OcipClient client, UserVoiceMessagingUserModifyRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify the user's Voice Portal password
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Engineering Note: This command is used internally by Call Processing.
        /// Replaced By: UserPortalPasscodeModifyRequest
        /// </summary>
        [Obsolete("This method is deprecated. Use UserVoiceMessagingUserModifyVoicePortalPasswordRequestAsync instead.")]
        public static async Task<SuccessResponse> UserVoiceMessagingUserModifyVoicePortalPasswordRequest(this OcipClient client, UserVoiceMessagingUserModifyVoicePortalPasswordRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the user's Voice Portal password
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Engineering Note: This command is used internally by Call Processing.
        /// Replaced By: UserPortalPasscodeModifyRequest
        /// </summary>
        public static async Task<SuccessResponse> UserVoiceMessagingUserModifyVoicePortalPasswordRequestAsync(this OcipClient client, UserVoiceMessagingUserModifyVoicePortalPasswordRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }
        /// <summary>
        /// Modify the user's voice messaging voice portal settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Engineering Note: This command is used internally by Call Processing.
        /// Replaced By: UserVoiceMessagingUserModifyVoicePortalRequest16
        /// </summary>
        [Obsolete("This method is deprecated. Use UserVoiceMessagingUserModifyVoicePortalRequestAsync instead.")]
        public static async Task<SuccessResponse> UserVoiceMessagingUserModifyVoicePortalRequest(this OcipClient client, UserVoiceMessagingUserModifyVoicePortalRequest request)
        {
            return await client.CallAsync(request).ConfigureAwait(false) as SuccessResponse;
        }

        /// <summary>
        /// Modify the user's voice messaging voice portal settings.
        /// The response is either a SuccessResponse or an ErrorResponse.
        /// Engineering Note: This command is used internally by Call Processing.
        /// Replaced By: UserVoiceMessagingUserModifyVoicePortalRequest16
        /// </summary>
        public static async Task<SuccessResponse> UserVoiceMessagingUserModifyVoicePortalRequestAsync(this OcipClient client, UserVoiceMessagingUserModifyVoicePortalRequest request, CancellationToken cancellationToken = default)
        {
            return await client.CallAsync(request, cancellationToken).ConfigureAwait(false) as SuccessResponse;
        }

    }
}
